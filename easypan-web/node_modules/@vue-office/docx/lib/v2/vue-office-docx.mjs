var Fe = Object.defineProperty;
var De = Object.getOwnPropertySymbols;
var Me = Object.prototype.hasOwnProperty, Le = Object.prototype.propertyIsEnumerable;
var Ne = (K, re, C) => re in K ? Fe(K, re, { enumerable: !0, configurable: !0, writable: !0, value: C }) : K[re] = C, Ae = (K, re) => {
  for (var C in re || (re = {}))
    Me.call(re, C) && Ne(K, C, re[C]);
  if (De)
    for (var C of De(re))
      Le.call(re, C) && Ne(K, C, re[C]);
  return K;
};
import { defineComponent as je, ref as Ue, onMounted as We, watch as He } from "vue-demi";
var ke = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : {}, Ce = {}, $e = {
  get exports() {
    return Ce;
  },
  set exports(K) {
    Ce = K;
  }
};
function we(K) {
  throw new Error('Could not dynamically require "' + K + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var xe = {}, Ze = {
  get exports() {
    return xe;
  },
  set exports(K) {
    xe = K;
  }
};
/*!

JSZip v3.10.1 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/main/LICENSE
*/
var Be;
function Ve() {
  return Be || (Be = 1, function(K, re) {
    (function(C) {
      K.exports = C();
    })(function() {
      return function C(M, E, x) {
        function v(a, m) {
          if (!E[a]) {
            if (!M[a]) {
              var p = typeof we == "function" && we;
              if (!m && p)
                return p(a, !0);
              if (e)
                return e(a, !0);
              var n = new Error("Cannot find module '" + a + "'");
              throw n.code = "MODULE_NOT_FOUND", n;
            }
            var i = E[a] = { exports: {} };
            M[a][0].call(i.exports, function(b) {
              var h = M[a][1][b];
              return v(h || b);
            }, i, i.exports, C, M, E, x);
          }
          return E[a].exports;
        }
        for (var e = typeof we == "function" && we, r = 0; r < x.length; r++)
          v(x[r]);
        return v;
      }({ 1: [function(C, M, E) {
        var x = C("./utils"), v = C("./support"), e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        E.encode = function(r) {
          for (var a, m, p, n, i, b, h, d = [], f = 0, g = r.length, S = g, T = x.getTypeOf(r) !== "string"; f < r.length; )
            S = g - f, p = T ? (a = r[f++], m = f < g ? r[f++] : 0, f < g ? r[f++] : 0) : (a = r.charCodeAt(f++), m = f < g ? r.charCodeAt(f++) : 0, f < g ? r.charCodeAt(f++) : 0), n = a >> 2, i = (3 & a) << 4 | m >> 4, b = 1 < S ? (15 & m) << 2 | p >> 6 : 64, h = 2 < S ? 63 & p : 64, d.push(e.charAt(n) + e.charAt(i) + e.charAt(b) + e.charAt(h));
          return d.join("");
        }, E.decode = function(r) {
          var a, m, p, n, i, b, h = 0, d = 0, f = "data:";
          if (r.substr(0, f.length) === f)
            throw new Error("Invalid base64 input, it looks like a data url.");
          var g, S = 3 * (r = r.replace(/[^A-Za-z0-9+/=]/g, "")).length / 4;
          if (r.charAt(r.length - 1) === e.charAt(64) && S--, r.charAt(r.length - 2) === e.charAt(64) && S--, S % 1 != 0)
            throw new Error("Invalid base64 input, bad content length.");
          for (g = v.uint8array ? new Uint8Array(0 | S) : new Array(0 | S); h < r.length; )
            a = e.indexOf(r.charAt(h++)) << 2 | (n = e.indexOf(r.charAt(h++))) >> 4, m = (15 & n) << 4 | (i = e.indexOf(r.charAt(h++))) >> 2, p = (3 & i) << 6 | (b = e.indexOf(r.charAt(h++))), g[d++] = a, i !== 64 && (g[d++] = m), b !== 64 && (g[d++] = p);
          return g;
        };
      }, { "./support": 30, "./utils": 32 }], 2: [function(C, M, E) {
        var x = C("./external"), v = C("./stream/DataWorker"), e = C("./stream/Crc32Probe"), r = C("./stream/DataLengthProbe");
        function a(m, p, n, i, b) {
          this.compressedSize = m, this.uncompressedSize = p, this.crc32 = n, this.compression = i, this.compressedContent = b;
        }
        a.prototype = { getContentWorker: function() {
          var m = new v(x.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new r("data_length")), p = this;
          return m.on("end", function() {
            if (this.streamInfo.data_length !== p.uncompressedSize)
              throw new Error("Bug : uncompressed data size mismatch");
          }), m;
        }, getCompressedWorker: function() {
          return new v(x.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize", this.compressedSize).withStreamInfo("uncompressedSize", this.uncompressedSize).withStreamInfo("crc32", this.crc32).withStreamInfo("compression", this.compression);
        } }, a.createWorkerFrom = function(m, p, n) {
          return m.pipe(new e()).pipe(new r("uncompressedSize")).pipe(p.compressWorker(n)).pipe(new r("compressedSize")).withStreamInfo("compression", p);
        }, M.exports = a;
      }, { "./external": 6, "./stream/Crc32Probe": 25, "./stream/DataLengthProbe": 26, "./stream/DataWorker": 27 }], 3: [function(C, M, E) {
        var x = C("./stream/GenericWorker");
        E.STORE = { magic: "\0\0", compressWorker: function() {
          return new x("STORE compression");
        }, uncompressWorker: function() {
          return new x("STORE decompression");
        } }, E.DEFLATE = C("./flate");
      }, { "./flate": 7, "./stream/GenericWorker": 28 }], 4: [function(C, M, E) {
        var x = C("./utils"), v = function() {
          for (var e, r = [], a = 0; a < 256; a++) {
            e = a;
            for (var m = 0; m < 8; m++)
              e = 1 & e ? 3988292384 ^ e >>> 1 : e >>> 1;
            r[a] = e;
          }
          return r;
        }();
        M.exports = function(e, r) {
          return e !== void 0 && e.length ? x.getTypeOf(e) !== "string" ? function(a, m, p, n) {
            var i = v, b = n + p;
            a ^= -1;
            for (var h = n; h < b; h++)
              a = a >>> 8 ^ i[255 & (a ^ m[h])];
            return -1 ^ a;
          }(0 | r, e, e.length, 0) : function(a, m, p, n) {
            var i = v, b = n + p;
            a ^= -1;
            for (var h = n; h < b; h++)
              a = a >>> 8 ^ i[255 & (a ^ m.charCodeAt(h))];
            return -1 ^ a;
          }(0 | r, e, e.length, 0) : 0;
        };
      }, { "./utils": 32 }], 5: [function(C, M, E) {
        E.base64 = !1, E.binary = !1, E.dir = !1, E.createFolders = !0, E.date = null, E.compression = null, E.compressionOptions = null, E.comment = null, E.unixPermissions = null, E.dosPermissions = null;
      }, {}], 6: [function(C, M, E) {
        var x = null;
        x = typeof Promise != "undefined" ? Promise : C("lie"), M.exports = { Promise: x };
      }, { lie: 37 }], 7: [function(C, M, E) {
        var x = typeof Uint8Array != "undefined" && typeof Uint16Array != "undefined" && typeof Uint32Array != "undefined", v = C("pako"), e = C("./utils"), r = C("./stream/GenericWorker"), a = x ? "uint8array" : "array";
        function m(p, n) {
          r.call(this, "FlateWorker/" + p), this._pako = null, this._pakoAction = p, this._pakoOptions = n, this.meta = {};
        }
        E.magic = "\b\0", e.inherits(m, r), m.prototype.processChunk = function(p) {
          this.meta = p.meta, this._pako === null && this._createPako(), this._pako.push(e.transformTo(a, p.data), !1);
        }, m.prototype.flush = function() {
          r.prototype.flush.call(this), this._pako === null && this._createPako(), this._pako.push([], !0);
        }, m.prototype.cleanUp = function() {
          r.prototype.cleanUp.call(this), this._pako = null;
        }, m.prototype._createPako = function() {
          this._pako = new v[this._pakoAction]({ raw: !0, level: this._pakoOptions.level || -1 });
          var p = this;
          this._pako.onData = function(n) {
            p.push({ data: n, meta: p.meta });
          };
        }, E.compressWorker = function(p) {
          return new m("Deflate", p);
        }, E.uncompressWorker = function() {
          return new m("Inflate", {});
        };
      }, { "./stream/GenericWorker": 28, "./utils": 32, pako: 38 }], 8: [function(C, M, E) {
        function x(i, b) {
          var h, d = "";
          for (h = 0; h < b; h++)
            d += String.fromCharCode(255 & i), i >>>= 8;
          return d;
        }
        function v(i, b, h, d, f, g) {
          var S, T, s = i.file, o = i.compression, t = g !== a.utf8encode, l = e.transformTo("string", g(s.name)), y = e.transformTo("string", a.utf8encode(s.name)), k = s.comment, D = e.transformTo("string", g(k)), _ = e.transformTo("string", a.utf8encode(k)), P = y.length !== s.name.length, u = _.length !== k.length, R = "", G = "", L = "", q = s.dir, W = s.date, J = { crc32: 0, compressedSize: 0, uncompressedSize: 0 };
          b && !h || (J.crc32 = i.crc32, J.compressedSize = i.compressedSize, J.uncompressedSize = i.uncompressedSize);
          var z = 0;
          b && (z |= 8), t || !P && !u || (z |= 2048);
          var O = 0, Q = 0;
          q && (O |= 16), f === "UNIX" ? (Q = 798, O |= function(Z, se) {
            var ce = Z;
            return Z || (ce = se ? 16893 : 33204), (65535 & ce) << 16;
          }(s.unixPermissions, q)) : (Q = 20, O |= function(Z) {
            return 63 & (Z || 0);
          }(s.dosPermissions)), S = W.getUTCHours(), S <<= 6, S |= W.getUTCMinutes(), S <<= 5, S |= W.getUTCSeconds() / 2, T = W.getUTCFullYear() - 1980, T <<= 4, T |= W.getUTCMonth() + 1, T <<= 5, T |= W.getUTCDate(), P && (G = x(1, 1) + x(m(l), 4) + y, R += "up" + x(G.length, 2) + G), u && (L = x(1, 1) + x(m(D), 4) + _, R += "uc" + x(L.length, 2) + L);
          var V = "";
          return V += `
\0`, V += x(z, 2), V += o.magic, V += x(S, 2), V += x(T, 2), V += x(J.crc32, 4), V += x(J.compressedSize, 4), V += x(J.uncompressedSize, 4), V += x(l.length, 2), V += x(R.length, 2), { fileRecord: p.LOCAL_FILE_HEADER + V + l + R, dirRecord: p.CENTRAL_FILE_HEADER + x(Q, 2) + V + x(D.length, 2) + "\0\0\0\0" + x(O, 4) + x(d, 4) + l + R + D };
        }
        var e = C("../utils"), r = C("../stream/GenericWorker"), a = C("../utf8"), m = C("../crc32"), p = C("../signature");
        function n(i, b, h, d) {
          r.call(this, "ZipFileWorker"), this.bytesWritten = 0, this.zipComment = b, this.zipPlatform = h, this.encodeFileName = d, this.streamFiles = i, this.accumulate = !1, this.contentBuffer = [], this.dirRecords = [], this.currentSourceOffset = 0, this.entriesCount = 0, this.currentFile = null, this._sources = [];
        }
        e.inherits(n, r), n.prototype.push = function(i) {
          var b = i.meta.percent || 0, h = this.entriesCount, d = this._sources.length;
          this.accumulate ? this.contentBuffer.push(i) : (this.bytesWritten += i.data.length, r.prototype.push.call(this, { data: i.data, meta: { currentFile: this.currentFile, percent: h ? (b + 100 * (h - d - 1)) / h : 100 } }));
        }, n.prototype.openedSource = function(i) {
          this.currentSourceOffset = this.bytesWritten, this.currentFile = i.file.name;
          var b = this.streamFiles && !i.file.dir;
          if (b) {
            var h = v(i, b, !1, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
            this.push({ data: h.fileRecord, meta: { percent: 0 } });
          } else
            this.accumulate = !0;
        }, n.prototype.closedSource = function(i) {
          this.accumulate = !1;
          var b = this.streamFiles && !i.file.dir, h = v(i, b, !0, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
          if (this.dirRecords.push(h.dirRecord), b)
            this.push({ data: function(d) {
              return p.DATA_DESCRIPTOR + x(d.crc32, 4) + x(d.compressedSize, 4) + x(d.uncompressedSize, 4);
            }(i), meta: { percent: 100 } });
          else
            for (this.push({ data: h.fileRecord, meta: { percent: 0 } }); this.contentBuffer.length; )
              this.push(this.contentBuffer.shift());
          this.currentFile = null;
        }, n.prototype.flush = function() {
          for (var i = this.bytesWritten, b = 0; b < this.dirRecords.length; b++)
            this.push({ data: this.dirRecords[b], meta: { percent: 100 } });
          var h = this.bytesWritten - i, d = function(f, g, S, T, s) {
            var o = e.transformTo("string", s(T));
            return p.CENTRAL_DIRECTORY_END + "\0\0\0\0" + x(f, 2) + x(f, 2) + x(g, 4) + x(S, 4) + x(o.length, 2) + o;
          }(this.dirRecords.length, h, i, this.zipComment, this.encodeFileName);
          this.push({ data: d, meta: { percent: 100 } });
        }, n.prototype.prepareNextSource = function() {
          this.previous = this._sources.shift(), this.openedSource(this.previous.streamInfo), this.isPaused ? this.previous.pause() : this.previous.resume();
        }, n.prototype.registerPrevious = function(i) {
          this._sources.push(i);
          var b = this;
          return i.on("data", function(h) {
            b.processChunk(h);
          }), i.on("end", function() {
            b.closedSource(b.previous.streamInfo), b._sources.length ? b.prepareNextSource() : b.end();
          }), i.on("error", function(h) {
            b.error(h);
          }), this;
        }, n.prototype.resume = function() {
          return !!r.prototype.resume.call(this) && (!this.previous && this._sources.length ? (this.prepareNextSource(), !0) : this.previous || this._sources.length || this.generatedError ? void 0 : (this.end(), !0));
        }, n.prototype.error = function(i) {
          var b = this._sources;
          if (!r.prototype.error.call(this, i))
            return !1;
          for (var h = 0; h < b.length; h++)
            try {
              b[h].error(i);
            } catch (d) {
            }
          return !0;
        }, n.prototype.lock = function() {
          r.prototype.lock.call(this);
          for (var i = this._sources, b = 0; b < i.length; b++)
            i[b].lock();
        }, M.exports = n;
      }, { "../crc32": 4, "../signature": 23, "../stream/GenericWorker": 28, "../utf8": 31, "../utils": 32 }], 9: [function(C, M, E) {
        var x = C("../compressions"), v = C("./ZipFileWorker");
        E.generateWorker = function(e, r, a) {
          var m = new v(r.streamFiles, a, r.platform, r.encodeFileName), p = 0;
          try {
            e.forEach(function(n, i) {
              p++;
              var b = function(g, S) {
                var T = g || S, s = x[T];
                if (!s)
                  throw new Error(T + " is not a valid compression method !");
                return s;
              }(i.options.compression, r.compression), h = i.options.compressionOptions || r.compressionOptions || {}, d = i.dir, f = i.date;
              i._compressWorker(b, h).withStreamInfo("file", { name: n, dir: d, date: f, comment: i.comment || "", unixPermissions: i.unixPermissions, dosPermissions: i.dosPermissions }).pipe(m);
            }), m.entriesCount = p;
          } catch (n) {
            m.error(n);
          }
          return m;
        };
      }, { "../compressions": 3, "./ZipFileWorker": 8 }], 10: [function(C, M, E) {
        function x() {
          if (!(this instanceof x))
            return new x();
          if (arguments.length)
            throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");
          this.files = /* @__PURE__ */ Object.create(null), this.comment = null, this.root = "", this.clone = function() {
            var v = new x();
            for (var e in this)
              typeof this[e] != "function" && (v[e] = this[e]);
            return v;
          };
        }
        (x.prototype = C("./object")).loadAsync = C("./load"), x.support = C("./support"), x.defaults = C("./defaults"), x.version = "3.10.1", x.loadAsync = function(v, e) {
          return new x().loadAsync(v, e);
        }, x.external = C("./external"), M.exports = x;
      }, { "./defaults": 5, "./external": 6, "./load": 11, "./object": 15, "./support": 30 }], 11: [function(C, M, E) {
        var x = C("./utils"), v = C("./external"), e = C("./utf8"), r = C("./zipEntries"), a = C("./stream/Crc32Probe"), m = C("./nodejsUtils");
        function p(n) {
          return new v.Promise(function(i, b) {
            var h = n.decompressed.getContentWorker().pipe(new a());
            h.on("error", function(d) {
              b(d);
            }).on("end", function() {
              h.streamInfo.crc32 !== n.decompressed.crc32 ? b(new Error("Corrupted zip : CRC32 mismatch")) : i();
            }).resume();
          });
        }
        M.exports = function(n, i) {
          var b = this;
          return i = x.extend(i || {}, { base64: !1, checkCRC32: !1, optimizedBinaryString: !1, createFolders: !1, decodeFileName: e.utf8decode }), m.isNode && m.isStream(n) ? v.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")) : x.prepareContent("the loaded zip file", n, !0, i.optimizedBinaryString, i.base64).then(function(h) {
            var d = new r(i);
            return d.load(h), d;
          }).then(function(h) {
            var d = [v.Promise.resolve(h)], f = h.files;
            if (i.checkCRC32)
              for (var g = 0; g < f.length; g++)
                d.push(p(f[g]));
            return v.Promise.all(d);
          }).then(function(h) {
            for (var d = h.shift(), f = d.files, g = 0; g < f.length; g++) {
              var S = f[g], T = S.fileNameStr, s = x.resolve(S.fileNameStr);
              b.file(s, S.decompressed, { binary: !0, optimizedBinaryString: !0, date: S.date, dir: S.dir, comment: S.fileCommentStr.length ? S.fileCommentStr : null, unixPermissions: S.unixPermissions, dosPermissions: S.dosPermissions, createFolders: i.createFolders }), S.dir || (b.file(s).unsafeOriginalName = T);
            }
            return d.zipComment.length && (b.comment = d.zipComment), b;
          });
        };
      }, { "./external": 6, "./nodejsUtils": 14, "./stream/Crc32Probe": 25, "./utf8": 31, "./utils": 32, "./zipEntries": 33 }], 12: [function(C, M, E) {
        var x = C("../utils"), v = C("../stream/GenericWorker");
        function e(r, a) {
          v.call(this, "Nodejs stream input adapter for " + r), this._upstreamEnded = !1, this._bindStream(a);
        }
        x.inherits(e, v), e.prototype._bindStream = function(r) {
          var a = this;
          (this._stream = r).pause(), r.on("data", function(m) {
            a.push({ data: m, meta: { percent: 0 } });
          }).on("error", function(m) {
            a.isPaused ? this.generatedError = m : a.error(m);
          }).on("end", function() {
            a.isPaused ? a._upstreamEnded = !0 : a.end();
          });
        }, e.prototype.pause = function() {
          return !!v.prototype.pause.call(this) && (this._stream.pause(), !0);
        }, e.prototype.resume = function() {
          return !!v.prototype.resume.call(this) && (this._upstreamEnded ? this.end() : this._stream.resume(), !0);
        }, M.exports = e;
      }, { "../stream/GenericWorker": 28, "../utils": 32 }], 13: [function(C, M, E) {
        var x = C("readable-stream").Readable;
        function v(e, r, a) {
          x.call(this, r), this._helper = e;
          var m = this;
          e.on("data", function(p, n) {
            m.push(p) || m._helper.pause(), a && a(n);
          }).on("error", function(p) {
            m.emit("error", p);
          }).on("end", function() {
            m.push(null);
          });
        }
        C("../utils").inherits(v, x), v.prototype._read = function() {
          this._helper.resume();
        }, M.exports = v;
      }, { "../utils": 32, "readable-stream": 16 }], 14: [function(C, M, E) {
        M.exports = { isNode: typeof Buffer != "undefined", newBufferFrom: function(x, v) {
          if (Buffer.from && Buffer.from !== Uint8Array.from)
            return Buffer.from(x, v);
          if (typeof x == "number")
            throw new Error('The "data" argument must not be a number');
          return new Buffer(x, v);
        }, allocBuffer: function(x) {
          if (Buffer.alloc)
            return Buffer.alloc(x);
          var v = new Buffer(x);
          return v.fill(0), v;
        }, isBuffer: function(x) {
          return Buffer.isBuffer(x);
        }, isStream: function(x) {
          return x && typeof x.on == "function" && typeof x.pause == "function" && typeof x.resume == "function";
        } };
      }, {}], 15: [function(C, M, E) {
        function x(s, o, t) {
          var l, y = e.getTypeOf(o), k = e.extend(t || {}, m);
          k.date = k.date || /* @__PURE__ */ new Date(), k.compression !== null && (k.compression = k.compression.toUpperCase()), typeof k.unixPermissions == "string" && (k.unixPermissions = parseInt(k.unixPermissions, 8)), k.unixPermissions && 16384 & k.unixPermissions && (k.dir = !0), k.dosPermissions && 16 & k.dosPermissions && (k.dir = !0), k.dir && (s = f(s)), k.createFolders && (l = d(s)) && g.call(this, l, !0);
          var D = y === "string" && k.binary === !1 && k.base64 === !1;
          t && t.binary !== void 0 || (k.binary = !D), (o instanceof p && o.uncompressedSize === 0 || k.dir || !o || o.length === 0) && (k.base64 = !1, k.binary = !0, o = "", k.compression = "STORE", y = "string");
          var _ = null;
          _ = o instanceof p || o instanceof r ? o : b.isNode && b.isStream(o) ? new h(s, o) : e.prepareContent(s, o, k.binary, k.optimizedBinaryString, k.base64);
          var P = new n(s, _, k);
          this.files[s] = P;
        }
        var v = C("./utf8"), e = C("./utils"), r = C("./stream/GenericWorker"), a = C("./stream/StreamHelper"), m = C("./defaults"), p = C("./compressedObject"), n = C("./zipObject"), i = C("./generate"), b = C("./nodejsUtils"), h = C("./nodejs/NodejsStreamInputAdapter"), d = function(s) {
          s.slice(-1) === "/" && (s = s.substring(0, s.length - 1));
          var o = s.lastIndexOf("/");
          return 0 < o ? s.substring(0, o) : "";
        }, f = function(s) {
          return s.slice(-1) !== "/" && (s += "/"), s;
        }, g = function(s, o) {
          return o = o !== void 0 ? o : m.createFolders, s = f(s), this.files[s] || x.call(this, s, null, { dir: !0, createFolders: o }), this.files[s];
        };
        function S(s) {
          return Object.prototype.toString.call(s) === "[object RegExp]";
        }
        var T = { load: function() {
          throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
        }, forEach: function(s) {
          var o, t, l;
          for (o in this.files)
            l = this.files[o], (t = o.slice(this.root.length, o.length)) && o.slice(0, this.root.length) === this.root && s(t, l);
        }, filter: function(s) {
          var o = [];
          return this.forEach(function(t, l) {
            s(t, l) && o.push(l);
          }), o;
        }, file: function(s, o, t) {
          if (arguments.length !== 1)
            return s = this.root + s, x.call(this, s, o, t), this;
          if (S(s)) {
            var l = s;
            return this.filter(function(k, D) {
              return !D.dir && l.test(k);
            });
          }
          var y = this.files[this.root + s];
          return y && !y.dir ? y : null;
        }, folder: function(s) {
          if (!s)
            return this;
          if (S(s))
            return this.filter(function(y, k) {
              return k.dir && s.test(y);
            });
          var o = this.root + s, t = g.call(this, o), l = this.clone();
          return l.root = t.name, l;
        }, remove: function(s) {
          s = this.root + s;
          var o = this.files[s];
          if (o || (s.slice(-1) !== "/" && (s += "/"), o = this.files[s]), o && !o.dir)
            delete this.files[s];
          else
            for (var t = this.filter(function(y, k) {
              return k.name.slice(0, s.length) === s;
            }), l = 0; l < t.length; l++)
              delete this.files[t[l].name];
          return this;
        }, generate: function() {
          throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
        }, generateInternalStream: function(s) {
          var o, t = {};
          try {
            if ((t = e.extend(s || {}, { streamFiles: !1, compression: "STORE", compressionOptions: null, type: "", platform: "DOS", comment: null, mimeType: "application/zip", encodeFileName: v.utf8encode })).type = t.type.toLowerCase(), t.compression = t.compression.toUpperCase(), t.type === "binarystring" && (t.type = "string"), !t.type)
              throw new Error("No output type specified.");
            e.checkSupport(t.type), t.platform !== "darwin" && t.platform !== "freebsd" && t.platform !== "linux" && t.platform !== "sunos" || (t.platform = "UNIX"), t.platform === "win32" && (t.platform = "DOS");
            var l = t.comment || this.comment || "";
            o = i.generateWorker(this, t, l);
          } catch (y) {
            (o = new r("error")).error(y);
          }
          return new a(o, t.type || "string", t.mimeType);
        }, generateAsync: function(s, o) {
          return this.generateInternalStream(s).accumulate(o);
        }, generateNodeStream: function(s, o) {
          return (s = s || {}).type || (s.type = "nodebuffer"), this.generateInternalStream(s).toNodejsStream(o);
        } };
        M.exports = T;
      }, { "./compressedObject": 2, "./defaults": 5, "./generate": 9, "./nodejs/NodejsStreamInputAdapter": 12, "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31, "./utils": 32, "./zipObject": 35 }], 16: [function(C, M, E) {
        M.exports = C("stream");
      }, { stream: void 0 }], 17: [function(C, M, E) {
        var x = C("./DataReader");
        function v(e) {
          x.call(this, e);
          for (var r = 0; r < this.data.length; r++)
            e[r] = 255 & e[r];
        }
        C("../utils").inherits(v, x), v.prototype.byteAt = function(e) {
          return this.data[this.zero + e];
        }, v.prototype.lastIndexOfSignature = function(e) {
          for (var r = e.charCodeAt(0), a = e.charCodeAt(1), m = e.charCodeAt(2), p = e.charCodeAt(3), n = this.length - 4; 0 <= n; --n)
            if (this.data[n] === r && this.data[n + 1] === a && this.data[n + 2] === m && this.data[n + 3] === p)
              return n - this.zero;
          return -1;
        }, v.prototype.readAndCheckSignature = function(e) {
          var r = e.charCodeAt(0), a = e.charCodeAt(1), m = e.charCodeAt(2), p = e.charCodeAt(3), n = this.readData(4);
          return r === n[0] && a === n[1] && m === n[2] && p === n[3];
        }, v.prototype.readData = function(e) {
          if (this.checkOffset(e), e === 0)
            return [];
          var r = this.data.slice(this.zero + this.index, this.zero + this.index + e);
          return this.index += e, r;
        }, M.exports = v;
      }, { "../utils": 32, "./DataReader": 18 }], 18: [function(C, M, E) {
        var x = C("../utils");
        function v(e) {
          this.data = e, this.length = e.length, this.index = 0, this.zero = 0;
        }
        v.prototype = { checkOffset: function(e) {
          this.checkIndex(this.index + e);
        }, checkIndex: function(e) {
          if (this.length < this.zero + e || e < 0)
            throw new Error("End of data reached (data length = " + this.length + ", asked index = " + e + "). Corrupted zip ?");
        }, setIndex: function(e) {
          this.checkIndex(e), this.index = e;
        }, skip: function(e) {
          this.setIndex(this.index + e);
        }, byteAt: function() {
        }, readInt: function(e) {
          var r, a = 0;
          for (this.checkOffset(e), r = this.index + e - 1; r >= this.index; r--)
            a = (a << 8) + this.byteAt(r);
          return this.index += e, a;
        }, readString: function(e) {
          return x.transformTo("string", this.readData(e));
        }, readData: function() {
        }, lastIndexOfSignature: function() {
        }, readAndCheckSignature: function() {
        }, readDate: function() {
          var e = this.readInt(4);
          return new Date(Date.UTC(1980 + (e >> 25 & 127), (e >> 21 & 15) - 1, e >> 16 & 31, e >> 11 & 31, e >> 5 & 63, (31 & e) << 1));
        } }, M.exports = v;
      }, { "../utils": 32 }], 19: [function(C, M, E) {
        var x = C("./Uint8ArrayReader");
        function v(e) {
          x.call(this, e);
        }
        C("../utils").inherits(v, x), v.prototype.readData = function(e) {
          this.checkOffset(e);
          var r = this.data.slice(this.zero + this.index, this.zero + this.index + e);
          return this.index += e, r;
        }, M.exports = v;
      }, { "../utils": 32, "./Uint8ArrayReader": 21 }], 20: [function(C, M, E) {
        var x = C("./DataReader");
        function v(e) {
          x.call(this, e);
        }
        C("../utils").inherits(v, x), v.prototype.byteAt = function(e) {
          return this.data.charCodeAt(this.zero + e);
        }, v.prototype.lastIndexOfSignature = function(e) {
          return this.data.lastIndexOf(e) - this.zero;
        }, v.prototype.readAndCheckSignature = function(e) {
          return e === this.readData(4);
        }, v.prototype.readData = function(e) {
          this.checkOffset(e);
          var r = this.data.slice(this.zero + this.index, this.zero + this.index + e);
          return this.index += e, r;
        }, M.exports = v;
      }, { "../utils": 32, "./DataReader": 18 }], 21: [function(C, M, E) {
        var x = C("./ArrayReader");
        function v(e) {
          x.call(this, e);
        }
        C("../utils").inherits(v, x), v.prototype.readData = function(e) {
          if (this.checkOffset(e), e === 0)
            return new Uint8Array(0);
          var r = this.data.subarray(this.zero + this.index, this.zero + this.index + e);
          return this.index += e, r;
        }, M.exports = v;
      }, { "../utils": 32, "./ArrayReader": 17 }], 22: [function(C, M, E) {
        var x = C("../utils"), v = C("../support"), e = C("./ArrayReader"), r = C("./StringReader"), a = C("./NodeBufferReader"), m = C("./Uint8ArrayReader");
        M.exports = function(p) {
          var n = x.getTypeOf(p);
          return x.checkSupport(n), n !== "string" || v.uint8array ? n === "nodebuffer" ? new a(p) : v.uint8array ? new m(x.transformTo("uint8array", p)) : new e(x.transformTo("array", p)) : new r(p);
        };
      }, { "../support": 30, "../utils": 32, "./ArrayReader": 17, "./NodeBufferReader": 19, "./StringReader": 20, "./Uint8ArrayReader": 21 }], 23: [function(C, M, E) {
        E.LOCAL_FILE_HEADER = "PK", E.CENTRAL_FILE_HEADER = "PK", E.CENTRAL_DIRECTORY_END = "PK", E.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK\x07", E.ZIP64_CENTRAL_DIRECTORY_END = "PK", E.DATA_DESCRIPTOR = "PK\x07\b";
      }, {}], 24: [function(C, M, E) {
        var x = C("./GenericWorker"), v = C("../utils");
        function e(r) {
          x.call(this, "ConvertWorker to " + r), this.destType = r;
        }
        v.inherits(e, x), e.prototype.processChunk = function(r) {
          this.push({ data: v.transformTo(this.destType, r.data), meta: r.meta });
        }, M.exports = e;
      }, { "../utils": 32, "./GenericWorker": 28 }], 25: [function(C, M, E) {
        var x = C("./GenericWorker"), v = C("../crc32");
        function e() {
          x.call(this, "Crc32Probe"), this.withStreamInfo("crc32", 0);
        }
        C("../utils").inherits(e, x), e.prototype.processChunk = function(r) {
          this.streamInfo.crc32 = v(r.data, this.streamInfo.crc32 || 0), this.push(r);
        }, M.exports = e;
      }, { "../crc32": 4, "../utils": 32, "./GenericWorker": 28 }], 26: [function(C, M, E) {
        var x = C("../utils"), v = C("./GenericWorker");
        function e(r) {
          v.call(this, "DataLengthProbe for " + r), this.propName = r, this.withStreamInfo(r, 0);
        }
        x.inherits(e, v), e.prototype.processChunk = function(r) {
          if (r) {
            var a = this.streamInfo[this.propName] || 0;
            this.streamInfo[this.propName] = a + r.data.length;
          }
          v.prototype.processChunk.call(this, r);
        }, M.exports = e;
      }, { "../utils": 32, "./GenericWorker": 28 }], 27: [function(C, M, E) {
        var x = C("../utils"), v = C("./GenericWorker");
        function e(r) {
          v.call(this, "DataWorker");
          var a = this;
          this.dataIsReady = !1, this.index = 0, this.max = 0, this.data = null, this.type = "", this._tickScheduled = !1, r.then(function(m) {
            a.dataIsReady = !0, a.data = m, a.max = m && m.length || 0, a.type = x.getTypeOf(m), a.isPaused || a._tickAndRepeat();
          }, function(m) {
            a.error(m);
          });
        }
        x.inherits(e, v), e.prototype.cleanUp = function() {
          v.prototype.cleanUp.call(this), this.data = null;
        }, e.prototype.resume = function() {
          return !!v.prototype.resume.call(this) && (!this._tickScheduled && this.dataIsReady && (this._tickScheduled = !0, x.delay(this._tickAndRepeat, [], this)), !0);
        }, e.prototype._tickAndRepeat = function() {
          this._tickScheduled = !1, this.isPaused || this.isFinished || (this._tick(), this.isFinished || (x.delay(this._tickAndRepeat, [], this), this._tickScheduled = !0));
        }, e.prototype._tick = function() {
          if (this.isPaused || this.isFinished)
            return !1;
          var r = null, a = Math.min(this.max, this.index + 16384);
          if (this.index >= this.max)
            return this.end();
          switch (this.type) {
            case "string":
              r = this.data.substring(this.index, a);
              break;
            case "uint8array":
              r = this.data.subarray(this.index, a);
              break;
            case "array":
            case "nodebuffer":
              r = this.data.slice(this.index, a);
          }
          return this.index = a, this.push({ data: r, meta: { percent: this.max ? this.index / this.max * 100 : 0 } });
        }, M.exports = e;
      }, { "../utils": 32, "./GenericWorker": 28 }], 28: [function(C, M, E) {
        function x(v) {
          this.name = v || "default", this.streamInfo = {}, this.generatedError = null, this.extraStreamInfo = {}, this.isPaused = !0, this.isFinished = !1, this.isLocked = !1, this._listeners = { data: [], end: [], error: [] }, this.previous = null;
        }
        x.prototype = { push: function(v) {
          this.emit("data", v);
        }, end: function() {
          if (this.isFinished)
            return !1;
          this.flush();
          try {
            this.emit("end"), this.cleanUp(), this.isFinished = !0;
          } catch (v) {
            this.emit("error", v);
          }
          return !0;
        }, error: function(v) {
          return !this.isFinished && (this.isPaused ? this.generatedError = v : (this.isFinished = !0, this.emit("error", v), this.previous && this.previous.error(v), this.cleanUp()), !0);
        }, on: function(v, e) {
          return this._listeners[v].push(e), this;
        }, cleanUp: function() {
          this.streamInfo = this.generatedError = this.extraStreamInfo = null, this._listeners = [];
        }, emit: function(v, e) {
          if (this._listeners[v])
            for (var r = 0; r < this._listeners[v].length; r++)
              this._listeners[v][r].call(this, e);
        }, pipe: function(v) {
          return v.registerPrevious(this);
        }, registerPrevious: function(v) {
          if (this.isLocked)
            throw new Error("The stream '" + this + "' has already been used.");
          this.streamInfo = v.streamInfo, this.mergeStreamInfo(), this.previous = v;
          var e = this;
          return v.on("data", function(r) {
            e.processChunk(r);
          }), v.on("end", function() {
            e.end();
          }), v.on("error", function(r) {
            e.error(r);
          }), this;
        }, pause: function() {
          return !this.isPaused && !this.isFinished && (this.isPaused = !0, this.previous && this.previous.pause(), !0);
        }, resume: function() {
          if (!this.isPaused || this.isFinished)
            return !1;
          var v = this.isPaused = !1;
          return this.generatedError && (this.error(this.generatedError), v = !0), this.previous && this.previous.resume(), !v;
        }, flush: function() {
        }, processChunk: function(v) {
          this.push(v);
        }, withStreamInfo: function(v, e) {
          return this.extraStreamInfo[v] = e, this.mergeStreamInfo(), this;
        }, mergeStreamInfo: function() {
          for (var v in this.extraStreamInfo)
            Object.prototype.hasOwnProperty.call(this.extraStreamInfo, v) && (this.streamInfo[v] = this.extraStreamInfo[v]);
        }, lock: function() {
          if (this.isLocked)
            throw new Error("The stream '" + this + "' has already been used.");
          this.isLocked = !0, this.previous && this.previous.lock();
        }, toString: function() {
          var v = "Worker " + this.name;
          return this.previous ? this.previous + " -> " + v : v;
        } }, M.exports = x;
      }, {}], 29: [function(C, M, E) {
        var x = C("../utils"), v = C("./ConvertWorker"), e = C("./GenericWorker"), r = C("../base64"), a = C("../support"), m = C("../external"), p = null;
        if (a.nodestream)
          try {
            p = C("../nodejs/NodejsStreamOutputAdapter");
          } catch (b) {
          }
        function n(b, h) {
          return new m.Promise(function(d, f) {
            var g = [], S = b._internalType, T = b._outputType, s = b._mimeType;
            b.on("data", function(o, t) {
              g.push(o), h && h(t);
            }).on("error", function(o) {
              g = [], f(o);
            }).on("end", function() {
              try {
                var o = function(t, l, y) {
                  switch (t) {
                    case "blob":
                      return x.newBlob(x.transformTo("arraybuffer", l), y);
                    case "base64":
                      return r.encode(l);
                    default:
                      return x.transformTo(t, l);
                  }
                }(T, function(t, l) {
                  var y, k = 0, D = null, _ = 0;
                  for (y = 0; y < l.length; y++)
                    _ += l[y].length;
                  switch (t) {
                    case "string":
                      return l.join("");
                    case "array":
                      return Array.prototype.concat.apply([], l);
                    case "uint8array":
                      for (D = new Uint8Array(_), y = 0; y < l.length; y++)
                        D.set(l[y], k), k += l[y].length;
                      return D;
                    case "nodebuffer":
                      return Buffer.concat(l);
                    default:
                      throw new Error("concat : unsupported type '" + t + "'");
                  }
                }(S, g), s);
                d(o);
              } catch (t) {
                f(t);
              }
              g = [];
            }).resume();
          });
        }
        function i(b, h, d) {
          var f = h;
          switch (h) {
            case "blob":
            case "arraybuffer":
              f = "uint8array";
              break;
            case "base64":
              f = "string";
          }
          try {
            this._internalType = f, this._outputType = h, this._mimeType = d, x.checkSupport(f), this._worker = b.pipe(new v(f)), b.lock();
          } catch (g) {
            this._worker = new e("error"), this._worker.error(g);
          }
        }
        i.prototype = { accumulate: function(b) {
          return n(this, b);
        }, on: function(b, h) {
          var d = this;
          return b === "data" ? this._worker.on(b, function(f) {
            h.call(d, f.data, f.meta);
          }) : this._worker.on(b, function() {
            x.delay(h, arguments, d);
          }), this;
        }, resume: function() {
          return x.delay(this._worker.resume, [], this._worker), this;
        }, pause: function() {
          return this._worker.pause(), this;
        }, toNodejsStream: function(b) {
          if (x.checkSupport("nodestream"), this._outputType !== "nodebuffer")
            throw new Error(this._outputType + " is not supported by this method");
          return new p(this, { objectMode: this._outputType !== "nodebuffer" }, b);
        } }, M.exports = i;
      }, { "../base64": 1, "../external": 6, "../nodejs/NodejsStreamOutputAdapter": 13, "../support": 30, "../utils": 32, "./ConvertWorker": 24, "./GenericWorker": 28 }], 30: [function(C, M, E) {
        if (E.base64 = !0, E.array = !0, E.string = !0, E.arraybuffer = typeof ArrayBuffer != "undefined" && typeof Uint8Array != "undefined", E.nodebuffer = typeof Buffer != "undefined", E.uint8array = typeof Uint8Array != "undefined", typeof ArrayBuffer == "undefined")
          E.blob = !1;
        else {
          var x = new ArrayBuffer(0);
          try {
            E.blob = new Blob([x], { type: "application/zip" }).size === 0;
          } catch (e) {
            try {
              var v = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
              v.append(x), E.blob = v.getBlob("application/zip").size === 0;
            } catch (r) {
              E.blob = !1;
            }
          }
        }
        try {
          E.nodestream = !!C("readable-stream").Readable;
        } catch (e) {
          E.nodestream = !1;
        }
      }, { "readable-stream": 16 }], 31: [function(C, M, E) {
        for (var x = C("./utils"), v = C("./support"), e = C("./nodejsUtils"), r = C("./stream/GenericWorker"), a = new Array(256), m = 0; m < 256; m++)
          a[m] = 252 <= m ? 6 : 248 <= m ? 5 : 240 <= m ? 4 : 224 <= m ? 3 : 192 <= m ? 2 : 1;
        a[254] = a[254] = 1;
        function p() {
          r.call(this, "utf-8 decode"), this.leftOver = null;
        }
        function n() {
          r.call(this, "utf-8 encode");
        }
        E.utf8encode = function(i) {
          return v.nodebuffer ? e.newBufferFrom(i, "utf-8") : function(b) {
            var h, d, f, g, S, T = b.length, s = 0;
            for (g = 0; g < T; g++)
              (64512 & (d = b.charCodeAt(g))) == 55296 && g + 1 < T && (64512 & (f = b.charCodeAt(g + 1))) == 56320 && (d = 65536 + (d - 55296 << 10) + (f - 56320), g++), s += d < 128 ? 1 : d < 2048 ? 2 : d < 65536 ? 3 : 4;
            for (h = v.uint8array ? new Uint8Array(s) : new Array(s), g = S = 0; S < s; g++)
              (64512 & (d = b.charCodeAt(g))) == 55296 && g + 1 < T && (64512 & (f = b.charCodeAt(g + 1))) == 56320 && (d = 65536 + (d - 55296 << 10) + (f - 56320), g++), d < 128 ? h[S++] = d : (d < 2048 ? h[S++] = 192 | d >>> 6 : (d < 65536 ? h[S++] = 224 | d >>> 12 : (h[S++] = 240 | d >>> 18, h[S++] = 128 | d >>> 12 & 63), h[S++] = 128 | d >>> 6 & 63), h[S++] = 128 | 63 & d);
            return h;
          }(i);
        }, E.utf8decode = function(i) {
          return v.nodebuffer ? x.transformTo("nodebuffer", i).toString("utf-8") : function(b) {
            var h, d, f, g, S = b.length, T = new Array(2 * S);
            for (h = d = 0; h < S; )
              if ((f = b[h++]) < 128)
                T[d++] = f;
              else if (4 < (g = a[f]))
                T[d++] = 65533, h += g - 1;
              else {
                for (f &= g === 2 ? 31 : g === 3 ? 15 : 7; 1 < g && h < S; )
                  f = f << 6 | 63 & b[h++], g--;
                1 < g ? T[d++] = 65533 : f < 65536 ? T[d++] = f : (f -= 65536, T[d++] = 55296 | f >> 10 & 1023, T[d++] = 56320 | 1023 & f);
              }
            return T.length !== d && (T.subarray ? T = T.subarray(0, d) : T.length = d), x.applyFromCharCode(T);
          }(i = x.transformTo(v.uint8array ? "uint8array" : "array", i));
        }, x.inherits(p, r), p.prototype.processChunk = function(i) {
          var b = x.transformTo(v.uint8array ? "uint8array" : "array", i.data);
          if (this.leftOver && this.leftOver.length) {
            if (v.uint8array) {
              var h = b;
              (b = new Uint8Array(h.length + this.leftOver.length)).set(this.leftOver, 0), b.set(h, this.leftOver.length);
            } else
              b = this.leftOver.concat(b);
            this.leftOver = null;
          }
          var d = function(g, S) {
            var T;
            for ((S = S || g.length) > g.length && (S = g.length), T = S - 1; 0 <= T && (192 & g[T]) == 128; )
              T--;
            return T < 0 || T === 0 ? S : T + a[g[T]] > S ? T : S;
          }(b), f = b;
          d !== b.length && (v.uint8array ? (f = b.subarray(0, d), this.leftOver = b.subarray(d, b.length)) : (f = b.slice(0, d), this.leftOver = b.slice(d, b.length))), this.push({ data: E.utf8decode(f), meta: i.meta });
        }, p.prototype.flush = function() {
          this.leftOver && this.leftOver.length && (this.push({ data: E.utf8decode(this.leftOver), meta: {} }), this.leftOver = null);
        }, E.Utf8DecodeWorker = p, x.inherits(n, r), n.prototype.processChunk = function(i) {
          this.push({ data: E.utf8encode(i.data), meta: i.meta });
        }, E.Utf8EncodeWorker = n;
      }, { "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./support": 30, "./utils": 32 }], 32: [function(C, M, E) {
        var x = C("./support"), v = C("./base64"), e = C("./nodejsUtils"), r = C("./external");
        function a(h) {
          return h;
        }
        function m(h, d) {
          for (var f = 0; f < h.length; ++f)
            d[f] = 255 & h.charCodeAt(f);
          return d;
        }
        C("setimmediate"), E.newBlob = function(h, d) {
          E.checkSupport("blob");
          try {
            return new Blob([h], { type: d });
          } catch (g) {
            try {
              var f = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
              return f.append(h), f.getBlob(d);
            } catch (S) {
              throw new Error("Bug : can't construct the Blob.");
            }
          }
        };
        var p = { stringifyByChunk: function(h, d, f) {
          var g = [], S = 0, T = h.length;
          if (T <= f)
            return String.fromCharCode.apply(null, h);
          for (; S < T; )
            d === "array" || d === "nodebuffer" ? g.push(String.fromCharCode.apply(null, h.slice(S, Math.min(S + f, T)))) : g.push(String.fromCharCode.apply(null, h.subarray(S, Math.min(S + f, T)))), S += f;
          return g.join("");
        }, stringifyByChar: function(h) {
          for (var d = "", f = 0; f < h.length; f++)
            d += String.fromCharCode(h[f]);
          return d;
        }, applyCanBeUsed: { uint8array: function() {
          try {
            return x.uint8array && String.fromCharCode.apply(null, new Uint8Array(1)).length === 1;
          } catch (h) {
            return !1;
          }
        }(), nodebuffer: function() {
          try {
            return x.nodebuffer && String.fromCharCode.apply(null, e.allocBuffer(1)).length === 1;
          } catch (h) {
            return !1;
          }
        }() } };
        function n(h) {
          var d = 65536, f = E.getTypeOf(h), g = !0;
          if (f === "uint8array" ? g = p.applyCanBeUsed.uint8array : f === "nodebuffer" && (g = p.applyCanBeUsed.nodebuffer), g)
            for (; 1 < d; )
              try {
                return p.stringifyByChunk(h, f, d);
              } catch (S) {
                d = Math.floor(d / 2);
              }
          return p.stringifyByChar(h);
        }
        function i(h, d) {
          for (var f = 0; f < h.length; f++)
            d[f] = h[f];
          return d;
        }
        E.applyFromCharCode = n;
        var b = {};
        b.string = { string: a, array: function(h) {
          return m(h, new Array(h.length));
        }, arraybuffer: function(h) {
          return b.string.uint8array(h).buffer;
        }, uint8array: function(h) {
          return m(h, new Uint8Array(h.length));
        }, nodebuffer: function(h) {
          return m(h, e.allocBuffer(h.length));
        } }, b.array = { string: n, array: a, arraybuffer: function(h) {
          return new Uint8Array(h).buffer;
        }, uint8array: function(h) {
          return new Uint8Array(h);
        }, nodebuffer: function(h) {
          return e.newBufferFrom(h);
        } }, b.arraybuffer = { string: function(h) {
          return n(new Uint8Array(h));
        }, array: function(h) {
          return i(new Uint8Array(h), new Array(h.byteLength));
        }, arraybuffer: a, uint8array: function(h) {
          return new Uint8Array(h);
        }, nodebuffer: function(h) {
          return e.newBufferFrom(new Uint8Array(h));
        } }, b.uint8array = { string: n, array: function(h) {
          return i(h, new Array(h.length));
        }, arraybuffer: function(h) {
          return h.buffer;
        }, uint8array: a, nodebuffer: function(h) {
          return e.newBufferFrom(h);
        } }, b.nodebuffer = { string: n, array: function(h) {
          return i(h, new Array(h.length));
        }, arraybuffer: function(h) {
          return b.nodebuffer.uint8array(h).buffer;
        }, uint8array: function(h) {
          return i(h, new Uint8Array(h.length));
        }, nodebuffer: a }, E.transformTo = function(h, d) {
          if (d = d || "", !h)
            return d;
          E.checkSupport(h);
          var f = E.getTypeOf(d);
          return b[f][h](d);
        }, E.resolve = function(h) {
          for (var d = h.split("/"), f = [], g = 0; g < d.length; g++) {
            var S = d[g];
            S === "." || S === "" && g !== 0 && g !== d.length - 1 || (S === ".." ? f.pop() : f.push(S));
          }
          return f.join("/");
        }, E.getTypeOf = function(h) {
          return typeof h == "string" ? "string" : Object.prototype.toString.call(h) === "[object Array]" ? "array" : x.nodebuffer && e.isBuffer(h) ? "nodebuffer" : x.uint8array && h instanceof Uint8Array ? "uint8array" : x.arraybuffer && h instanceof ArrayBuffer ? "arraybuffer" : void 0;
        }, E.checkSupport = function(h) {
          if (!x[h.toLowerCase()])
            throw new Error(h + " is not supported by this platform");
        }, E.MAX_VALUE_16BITS = 65535, E.MAX_VALUE_32BITS = -1, E.pretty = function(h) {
          var d, f, g = "";
          for (f = 0; f < (h || "").length; f++)
            g += "\\x" + ((d = h.charCodeAt(f)) < 16 ? "0" : "") + d.toString(16).toUpperCase();
          return g;
        }, E.delay = function(h, d, f) {
          setImmediate(function() {
            h.apply(f || null, d || []);
          });
        }, E.inherits = function(h, d) {
          function f() {
          }
          f.prototype = d.prototype, h.prototype = new f();
        }, E.extend = function() {
          var h, d, f = {};
          for (h = 0; h < arguments.length; h++)
            for (d in arguments[h])
              Object.prototype.hasOwnProperty.call(arguments[h], d) && f[d] === void 0 && (f[d] = arguments[h][d]);
          return f;
        }, E.prepareContent = function(h, d, f, g, S) {
          return r.Promise.resolve(d).then(function(T) {
            return x.blob && (T instanceof Blob || ["[object File]", "[object Blob]"].indexOf(Object.prototype.toString.call(T)) !== -1) && typeof FileReader != "undefined" ? new r.Promise(function(s, o) {
              var t = new FileReader();
              t.onload = function(l) {
                s(l.target.result);
              }, t.onerror = function(l) {
                o(l.target.error);
              }, t.readAsArrayBuffer(T);
            }) : T;
          }).then(function(T) {
            var s = E.getTypeOf(T);
            return s ? (s === "arraybuffer" ? T = E.transformTo("uint8array", T) : s === "string" && (S ? T = v.decode(T) : f && g !== !0 && (T = function(o) {
              return m(o, x.uint8array ? new Uint8Array(o.length) : new Array(o.length));
            }(T))), T) : r.Promise.reject(new Error("Can't read the data of '" + h + "'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"));
          });
        };
      }, { "./base64": 1, "./external": 6, "./nodejsUtils": 14, "./support": 30, setimmediate: 54 }], 33: [function(C, M, E) {
        var x = C("./reader/readerFor"), v = C("./utils"), e = C("./signature"), r = C("./zipEntry"), a = C("./support");
        function m(p) {
          this.files = [], this.loadOptions = p;
        }
        m.prototype = { checkSignature: function(p) {
          if (!this.reader.readAndCheckSignature(p)) {
            this.reader.index -= 4;
            var n = this.reader.readString(4);
            throw new Error("Corrupted zip or bug: unexpected signature (" + v.pretty(n) + ", expected " + v.pretty(p) + ")");
          }
        }, isSignature: function(p, n) {
          var i = this.reader.index;
          this.reader.setIndex(p);
          var b = this.reader.readString(4) === n;
          return this.reader.setIndex(i), b;
        }, readBlockEndOfCentral: function() {
          this.diskNumber = this.reader.readInt(2), this.diskWithCentralDirStart = this.reader.readInt(2), this.centralDirRecordsOnThisDisk = this.reader.readInt(2), this.centralDirRecords = this.reader.readInt(2), this.centralDirSize = this.reader.readInt(4), this.centralDirOffset = this.reader.readInt(4), this.zipCommentLength = this.reader.readInt(2);
          var p = this.reader.readData(this.zipCommentLength), n = a.uint8array ? "uint8array" : "array", i = v.transformTo(n, p);
          this.zipComment = this.loadOptions.decodeFileName(i);
        }, readBlockZip64EndOfCentral: function() {
          this.zip64EndOfCentralSize = this.reader.readInt(8), this.reader.skip(4), this.diskNumber = this.reader.readInt(4), this.diskWithCentralDirStart = this.reader.readInt(4), this.centralDirRecordsOnThisDisk = this.reader.readInt(8), this.centralDirRecords = this.reader.readInt(8), this.centralDirSize = this.reader.readInt(8), this.centralDirOffset = this.reader.readInt(8), this.zip64ExtensibleData = {};
          for (var p, n, i, b = this.zip64EndOfCentralSize - 44; 0 < b; )
            p = this.reader.readInt(2), n = this.reader.readInt(4), i = this.reader.readData(n), this.zip64ExtensibleData[p] = { id: p, length: n, value: i };
        }, readBlockZip64EndOfCentralLocator: function() {
          if (this.diskWithZip64CentralDirStart = this.reader.readInt(4), this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8), this.disksCount = this.reader.readInt(4), 1 < this.disksCount)
            throw new Error("Multi-volumes zip are not supported");
        }, readLocalFiles: function() {
          var p, n;
          for (p = 0; p < this.files.length; p++)
            n = this.files[p], this.reader.setIndex(n.localHeaderOffset), this.checkSignature(e.LOCAL_FILE_HEADER), n.readLocalPart(this.reader), n.handleUTF8(), n.processAttributes();
        }, readCentralDir: function() {
          var p;
          for (this.reader.setIndex(this.centralDirOffset); this.reader.readAndCheckSignature(e.CENTRAL_FILE_HEADER); )
            (p = new r({ zip64: this.zip64 }, this.loadOptions)).readCentralPart(this.reader), this.files.push(p);
          if (this.centralDirRecords !== this.files.length && this.centralDirRecords !== 0 && this.files.length === 0)
            throw new Error("Corrupted zip or bug: expected " + this.centralDirRecords + " records in central dir, got " + this.files.length);
        }, readEndOfCentral: function() {
          var p = this.reader.lastIndexOfSignature(e.CENTRAL_DIRECTORY_END);
          if (p < 0)
            throw this.isSignature(0, e.LOCAL_FILE_HEADER) ? new Error("Corrupted zip: can't find end of central directory") : new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");
          this.reader.setIndex(p);
          var n = p;
          if (this.checkSignature(e.CENTRAL_DIRECTORY_END), this.readBlockEndOfCentral(), this.diskNumber === v.MAX_VALUE_16BITS || this.diskWithCentralDirStart === v.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === v.MAX_VALUE_16BITS || this.centralDirRecords === v.MAX_VALUE_16BITS || this.centralDirSize === v.MAX_VALUE_32BITS || this.centralDirOffset === v.MAX_VALUE_32BITS) {
            if (this.zip64 = !0, (p = this.reader.lastIndexOfSignature(e.ZIP64_CENTRAL_DIRECTORY_LOCATOR)) < 0)
              throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");
            if (this.reader.setIndex(p), this.checkSignature(e.ZIP64_CENTRAL_DIRECTORY_LOCATOR), this.readBlockZip64EndOfCentralLocator(), !this.isSignature(this.relativeOffsetEndOfZip64CentralDir, e.ZIP64_CENTRAL_DIRECTORY_END) && (this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(e.ZIP64_CENTRAL_DIRECTORY_END), this.relativeOffsetEndOfZip64CentralDir < 0))
              throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");
            this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir), this.checkSignature(e.ZIP64_CENTRAL_DIRECTORY_END), this.readBlockZip64EndOfCentral();
          }
          var i = this.centralDirOffset + this.centralDirSize;
          this.zip64 && (i += 20, i += 12 + this.zip64EndOfCentralSize);
          var b = n - i;
          if (0 < b)
            this.isSignature(n, e.CENTRAL_FILE_HEADER) || (this.reader.zero = b);
          else if (b < 0)
            throw new Error("Corrupted zip: missing " + Math.abs(b) + " bytes.");
        }, prepareReader: function(p) {
          this.reader = x(p);
        }, load: function(p) {
          this.prepareReader(p), this.readEndOfCentral(), this.readCentralDir(), this.readLocalFiles();
        } }, M.exports = m;
      }, { "./reader/readerFor": 22, "./signature": 23, "./support": 30, "./utils": 32, "./zipEntry": 34 }], 34: [function(C, M, E) {
        var x = C("./reader/readerFor"), v = C("./utils"), e = C("./compressedObject"), r = C("./crc32"), a = C("./utf8"), m = C("./compressions"), p = C("./support");
        function n(i, b) {
          this.options = i, this.loadOptions = b;
        }
        n.prototype = { isEncrypted: function() {
          return (1 & this.bitFlag) == 1;
        }, useUTF8: function() {
          return (2048 & this.bitFlag) == 2048;
        }, readLocalPart: function(i) {
          var b, h;
          if (i.skip(22), this.fileNameLength = i.readInt(2), h = i.readInt(2), this.fileName = i.readData(this.fileNameLength), i.skip(h), this.compressedSize === -1 || this.uncompressedSize === -1)
            throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");
          if ((b = function(d) {
            for (var f in m)
              if (Object.prototype.hasOwnProperty.call(m, f) && m[f].magic === d)
                return m[f];
            return null;
          }(this.compressionMethod)) === null)
            throw new Error("Corrupted zip : compression " + v.pretty(this.compressionMethod) + " unknown (inner file : " + v.transformTo("string", this.fileName) + ")");
          this.decompressed = new e(this.compressedSize, this.uncompressedSize, this.crc32, b, i.readData(this.compressedSize));
        }, readCentralPart: function(i) {
          this.versionMadeBy = i.readInt(2), i.skip(2), this.bitFlag = i.readInt(2), this.compressionMethod = i.readString(2), this.date = i.readDate(), this.crc32 = i.readInt(4), this.compressedSize = i.readInt(4), this.uncompressedSize = i.readInt(4);
          var b = i.readInt(2);
          if (this.extraFieldsLength = i.readInt(2), this.fileCommentLength = i.readInt(2), this.diskNumberStart = i.readInt(2), this.internalFileAttributes = i.readInt(2), this.externalFileAttributes = i.readInt(4), this.localHeaderOffset = i.readInt(4), this.isEncrypted())
            throw new Error("Encrypted zip are not supported");
          i.skip(b), this.readExtraFields(i), this.parseZIP64ExtraField(i), this.fileComment = i.readData(this.fileCommentLength);
        }, processAttributes: function() {
          this.unixPermissions = null, this.dosPermissions = null;
          var i = this.versionMadeBy >> 8;
          this.dir = !!(16 & this.externalFileAttributes), i == 0 && (this.dosPermissions = 63 & this.externalFileAttributes), i == 3 && (this.unixPermissions = this.externalFileAttributes >> 16 & 65535), this.dir || this.fileNameStr.slice(-1) !== "/" || (this.dir = !0);
        }, parseZIP64ExtraField: function() {
          if (this.extraFields[1]) {
            var i = x(this.extraFields[1].value);
            this.uncompressedSize === v.MAX_VALUE_32BITS && (this.uncompressedSize = i.readInt(8)), this.compressedSize === v.MAX_VALUE_32BITS && (this.compressedSize = i.readInt(8)), this.localHeaderOffset === v.MAX_VALUE_32BITS && (this.localHeaderOffset = i.readInt(8)), this.diskNumberStart === v.MAX_VALUE_32BITS && (this.diskNumberStart = i.readInt(4));
          }
        }, readExtraFields: function(i) {
          var b, h, d, f = i.index + this.extraFieldsLength;
          for (this.extraFields || (this.extraFields = {}); i.index + 4 < f; )
            b = i.readInt(2), h = i.readInt(2), d = i.readData(h), this.extraFields[b] = { id: b, length: h, value: d };
          i.setIndex(f);
        }, handleUTF8: function() {
          var i = p.uint8array ? "uint8array" : "array";
          if (this.useUTF8())
            this.fileNameStr = a.utf8decode(this.fileName), this.fileCommentStr = a.utf8decode(this.fileComment);
          else {
            var b = this.findExtraFieldUnicodePath();
            if (b !== null)
              this.fileNameStr = b;
            else {
              var h = v.transformTo(i, this.fileName);
              this.fileNameStr = this.loadOptions.decodeFileName(h);
            }
            var d = this.findExtraFieldUnicodeComment();
            if (d !== null)
              this.fileCommentStr = d;
            else {
              var f = v.transformTo(i, this.fileComment);
              this.fileCommentStr = this.loadOptions.decodeFileName(f);
            }
          }
        }, findExtraFieldUnicodePath: function() {
          var i = this.extraFields[28789];
          if (i) {
            var b = x(i.value);
            return b.readInt(1) !== 1 || r(this.fileName) !== b.readInt(4) ? null : a.utf8decode(b.readData(i.length - 5));
          }
          return null;
        }, findExtraFieldUnicodeComment: function() {
          var i = this.extraFields[25461];
          if (i) {
            var b = x(i.value);
            return b.readInt(1) !== 1 || r(this.fileComment) !== b.readInt(4) ? null : a.utf8decode(b.readData(i.length - 5));
          }
          return null;
        } }, M.exports = n;
      }, { "./compressedObject": 2, "./compressions": 3, "./crc32": 4, "./reader/readerFor": 22, "./support": 30, "./utf8": 31, "./utils": 32 }], 35: [function(C, M, E) {
        function x(b, h, d) {
          this.name = b, this.dir = d.dir, this.date = d.date, this.comment = d.comment, this.unixPermissions = d.unixPermissions, this.dosPermissions = d.dosPermissions, this._data = h, this._dataBinary = d.binary, this.options = { compression: d.compression, compressionOptions: d.compressionOptions };
        }
        var v = C("./stream/StreamHelper"), e = C("./stream/DataWorker"), r = C("./utf8"), a = C("./compressedObject"), m = C("./stream/GenericWorker");
        x.prototype = { internalStream: function(b) {
          var h = null, d = "string";
          try {
            if (!b)
              throw new Error("No output type specified.");
            var f = (d = b.toLowerCase()) === "string" || d === "text";
            d !== "binarystring" && d !== "text" || (d = "string"), h = this._decompressWorker();
            var g = !this._dataBinary;
            g && !f && (h = h.pipe(new r.Utf8EncodeWorker())), !g && f && (h = h.pipe(new r.Utf8DecodeWorker()));
          } catch (S) {
            (h = new m("error")).error(S);
          }
          return new v(h, d, "");
        }, async: function(b, h) {
          return this.internalStream(b).accumulate(h);
        }, nodeStream: function(b, h) {
          return this.internalStream(b || "nodebuffer").toNodejsStream(h);
        }, _compressWorker: function(b, h) {
          if (this._data instanceof a && this._data.compression.magic === b.magic)
            return this._data.getCompressedWorker();
          var d = this._decompressWorker();
          return this._dataBinary || (d = d.pipe(new r.Utf8EncodeWorker())), a.createWorkerFrom(d, b, h);
        }, _decompressWorker: function() {
          return this._data instanceof a ? this._data.getContentWorker() : this._data instanceof m ? this._data : new e(this._data);
        } };
        for (var p = ["asText", "asBinary", "asNodeBuffer", "asUint8Array", "asArrayBuffer"], n = function() {
          throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
        }, i = 0; i < p.length; i++)
          x.prototype[p[i]] = n;
        M.exports = x;
      }, { "./compressedObject": 2, "./stream/DataWorker": 27, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31 }], 36: [function(C, M, E) {
        (function(x) {
          var v, e, r = x.MutationObserver || x.WebKitMutationObserver;
          if (r) {
            var a = 0, m = new r(b), p = x.document.createTextNode("");
            m.observe(p, { characterData: !0 }), v = function() {
              p.data = a = ++a % 2;
            };
          } else if (x.setImmediate || x.MessageChannel === void 0)
            v = "document" in x && "onreadystatechange" in x.document.createElement("script") ? function() {
              var h = x.document.createElement("script");
              h.onreadystatechange = function() {
                b(), h.onreadystatechange = null, h.parentNode.removeChild(h), h = null;
              }, x.document.documentElement.appendChild(h);
            } : function() {
              setTimeout(b, 0);
            };
          else {
            var n = new x.MessageChannel();
            n.port1.onmessage = b, v = function() {
              n.port2.postMessage(0);
            };
          }
          var i = [];
          function b() {
            var h, d;
            e = !0;
            for (var f = i.length; f; ) {
              for (d = i, i = [], h = -1; ++h < f; )
                d[h]();
              f = i.length;
            }
            e = !1;
          }
          M.exports = function(h) {
            i.push(h) !== 1 || e || v();
          };
        }).call(this, typeof ke != "undefined" ? ke : typeof self != "undefined" ? self : typeof window != "undefined" ? window : {});
      }, {}], 37: [function(C, M, E) {
        var x = C("immediate");
        function v() {
        }
        var e = {}, r = ["REJECTED"], a = ["FULFILLED"], m = ["PENDING"];
        function p(f) {
          if (typeof f != "function")
            throw new TypeError("resolver must be a function");
          this.state = m, this.queue = [], this.outcome = void 0, f !== v && h(this, f);
        }
        function n(f, g, S) {
          this.promise = f, typeof g == "function" && (this.onFulfilled = g, this.callFulfilled = this.otherCallFulfilled), typeof S == "function" && (this.onRejected = S, this.callRejected = this.otherCallRejected);
        }
        function i(f, g, S) {
          x(function() {
            var T;
            try {
              T = g(S);
            } catch (s) {
              return e.reject(f, s);
            }
            T === f ? e.reject(f, new TypeError("Cannot resolve promise with itself")) : e.resolve(f, T);
          });
        }
        function b(f) {
          var g = f && f.then;
          if (f && (typeof f == "object" || typeof f == "function") && typeof g == "function")
            return function() {
              g.apply(f, arguments);
            };
        }
        function h(f, g) {
          var S = !1;
          function T(t) {
            S || (S = !0, e.reject(f, t));
          }
          function s(t) {
            S || (S = !0, e.resolve(f, t));
          }
          var o = d(function() {
            g(s, T);
          });
          o.status === "error" && T(o.value);
        }
        function d(f, g) {
          var S = {};
          try {
            S.value = f(g), S.status = "success";
          } catch (T) {
            S.status = "error", S.value = T;
          }
          return S;
        }
        (M.exports = p).prototype.finally = function(f) {
          if (typeof f != "function")
            return this;
          var g = this.constructor;
          return this.then(function(S) {
            return g.resolve(f()).then(function() {
              return S;
            });
          }, function(S) {
            return g.resolve(f()).then(function() {
              throw S;
            });
          });
        }, p.prototype.catch = function(f) {
          return this.then(null, f);
        }, p.prototype.then = function(f, g) {
          if (typeof f != "function" && this.state === a || typeof g != "function" && this.state === r)
            return this;
          var S = new this.constructor(v);
          return this.state !== m ? i(S, this.state === a ? f : g, this.outcome) : this.queue.push(new n(S, f, g)), S;
        }, n.prototype.callFulfilled = function(f) {
          e.resolve(this.promise, f);
        }, n.prototype.otherCallFulfilled = function(f) {
          i(this.promise, this.onFulfilled, f);
        }, n.prototype.callRejected = function(f) {
          e.reject(this.promise, f);
        }, n.prototype.otherCallRejected = function(f) {
          i(this.promise, this.onRejected, f);
        }, e.resolve = function(f, g) {
          var S = d(b, g);
          if (S.status === "error")
            return e.reject(f, S.value);
          var T = S.value;
          if (T)
            h(f, T);
          else {
            f.state = a, f.outcome = g;
            for (var s = -1, o = f.queue.length; ++s < o; )
              f.queue[s].callFulfilled(g);
          }
          return f;
        }, e.reject = function(f, g) {
          f.state = r, f.outcome = g;
          for (var S = -1, T = f.queue.length; ++S < T; )
            f.queue[S].callRejected(g);
          return f;
        }, p.resolve = function(f) {
          return f instanceof this ? f : e.resolve(new this(v), f);
        }, p.reject = function(f) {
          var g = new this(v);
          return e.reject(g, f);
        }, p.all = function(f) {
          var g = this;
          if (Object.prototype.toString.call(f) !== "[object Array]")
            return this.reject(new TypeError("must be an array"));
          var S = f.length, T = !1;
          if (!S)
            return this.resolve([]);
          for (var s = new Array(S), o = 0, t = -1, l = new this(v); ++t < S; )
            y(f[t], t);
          return l;
          function y(k, D) {
            g.resolve(k).then(function(_) {
              s[D] = _, ++o !== S || T || (T = !0, e.resolve(l, s));
            }, function(_) {
              T || (T = !0, e.reject(l, _));
            });
          }
        }, p.race = function(f) {
          var g = this;
          if (Object.prototype.toString.call(f) !== "[object Array]")
            return this.reject(new TypeError("must be an array"));
          var S = f.length, T = !1;
          if (!S)
            return this.resolve([]);
          for (var s = -1, o = new this(v); ++s < S; )
            t = f[s], g.resolve(t).then(function(l) {
              T || (T = !0, e.resolve(o, l));
            }, function(l) {
              T || (T = !0, e.reject(o, l));
            });
          var t;
          return o;
        };
      }, { immediate: 36 }], 38: [function(C, M, E) {
        var x = {};
        (0, C("./lib/utils/common").assign)(x, C("./lib/deflate"), C("./lib/inflate"), C("./lib/zlib/constants")), M.exports = x;
      }, { "./lib/deflate": 39, "./lib/inflate": 40, "./lib/utils/common": 41, "./lib/zlib/constants": 44 }], 39: [function(C, M, E) {
        var x = C("./zlib/deflate"), v = C("./utils/common"), e = C("./utils/strings"), r = C("./zlib/messages"), a = C("./zlib/zstream"), m = Object.prototype.toString, p = 0, n = -1, i = 0, b = 8;
        function h(f) {
          if (!(this instanceof h))
            return new h(f);
          this.options = v.assign({ level: n, method: b, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: i, to: "" }, f || {});
          var g = this.options;
          g.raw && 0 < g.windowBits ? g.windowBits = -g.windowBits : g.gzip && 0 < g.windowBits && g.windowBits < 16 && (g.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new a(), this.strm.avail_out = 0;
          var S = x.deflateInit2(this.strm, g.level, g.method, g.windowBits, g.memLevel, g.strategy);
          if (S !== p)
            throw new Error(r[S]);
          if (g.header && x.deflateSetHeader(this.strm, g.header), g.dictionary) {
            var T;
            if (T = typeof g.dictionary == "string" ? e.string2buf(g.dictionary) : m.call(g.dictionary) === "[object ArrayBuffer]" ? new Uint8Array(g.dictionary) : g.dictionary, (S = x.deflateSetDictionary(this.strm, T)) !== p)
              throw new Error(r[S]);
            this._dict_set = !0;
          }
        }
        function d(f, g) {
          var S = new h(g);
          if (S.push(f, !0), S.err)
            throw S.msg || r[S.err];
          return S.result;
        }
        h.prototype.push = function(f, g) {
          var S, T, s = this.strm, o = this.options.chunkSize;
          if (this.ended)
            return !1;
          T = g === ~~g ? g : g === !0 ? 4 : 0, typeof f == "string" ? s.input = e.string2buf(f) : m.call(f) === "[object ArrayBuffer]" ? s.input = new Uint8Array(f) : s.input = f, s.next_in = 0, s.avail_in = s.input.length;
          do {
            if (s.avail_out === 0 && (s.output = new v.Buf8(o), s.next_out = 0, s.avail_out = o), (S = x.deflate(s, T)) !== 1 && S !== p)
              return this.onEnd(S), !(this.ended = !0);
            s.avail_out !== 0 && (s.avail_in !== 0 || T !== 4 && T !== 2) || (this.options.to === "string" ? this.onData(e.buf2binstring(v.shrinkBuf(s.output, s.next_out))) : this.onData(v.shrinkBuf(s.output, s.next_out)));
          } while ((0 < s.avail_in || s.avail_out === 0) && S !== 1);
          return T === 4 ? (S = x.deflateEnd(this.strm), this.onEnd(S), this.ended = !0, S === p) : T !== 2 || (this.onEnd(p), !(s.avail_out = 0));
        }, h.prototype.onData = function(f) {
          this.chunks.push(f);
        }, h.prototype.onEnd = function(f) {
          f === p && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = v.flattenChunks(this.chunks)), this.chunks = [], this.err = f, this.msg = this.strm.msg;
        }, E.Deflate = h, E.deflate = d, E.deflateRaw = function(f, g) {
          return (g = g || {}).raw = !0, d(f, g);
        }, E.gzip = function(f, g) {
          return (g = g || {}).gzip = !0, d(f, g);
        };
      }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/deflate": 46, "./zlib/messages": 51, "./zlib/zstream": 53 }], 40: [function(C, M, E) {
        var x = C("./zlib/inflate"), v = C("./utils/common"), e = C("./utils/strings"), r = C("./zlib/constants"), a = C("./zlib/messages"), m = C("./zlib/zstream"), p = C("./zlib/gzheader"), n = Object.prototype.toString;
        function i(h) {
          if (!(this instanceof i))
            return new i(h);
          this.options = v.assign({ chunkSize: 16384, windowBits: 0, to: "" }, h || {});
          var d = this.options;
          d.raw && 0 <= d.windowBits && d.windowBits < 16 && (d.windowBits = -d.windowBits, d.windowBits === 0 && (d.windowBits = -15)), !(0 <= d.windowBits && d.windowBits < 16) || h && h.windowBits || (d.windowBits += 32), 15 < d.windowBits && d.windowBits < 48 && !(15 & d.windowBits) && (d.windowBits |= 15), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new m(), this.strm.avail_out = 0;
          var f = x.inflateInit2(this.strm, d.windowBits);
          if (f !== r.Z_OK)
            throw new Error(a[f]);
          this.header = new p(), x.inflateGetHeader(this.strm, this.header);
        }
        function b(h, d) {
          var f = new i(d);
          if (f.push(h, !0), f.err)
            throw f.msg || a[f.err];
          return f.result;
        }
        i.prototype.push = function(h, d) {
          var f, g, S, T, s, o, t = this.strm, l = this.options.chunkSize, y = this.options.dictionary, k = !1;
          if (this.ended)
            return !1;
          g = d === ~~d ? d : d === !0 ? r.Z_FINISH : r.Z_NO_FLUSH, typeof h == "string" ? t.input = e.binstring2buf(h) : n.call(h) === "[object ArrayBuffer]" ? t.input = new Uint8Array(h) : t.input = h, t.next_in = 0, t.avail_in = t.input.length;
          do {
            if (t.avail_out === 0 && (t.output = new v.Buf8(l), t.next_out = 0, t.avail_out = l), (f = x.inflate(t, r.Z_NO_FLUSH)) === r.Z_NEED_DICT && y && (o = typeof y == "string" ? e.string2buf(y) : n.call(y) === "[object ArrayBuffer]" ? new Uint8Array(y) : y, f = x.inflateSetDictionary(this.strm, o)), f === r.Z_BUF_ERROR && k === !0 && (f = r.Z_OK, k = !1), f !== r.Z_STREAM_END && f !== r.Z_OK)
              return this.onEnd(f), !(this.ended = !0);
            t.next_out && (t.avail_out !== 0 && f !== r.Z_STREAM_END && (t.avail_in !== 0 || g !== r.Z_FINISH && g !== r.Z_SYNC_FLUSH) || (this.options.to === "string" ? (S = e.utf8border(t.output, t.next_out), T = t.next_out - S, s = e.buf2string(t.output, S), t.next_out = T, t.avail_out = l - T, T && v.arraySet(t.output, t.output, S, T, 0), this.onData(s)) : this.onData(v.shrinkBuf(t.output, t.next_out)))), t.avail_in === 0 && t.avail_out === 0 && (k = !0);
          } while ((0 < t.avail_in || t.avail_out === 0) && f !== r.Z_STREAM_END);
          return f === r.Z_STREAM_END && (g = r.Z_FINISH), g === r.Z_FINISH ? (f = x.inflateEnd(this.strm), this.onEnd(f), this.ended = !0, f === r.Z_OK) : g !== r.Z_SYNC_FLUSH || (this.onEnd(r.Z_OK), !(t.avail_out = 0));
        }, i.prototype.onData = function(h) {
          this.chunks.push(h);
        }, i.prototype.onEnd = function(h) {
          h === r.Z_OK && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = v.flattenChunks(this.chunks)), this.chunks = [], this.err = h, this.msg = this.strm.msg;
        }, E.Inflate = i, E.inflate = b, E.inflateRaw = function(h, d) {
          return (d = d || {}).raw = !0, b(h, d);
        }, E.ungzip = b;
      }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/constants": 44, "./zlib/gzheader": 47, "./zlib/inflate": 49, "./zlib/messages": 51, "./zlib/zstream": 53 }], 41: [function(C, M, E) {
        var x = typeof Uint8Array != "undefined" && typeof Uint16Array != "undefined" && typeof Int32Array != "undefined";
        E.assign = function(r) {
          for (var a = Array.prototype.slice.call(arguments, 1); a.length; ) {
            var m = a.shift();
            if (m) {
              if (typeof m != "object")
                throw new TypeError(m + "must be non-object");
              for (var p in m)
                m.hasOwnProperty(p) && (r[p] = m[p]);
            }
          }
          return r;
        }, E.shrinkBuf = function(r, a) {
          return r.length === a ? r : r.subarray ? r.subarray(0, a) : (r.length = a, r);
        };
        var v = { arraySet: function(r, a, m, p, n) {
          if (a.subarray && r.subarray)
            r.set(a.subarray(m, m + p), n);
          else
            for (var i = 0; i < p; i++)
              r[n + i] = a[m + i];
        }, flattenChunks: function(r) {
          var a, m, p, n, i, b;
          for (a = p = 0, m = r.length; a < m; a++)
            p += r[a].length;
          for (b = new Uint8Array(p), a = n = 0, m = r.length; a < m; a++)
            i = r[a], b.set(i, n), n += i.length;
          return b;
        } }, e = { arraySet: function(r, a, m, p, n) {
          for (var i = 0; i < p; i++)
            r[n + i] = a[m + i];
        }, flattenChunks: function(r) {
          return [].concat.apply([], r);
        } };
        E.setTyped = function(r) {
          r ? (E.Buf8 = Uint8Array, E.Buf16 = Uint16Array, E.Buf32 = Int32Array, E.assign(E, v)) : (E.Buf8 = Array, E.Buf16 = Array, E.Buf32 = Array, E.assign(E, e));
        }, E.setTyped(x);
      }, {}], 42: [function(C, M, E) {
        var x = C("./common"), v = !0, e = !0;
        try {
          String.fromCharCode.apply(null, [0]);
        } catch (p) {
          v = !1;
        }
        try {
          String.fromCharCode.apply(null, new Uint8Array(1));
        } catch (p) {
          e = !1;
        }
        for (var r = new x.Buf8(256), a = 0; a < 256; a++)
          r[a] = 252 <= a ? 6 : 248 <= a ? 5 : 240 <= a ? 4 : 224 <= a ? 3 : 192 <= a ? 2 : 1;
        function m(p, n) {
          if (n < 65537 && (p.subarray && e || !p.subarray && v))
            return String.fromCharCode.apply(null, x.shrinkBuf(p, n));
          for (var i = "", b = 0; b < n; b++)
            i += String.fromCharCode(p[b]);
          return i;
        }
        r[254] = r[254] = 1, E.string2buf = function(p) {
          var n, i, b, h, d, f = p.length, g = 0;
          for (h = 0; h < f; h++)
            (64512 & (i = p.charCodeAt(h))) == 55296 && h + 1 < f && (64512 & (b = p.charCodeAt(h + 1))) == 56320 && (i = 65536 + (i - 55296 << 10) + (b - 56320), h++), g += i < 128 ? 1 : i < 2048 ? 2 : i < 65536 ? 3 : 4;
          for (n = new x.Buf8(g), h = d = 0; d < g; h++)
            (64512 & (i = p.charCodeAt(h))) == 55296 && h + 1 < f && (64512 & (b = p.charCodeAt(h + 1))) == 56320 && (i = 65536 + (i - 55296 << 10) + (b - 56320), h++), i < 128 ? n[d++] = i : (i < 2048 ? n[d++] = 192 | i >>> 6 : (i < 65536 ? n[d++] = 224 | i >>> 12 : (n[d++] = 240 | i >>> 18, n[d++] = 128 | i >>> 12 & 63), n[d++] = 128 | i >>> 6 & 63), n[d++] = 128 | 63 & i);
          return n;
        }, E.buf2binstring = function(p) {
          return m(p, p.length);
        }, E.binstring2buf = function(p) {
          for (var n = new x.Buf8(p.length), i = 0, b = n.length; i < b; i++)
            n[i] = p.charCodeAt(i);
          return n;
        }, E.buf2string = function(p, n) {
          var i, b, h, d, f = n || p.length, g = new Array(2 * f);
          for (i = b = 0; i < f; )
            if ((h = p[i++]) < 128)
              g[b++] = h;
            else if (4 < (d = r[h]))
              g[b++] = 65533, i += d - 1;
            else {
              for (h &= d === 2 ? 31 : d === 3 ? 15 : 7; 1 < d && i < f; )
                h = h << 6 | 63 & p[i++], d--;
              1 < d ? g[b++] = 65533 : h < 65536 ? g[b++] = h : (h -= 65536, g[b++] = 55296 | h >> 10 & 1023, g[b++] = 56320 | 1023 & h);
            }
          return m(g, b);
        }, E.utf8border = function(p, n) {
          var i;
          for ((n = n || p.length) > p.length && (n = p.length), i = n - 1; 0 <= i && (192 & p[i]) == 128; )
            i--;
          return i < 0 || i === 0 ? n : i + r[p[i]] > n ? i : n;
        };
      }, { "./common": 41 }], 43: [function(C, M, E) {
        M.exports = function(x, v, e, r) {
          for (var a = 65535 & x | 0, m = x >>> 16 & 65535 | 0, p = 0; e !== 0; ) {
            for (e -= p = 2e3 < e ? 2e3 : e; m = m + (a = a + v[r++] | 0) | 0, --p; )
              ;
            a %= 65521, m %= 65521;
          }
          return a | m << 16 | 0;
        };
      }, {}], 44: [function(C, M, E) {
        M.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
      }, {}], 45: [function(C, M, E) {
        var x = function() {
          for (var v, e = [], r = 0; r < 256; r++) {
            v = r;
            for (var a = 0; a < 8; a++)
              v = 1 & v ? 3988292384 ^ v >>> 1 : v >>> 1;
            e[r] = v;
          }
          return e;
        }();
        M.exports = function(v, e, r, a) {
          var m = x, p = a + r;
          v ^= -1;
          for (var n = a; n < p; n++)
            v = v >>> 8 ^ m[255 & (v ^ e[n])];
          return -1 ^ v;
        };
      }, {}], 46: [function(C, M, E) {
        var x, v = C("../utils/common"), e = C("./trees"), r = C("./adler32"), a = C("./crc32"), m = C("./messages"), p = 0, n = 4, i = 0, b = -2, h = -1, d = 4, f = 2, g = 8, S = 9, T = 286, s = 30, o = 19, t = 2 * T + 1, l = 15, y = 3, k = 258, D = k + y + 1, _ = 42, P = 113, u = 1, R = 2, G = 3, L = 4;
        function q(c, F) {
          return c.msg = m[F], F;
        }
        function W(c) {
          return (c << 1) - (4 < c ? 9 : 0);
        }
        function J(c) {
          for (var F = c.length; 0 <= --F; )
            c[F] = 0;
        }
        function z(c) {
          var F = c.state, I = F.pending;
          I > c.avail_out && (I = c.avail_out), I !== 0 && (v.arraySet(c.output, F.pending_buf, F.pending_out, I, c.next_out), c.next_out += I, F.pending_out += I, c.total_out += I, c.avail_out -= I, F.pending -= I, F.pending === 0 && (F.pending_out = 0));
        }
        function O(c, F) {
          e._tr_flush_block(c, 0 <= c.block_start ? c.block_start : -1, c.strstart - c.block_start, F), c.block_start = c.strstart, z(c.strm);
        }
        function Q(c, F) {
          c.pending_buf[c.pending++] = F;
        }
        function V(c, F) {
          c.pending_buf[c.pending++] = F >>> 8 & 255, c.pending_buf[c.pending++] = 255 & F;
        }
        function Z(c, F) {
          var I, A, w = c.max_chain_length, N = c.strstart, j = c.prev_length, U = c.nice_match, B = c.strstart > c.w_size - D ? c.strstart - (c.w_size - D) : 0, H = c.window, X = c.w_mask, $ = c.prev, Y = c.strstart + k, ae = H[N + j - 1], te = H[N + j];
          c.prev_length >= c.good_match && (w >>= 2), U > c.lookahead && (U = c.lookahead);
          do
            if (H[(I = F) + j] === te && H[I + j - 1] === ae && H[I] === H[N] && H[++I] === H[N + 1]) {
              N += 2, I++;
              do
                ;
              while (H[++N] === H[++I] && H[++N] === H[++I] && H[++N] === H[++I] && H[++N] === H[++I] && H[++N] === H[++I] && H[++N] === H[++I] && H[++N] === H[++I] && H[++N] === H[++I] && N < Y);
              if (A = k - (Y - N), N = Y - k, j < A) {
                if (c.match_start = F, U <= (j = A))
                  break;
                ae = H[N + j - 1], te = H[N + j];
              }
            }
          while ((F = $[F & X]) > B && --w != 0);
          return j <= c.lookahead ? j : c.lookahead;
        }
        function se(c) {
          var F, I, A, w, N, j, U, B, H, X, $ = c.w_size;
          do {
            if (w = c.window_size - c.lookahead - c.strstart, c.strstart >= $ + ($ - D)) {
              for (v.arraySet(c.window, c.window, $, $, 0), c.match_start -= $, c.strstart -= $, c.block_start -= $, F = I = c.hash_size; A = c.head[--F], c.head[F] = $ <= A ? A - $ : 0, --I; )
                ;
              for (F = I = $; A = c.prev[--F], c.prev[F] = $ <= A ? A - $ : 0, --I; )
                ;
              w += $;
            }
            if (c.strm.avail_in === 0)
              break;
            if (j = c.strm, U = c.window, B = c.strstart + c.lookahead, H = w, X = void 0, X = j.avail_in, H < X && (X = H), I = X === 0 ? 0 : (j.avail_in -= X, v.arraySet(U, j.input, j.next_in, X, B), j.state.wrap === 1 ? j.adler = r(j.adler, U, X, B) : j.state.wrap === 2 && (j.adler = a(j.adler, U, X, B)), j.next_in += X, j.total_in += X, X), c.lookahead += I, c.lookahead + c.insert >= y)
              for (N = c.strstart - c.insert, c.ins_h = c.window[N], c.ins_h = (c.ins_h << c.hash_shift ^ c.window[N + 1]) & c.hash_mask; c.insert && (c.ins_h = (c.ins_h << c.hash_shift ^ c.window[N + y - 1]) & c.hash_mask, c.prev[N & c.w_mask] = c.head[c.ins_h], c.head[c.ins_h] = N, N++, c.insert--, !(c.lookahead + c.insert < y)); )
                ;
          } while (c.lookahead < D && c.strm.avail_in !== 0);
        }
        function ce(c, F) {
          for (var I, A; ; ) {
            if (c.lookahead < D) {
              if (se(c), c.lookahead < D && F === p)
                return u;
              if (c.lookahead === 0)
                break;
            }
            if (I = 0, c.lookahead >= y && (c.ins_h = (c.ins_h << c.hash_shift ^ c.window[c.strstart + y - 1]) & c.hash_mask, I = c.prev[c.strstart & c.w_mask] = c.head[c.ins_h], c.head[c.ins_h] = c.strstart), I !== 0 && c.strstart - I <= c.w_size - D && (c.match_length = Z(c, I)), c.match_length >= y)
              if (A = e._tr_tally(c, c.strstart - c.match_start, c.match_length - y), c.lookahead -= c.match_length, c.match_length <= c.max_lazy_match && c.lookahead >= y) {
                for (c.match_length--; c.strstart++, c.ins_h = (c.ins_h << c.hash_shift ^ c.window[c.strstart + y - 1]) & c.hash_mask, I = c.prev[c.strstart & c.w_mask] = c.head[c.ins_h], c.head[c.ins_h] = c.strstart, --c.match_length != 0; )
                  ;
                c.strstart++;
              } else
                c.strstart += c.match_length, c.match_length = 0, c.ins_h = c.window[c.strstart], c.ins_h = (c.ins_h << c.hash_shift ^ c.window[c.strstart + 1]) & c.hash_mask;
            else
              A = e._tr_tally(c, 0, c.window[c.strstart]), c.lookahead--, c.strstart++;
            if (A && (O(c, !1), c.strm.avail_out === 0))
              return u;
          }
          return c.insert = c.strstart < y - 1 ? c.strstart : y - 1, F === n ? (O(c, !0), c.strm.avail_out === 0 ? G : L) : c.last_lit && (O(c, !1), c.strm.avail_out === 0) ? u : R;
        }
        function ee(c, F) {
          for (var I, A, w; ; ) {
            if (c.lookahead < D) {
              if (se(c), c.lookahead < D && F === p)
                return u;
              if (c.lookahead === 0)
                break;
            }
            if (I = 0, c.lookahead >= y && (c.ins_h = (c.ins_h << c.hash_shift ^ c.window[c.strstart + y - 1]) & c.hash_mask, I = c.prev[c.strstart & c.w_mask] = c.head[c.ins_h], c.head[c.ins_h] = c.strstart), c.prev_length = c.match_length, c.prev_match = c.match_start, c.match_length = y - 1, I !== 0 && c.prev_length < c.max_lazy_match && c.strstart - I <= c.w_size - D && (c.match_length = Z(c, I), c.match_length <= 5 && (c.strategy === 1 || c.match_length === y && 4096 < c.strstart - c.match_start) && (c.match_length = y - 1)), c.prev_length >= y && c.match_length <= c.prev_length) {
              for (w = c.strstart + c.lookahead - y, A = e._tr_tally(c, c.strstart - 1 - c.prev_match, c.prev_length - y), c.lookahead -= c.prev_length - 1, c.prev_length -= 2; ++c.strstart <= w && (c.ins_h = (c.ins_h << c.hash_shift ^ c.window[c.strstart + y - 1]) & c.hash_mask, I = c.prev[c.strstart & c.w_mask] = c.head[c.ins_h], c.head[c.ins_h] = c.strstart), --c.prev_length != 0; )
                ;
              if (c.match_available = 0, c.match_length = y - 1, c.strstart++, A && (O(c, !1), c.strm.avail_out === 0))
                return u;
            } else if (c.match_available) {
              if ((A = e._tr_tally(c, 0, c.window[c.strstart - 1])) && O(c, !1), c.strstart++, c.lookahead--, c.strm.avail_out === 0)
                return u;
            } else
              c.match_available = 1, c.strstart++, c.lookahead--;
          }
          return c.match_available && (A = e._tr_tally(c, 0, c.window[c.strstart - 1]), c.match_available = 0), c.insert = c.strstart < y - 1 ? c.strstart : y - 1, F === n ? (O(c, !0), c.strm.avail_out === 0 ? G : L) : c.last_lit && (O(c, !1), c.strm.avail_out === 0) ? u : R;
        }
        function ne(c, F, I, A, w) {
          this.good_length = c, this.max_lazy = F, this.nice_length = I, this.max_chain = A, this.func = w;
        }
        function le() {
          this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = g, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new v.Buf16(2 * t), this.dyn_dtree = new v.Buf16(2 * (2 * s + 1)), this.bl_tree = new v.Buf16(2 * (2 * o + 1)), J(this.dyn_ltree), J(this.dyn_dtree), J(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new v.Buf16(l + 1), this.heap = new v.Buf16(2 * T + 1), J(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new v.Buf16(2 * T + 1), J(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
        }
        function ie(c) {
          var F;
          return c && c.state ? (c.total_in = c.total_out = 0, c.data_type = f, (F = c.state).pending = 0, F.pending_out = 0, F.wrap < 0 && (F.wrap = -F.wrap), F.status = F.wrap ? _ : P, c.adler = F.wrap === 2 ? 0 : 1, F.last_flush = p, e._tr_init(F), i) : q(c, b);
        }
        function de(c) {
          var F = ie(c);
          return F === i && function(I) {
            I.window_size = 2 * I.w_size, J(I.head), I.max_lazy_match = x[I.level].max_lazy, I.good_match = x[I.level].good_length, I.nice_match = x[I.level].nice_length, I.max_chain_length = x[I.level].max_chain, I.strstart = 0, I.block_start = 0, I.lookahead = 0, I.insert = 0, I.match_length = I.prev_length = y - 1, I.match_available = 0, I.ins_h = 0;
          }(c.state), F;
        }
        function he(c, F, I, A, w, N) {
          if (!c)
            return b;
          var j = 1;
          if (F === h && (F = 6), A < 0 ? (j = 0, A = -A) : 15 < A && (j = 2, A -= 16), w < 1 || S < w || I !== g || A < 8 || 15 < A || F < 0 || 9 < F || N < 0 || d < N)
            return q(c, b);
          A === 8 && (A = 9);
          var U = new le();
          return (c.state = U).strm = c, U.wrap = j, U.gzhead = null, U.w_bits = A, U.w_size = 1 << U.w_bits, U.w_mask = U.w_size - 1, U.hash_bits = w + 7, U.hash_size = 1 << U.hash_bits, U.hash_mask = U.hash_size - 1, U.hash_shift = ~~((U.hash_bits + y - 1) / y), U.window = new v.Buf8(2 * U.w_size), U.head = new v.Buf16(U.hash_size), U.prev = new v.Buf16(U.w_size), U.lit_bufsize = 1 << w + 6, U.pending_buf_size = 4 * U.lit_bufsize, U.pending_buf = new v.Buf8(U.pending_buf_size), U.d_buf = 1 * U.lit_bufsize, U.l_buf = 3 * U.lit_bufsize, U.level = F, U.strategy = N, U.method = I, de(c);
        }
        x = [new ne(0, 0, 0, 0, function(c, F) {
          var I = 65535;
          for (I > c.pending_buf_size - 5 && (I = c.pending_buf_size - 5); ; ) {
            if (c.lookahead <= 1) {
              if (se(c), c.lookahead === 0 && F === p)
                return u;
              if (c.lookahead === 0)
                break;
            }
            c.strstart += c.lookahead, c.lookahead = 0;
            var A = c.block_start + I;
            if ((c.strstart === 0 || c.strstart >= A) && (c.lookahead = c.strstart - A, c.strstart = A, O(c, !1), c.strm.avail_out === 0) || c.strstart - c.block_start >= c.w_size - D && (O(c, !1), c.strm.avail_out === 0))
              return u;
          }
          return c.insert = 0, F === n ? (O(c, !0), c.strm.avail_out === 0 ? G : L) : (c.strstart > c.block_start && (O(c, !1), c.strm.avail_out), u);
        }), new ne(4, 4, 8, 4, ce), new ne(4, 5, 16, 8, ce), new ne(4, 6, 32, 32, ce), new ne(4, 4, 16, 16, ee), new ne(8, 16, 32, 32, ee), new ne(8, 16, 128, 128, ee), new ne(8, 32, 128, 256, ee), new ne(32, 128, 258, 1024, ee), new ne(32, 258, 258, 4096, ee)], E.deflateInit = function(c, F) {
          return he(c, F, g, 15, 8, 0);
        }, E.deflateInit2 = he, E.deflateReset = de, E.deflateResetKeep = ie, E.deflateSetHeader = function(c, F) {
          return c && c.state ? c.state.wrap !== 2 ? b : (c.state.gzhead = F, i) : b;
        }, E.deflate = function(c, F) {
          var I, A, w, N;
          if (!c || !c.state || 5 < F || F < 0)
            return c ? q(c, b) : b;
          if (A = c.state, !c.output || !c.input && c.avail_in !== 0 || A.status === 666 && F !== n)
            return q(c, c.avail_out === 0 ? -5 : b);
          if (A.strm = c, I = A.last_flush, A.last_flush = F, A.status === _)
            if (A.wrap === 2)
              c.adler = 0, Q(A, 31), Q(A, 139), Q(A, 8), A.gzhead ? (Q(A, (A.gzhead.text ? 1 : 0) + (A.gzhead.hcrc ? 2 : 0) + (A.gzhead.extra ? 4 : 0) + (A.gzhead.name ? 8 : 0) + (A.gzhead.comment ? 16 : 0)), Q(A, 255 & A.gzhead.time), Q(A, A.gzhead.time >> 8 & 255), Q(A, A.gzhead.time >> 16 & 255), Q(A, A.gzhead.time >> 24 & 255), Q(A, A.level === 9 ? 2 : 2 <= A.strategy || A.level < 2 ? 4 : 0), Q(A, 255 & A.gzhead.os), A.gzhead.extra && A.gzhead.extra.length && (Q(A, 255 & A.gzhead.extra.length), Q(A, A.gzhead.extra.length >> 8 & 255)), A.gzhead.hcrc && (c.adler = a(c.adler, A.pending_buf, A.pending, 0)), A.gzindex = 0, A.status = 69) : (Q(A, 0), Q(A, 0), Q(A, 0), Q(A, 0), Q(A, 0), Q(A, A.level === 9 ? 2 : 2 <= A.strategy || A.level < 2 ? 4 : 0), Q(A, 3), A.status = P);
            else {
              var j = g + (A.w_bits - 8 << 4) << 8;
              j |= (2 <= A.strategy || A.level < 2 ? 0 : A.level < 6 ? 1 : A.level === 6 ? 2 : 3) << 6, A.strstart !== 0 && (j |= 32), j += 31 - j % 31, A.status = P, V(A, j), A.strstart !== 0 && (V(A, c.adler >>> 16), V(A, 65535 & c.adler)), c.adler = 1;
            }
          if (A.status === 69)
            if (A.gzhead.extra) {
              for (w = A.pending; A.gzindex < (65535 & A.gzhead.extra.length) && (A.pending !== A.pending_buf_size || (A.gzhead.hcrc && A.pending > w && (c.adler = a(c.adler, A.pending_buf, A.pending - w, w)), z(c), w = A.pending, A.pending !== A.pending_buf_size)); )
                Q(A, 255 & A.gzhead.extra[A.gzindex]), A.gzindex++;
              A.gzhead.hcrc && A.pending > w && (c.adler = a(c.adler, A.pending_buf, A.pending - w, w)), A.gzindex === A.gzhead.extra.length && (A.gzindex = 0, A.status = 73);
            } else
              A.status = 73;
          if (A.status === 73)
            if (A.gzhead.name) {
              w = A.pending;
              do {
                if (A.pending === A.pending_buf_size && (A.gzhead.hcrc && A.pending > w && (c.adler = a(c.adler, A.pending_buf, A.pending - w, w)), z(c), w = A.pending, A.pending === A.pending_buf_size)) {
                  N = 1;
                  break;
                }
                N = A.gzindex < A.gzhead.name.length ? 255 & A.gzhead.name.charCodeAt(A.gzindex++) : 0, Q(A, N);
              } while (N !== 0);
              A.gzhead.hcrc && A.pending > w && (c.adler = a(c.adler, A.pending_buf, A.pending - w, w)), N === 0 && (A.gzindex = 0, A.status = 91);
            } else
              A.status = 91;
          if (A.status === 91)
            if (A.gzhead.comment) {
              w = A.pending;
              do {
                if (A.pending === A.pending_buf_size && (A.gzhead.hcrc && A.pending > w && (c.adler = a(c.adler, A.pending_buf, A.pending - w, w)), z(c), w = A.pending, A.pending === A.pending_buf_size)) {
                  N = 1;
                  break;
                }
                N = A.gzindex < A.gzhead.comment.length ? 255 & A.gzhead.comment.charCodeAt(A.gzindex++) : 0, Q(A, N);
              } while (N !== 0);
              A.gzhead.hcrc && A.pending > w && (c.adler = a(c.adler, A.pending_buf, A.pending - w, w)), N === 0 && (A.status = 103);
            } else
              A.status = 103;
          if (A.status === 103 && (A.gzhead.hcrc ? (A.pending + 2 > A.pending_buf_size && z(c), A.pending + 2 <= A.pending_buf_size && (Q(A, 255 & c.adler), Q(A, c.adler >> 8 & 255), c.adler = 0, A.status = P)) : A.status = P), A.pending !== 0) {
            if (z(c), c.avail_out === 0)
              return A.last_flush = -1, i;
          } else if (c.avail_in === 0 && W(F) <= W(I) && F !== n)
            return q(c, -5);
          if (A.status === 666 && c.avail_in !== 0)
            return q(c, -5);
          if (c.avail_in !== 0 || A.lookahead !== 0 || F !== p && A.status !== 666) {
            var U = A.strategy === 2 ? function(B, H) {
              for (var X; ; ) {
                if (B.lookahead === 0 && (se(B), B.lookahead === 0)) {
                  if (H === p)
                    return u;
                  break;
                }
                if (B.match_length = 0, X = e._tr_tally(B, 0, B.window[B.strstart]), B.lookahead--, B.strstart++, X && (O(B, !1), B.strm.avail_out === 0))
                  return u;
              }
              return B.insert = 0, H === n ? (O(B, !0), B.strm.avail_out === 0 ? G : L) : B.last_lit && (O(B, !1), B.strm.avail_out === 0) ? u : R;
            }(A, F) : A.strategy === 3 ? function(B, H) {
              for (var X, $, Y, ae, te = B.window; ; ) {
                if (B.lookahead <= k) {
                  if (se(B), B.lookahead <= k && H === p)
                    return u;
                  if (B.lookahead === 0)
                    break;
                }
                if (B.match_length = 0, B.lookahead >= y && 0 < B.strstart && ($ = te[Y = B.strstart - 1]) === te[++Y] && $ === te[++Y] && $ === te[++Y]) {
                  ae = B.strstart + k;
                  do
                    ;
                  while ($ === te[++Y] && $ === te[++Y] && $ === te[++Y] && $ === te[++Y] && $ === te[++Y] && $ === te[++Y] && $ === te[++Y] && $ === te[++Y] && Y < ae);
                  B.match_length = k - (ae - Y), B.match_length > B.lookahead && (B.match_length = B.lookahead);
                }
                if (B.match_length >= y ? (X = e._tr_tally(B, 1, B.match_length - y), B.lookahead -= B.match_length, B.strstart += B.match_length, B.match_length = 0) : (X = e._tr_tally(B, 0, B.window[B.strstart]), B.lookahead--, B.strstart++), X && (O(B, !1), B.strm.avail_out === 0))
                  return u;
              }
              return B.insert = 0, H === n ? (O(B, !0), B.strm.avail_out === 0 ? G : L) : B.last_lit && (O(B, !1), B.strm.avail_out === 0) ? u : R;
            }(A, F) : x[A.level].func(A, F);
            if (U !== G && U !== L || (A.status = 666), U === u || U === G)
              return c.avail_out === 0 && (A.last_flush = -1), i;
            if (U === R && (F === 1 ? e._tr_align(A) : F !== 5 && (e._tr_stored_block(A, 0, 0, !1), F === 3 && (J(A.head), A.lookahead === 0 && (A.strstart = 0, A.block_start = 0, A.insert = 0))), z(c), c.avail_out === 0))
              return A.last_flush = -1, i;
          }
          return F !== n ? i : A.wrap <= 0 ? 1 : (A.wrap === 2 ? (Q(A, 255 & c.adler), Q(A, c.adler >> 8 & 255), Q(A, c.adler >> 16 & 255), Q(A, c.adler >> 24 & 255), Q(A, 255 & c.total_in), Q(A, c.total_in >> 8 & 255), Q(A, c.total_in >> 16 & 255), Q(A, c.total_in >> 24 & 255)) : (V(A, c.adler >>> 16), V(A, 65535 & c.adler)), z(c), 0 < A.wrap && (A.wrap = -A.wrap), A.pending !== 0 ? i : 1);
        }, E.deflateEnd = function(c) {
          var F;
          return c && c.state ? (F = c.state.status) !== _ && F !== 69 && F !== 73 && F !== 91 && F !== 103 && F !== P && F !== 666 ? q(c, b) : (c.state = null, F === P ? q(c, -3) : i) : b;
        }, E.deflateSetDictionary = function(c, F) {
          var I, A, w, N, j, U, B, H, X = F.length;
          if (!c || !c.state || (N = (I = c.state).wrap) === 2 || N === 1 && I.status !== _ || I.lookahead)
            return b;
          for (N === 1 && (c.adler = r(c.adler, F, X, 0)), I.wrap = 0, X >= I.w_size && (N === 0 && (J(I.head), I.strstart = 0, I.block_start = 0, I.insert = 0), H = new v.Buf8(I.w_size), v.arraySet(H, F, X - I.w_size, I.w_size, 0), F = H, X = I.w_size), j = c.avail_in, U = c.next_in, B = c.input, c.avail_in = X, c.next_in = 0, c.input = F, se(I); I.lookahead >= y; ) {
            for (A = I.strstart, w = I.lookahead - (y - 1); I.ins_h = (I.ins_h << I.hash_shift ^ I.window[A + y - 1]) & I.hash_mask, I.prev[A & I.w_mask] = I.head[I.ins_h], I.head[I.ins_h] = A, A++, --w; )
              ;
            I.strstart = A, I.lookahead = y - 1, se(I);
          }
          return I.strstart += I.lookahead, I.block_start = I.strstart, I.insert = I.lookahead, I.lookahead = 0, I.match_length = I.prev_length = y - 1, I.match_available = 0, c.next_in = U, c.input = B, c.avail_in = j, I.wrap = N, i;
        }, E.deflateInfo = "pako deflate (from Nodeca project)";
      }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./messages": 51, "./trees": 52 }], 47: [function(C, M, E) {
        M.exports = function() {
          this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1;
        };
      }, {}], 48: [function(C, M, E) {
        M.exports = function(x, v) {
          var e, r, a, m, p, n, i, b, h, d, f, g, S, T, s, o, t, l, y, k, D, _, P, u, R;
          e = x.state, r = x.next_in, u = x.input, a = r + (x.avail_in - 5), m = x.next_out, R = x.output, p = m - (v - x.avail_out), n = m + (x.avail_out - 257), i = e.dmax, b = e.wsize, h = e.whave, d = e.wnext, f = e.window, g = e.hold, S = e.bits, T = e.lencode, s = e.distcode, o = (1 << e.lenbits) - 1, t = (1 << e.distbits) - 1;
          e:
            do {
              S < 15 && (g += u[r++] << S, S += 8, g += u[r++] << S, S += 8), l = T[g & o];
              t:
                for (; ; ) {
                  if (g >>>= y = l >>> 24, S -= y, (y = l >>> 16 & 255) === 0)
                    R[m++] = 65535 & l;
                  else {
                    if (!(16 & y)) {
                      if (!(64 & y)) {
                        l = T[(65535 & l) + (g & (1 << y) - 1)];
                        continue t;
                      }
                      if (32 & y) {
                        e.mode = 12;
                        break e;
                      }
                      x.msg = "invalid literal/length code", e.mode = 30;
                      break e;
                    }
                    k = 65535 & l, (y &= 15) && (S < y && (g += u[r++] << S, S += 8), k += g & (1 << y) - 1, g >>>= y, S -= y), S < 15 && (g += u[r++] << S, S += 8, g += u[r++] << S, S += 8), l = s[g & t];
                    r:
                      for (; ; ) {
                        if (g >>>= y = l >>> 24, S -= y, !(16 & (y = l >>> 16 & 255))) {
                          if (!(64 & y)) {
                            l = s[(65535 & l) + (g & (1 << y) - 1)];
                            continue r;
                          }
                          x.msg = "invalid distance code", e.mode = 30;
                          break e;
                        }
                        if (D = 65535 & l, S < (y &= 15) && (g += u[r++] << S, (S += 8) < y && (g += u[r++] << S, S += 8)), i < (D += g & (1 << y) - 1)) {
                          x.msg = "invalid distance too far back", e.mode = 30;
                          break e;
                        }
                        if (g >>>= y, S -= y, (y = m - p) < D) {
                          if (h < (y = D - y) && e.sane) {
                            x.msg = "invalid distance too far back", e.mode = 30;
                            break e;
                          }
                          if (P = f, (_ = 0) === d) {
                            if (_ += b - y, y < k) {
                              for (k -= y; R[m++] = f[_++], --y; )
                                ;
                              _ = m - D, P = R;
                            }
                          } else if (d < y) {
                            if (_ += b + d - y, (y -= d) < k) {
                              for (k -= y; R[m++] = f[_++], --y; )
                                ;
                              if (_ = 0, d < k) {
                                for (k -= y = d; R[m++] = f[_++], --y; )
                                  ;
                                _ = m - D, P = R;
                              }
                            }
                          } else if (_ += d - y, y < k) {
                            for (k -= y; R[m++] = f[_++], --y; )
                              ;
                            _ = m - D, P = R;
                          }
                          for (; 2 < k; )
                            R[m++] = P[_++], R[m++] = P[_++], R[m++] = P[_++], k -= 3;
                          k && (R[m++] = P[_++], 1 < k && (R[m++] = P[_++]));
                        } else {
                          for (_ = m - D; R[m++] = R[_++], R[m++] = R[_++], R[m++] = R[_++], 2 < (k -= 3); )
                            ;
                          k && (R[m++] = R[_++], 1 < k && (R[m++] = R[_++]));
                        }
                        break;
                      }
                  }
                  break;
                }
            } while (r < a && m < n);
          r -= k = S >> 3, g &= (1 << (S -= k << 3)) - 1, x.next_in = r, x.next_out = m, x.avail_in = r < a ? a - r + 5 : 5 - (r - a), x.avail_out = m < n ? n - m + 257 : 257 - (m - n), e.hold = g, e.bits = S;
        };
      }, {}], 49: [function(C, M, E) {
        var x = C("../utils/common"), v = C("./adler32"), e = C("./crc32"), r = C("./inffast"), a = C("./inftrees"), m = 1, p = 2, n = 0, i = -2, b = 1, h = 852, d = 592;
        function f(_) {
          return (_ >>> 24 & 255) + (_ >>> 8 & 65280) + ((65280 & _) << 8) + ((255 & _) << 24);
        }
        function g() {
          this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new x.Buf16(320), this.work = new x.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
        }
        function S(_) {
          var P;
          return _ && _.state ? (P = _.state, _.total_in = _.total_out = P.total = 0, _.msg = "", P.wrap && (_.adler = 1 & P.wrap), P.mode = b, P.last = 0, P.havedict = 0, P.dmax = 32768, P.head = null, P.hold = 0, P.bits = 0, P.lencode = P.lendyn = new x.Buf32(h), P.distcode = P.distdyn = new x.Buf32(d), P.sane = 1, P.back = -1, n) : i;
        }
        function T(_) {
          var P;
          return _ && _.state ? ((P = _.state).wsize = 0, P.whave = 0, P.wnext = 0, S(_)) : i;
        }
        function s(_, P) {
          var u, R;
          return _ && _.state ? (R = _.state, P < 0 ? (u = 0, P = -P) : (u = 1 + (P >> 4), P < 48 && (P &= 15)), P && (P < 8 || 15 < P) ? i : (R.window !== null && R.wbits !== P && (R.window = null), R.wrap = u, R.wbits = P, T(_))) : i;
        }
        function o(_, P) {
          var u, R;
          return _ ? (R = new g(), (_.state = R).window = null, (u = s(_, P)) !== n && (_.state = null), u) : i;
        }
        var t, l, y = !0;
        function k(_) {
          if (y) {
            var P;
            for (t = new x.Buf32(512), l = new x.Buf32(32), P = 0; P < 144; )
              _.lens[P++] = 8;
            for (; P < 256; )
              _.lens[P++] = 9;
            for (; P < 280; )
              _.lens[P++] = 7;
            for (; P < 288; )
              _.lens[P++] = 8;
            for (a(m, _.lens, 0, 288, t, 0, _.work, { bits: 9 }), P = 0; P < 32; )
              _.lens[P++] = 5;
            a(p, _.lens, 0, 32, l, 0, _.work, { bits: 5 }), y = !1;
          }
          _.lencode = t, _.lenbits = 9, _.distcode = l, _.distbits = 5;
        }
        function D(_, P, u, R) {
          var G, L = _.state;
          return L.window === null && (L.wsize = 1 << L.wbits, L.wnext = 0, L.whave = 0, L.window = new x.Buf8(L.wsize)), R >= L.wsize ? (x.arraySet(L.window, P, u - L.wsize, L.wsize, 0), L.wnext = 0, L.whave = L.wsize) : (R < (G = L.wsize - L.wnext) && (G = R), x.arraySet(L.window, P, u - R, G, L.wnext), (R -= G) ? (x.arraySet(L.window, P, u - R, R, 0), L.wnext = R, L.whave = L.wsize) : (L.wnext += G, L.wnext === L.wsize && (L.wnext = 0), L.whave < L.wsize && (L.whave += G))), 0;
        }
        E.inflateReset = T, E.inflateReset2 = s, E.inflateResetKeep = S, E.inflateInit = function(_) {
          return o(_, 15);
        }, E.inflateInit2 = o, E.inflate = function(_, P) {
          var u, R, G, L, q, W, J, z, O, Q, V, Z, se, ce, ee, ne, le, ie, de, he, c, F, I, A, w = 0, N = new x.Buf8(4), j = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
          if (!_ || !_.state || !_.output || !_.input && _.avail_in !== 0)
            return i;
          (u = _.state).mode === 12 && (u.mode = 13), q = _.next_out, G = _.output, J = _.avail_out, L = _.next_in, R = _.input, W = _.avail_in, z = u.hold, O = u.bits, Q = W, V = J, F = n;
          e:
            for (; ; )
              switch (u.mode) {
                case b:
                  if (u.wrap === 0) {
                    u.mode = 13;
                    break;
                  }
                  for (; O < 16; ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  if (2 & u.wrap && z === 35615) {
                    N[u.check = 0] = 255 & z, N[1] = z >>> 8 & 255, u.check = e(u.check, N, 2, 0), O = z = 0, u.mode = 2;
                    break;
                  }
                  if (u.flags = 0, u.head && (u.head.done = !1), !(1 & u.wrap) || (((255 & z) << 8) + (z >> 8)) % 31) {
                    _.msg = "incorrect header check", u.mode = 30;
                    break;
                  }
                  if ((15 & z) != 8) {
                    _.msg = "unknown compression method", u.mode = 30;
                    break;
                  }
                  if (O -= 4, c = 8 + (15 & (z >>>= 4)), u.wbits === 0)
                    u.wbits = c;
                  else if (c > u.wbits) {
                    _.msg = "invalid window size", u.mode = 30;
                    break;
                  }
                  u.dmax = 1 << c, _.adler = u.check = 1, u.mode = 512 & z ? 10 : 12, O = z = 0;
                  break;
                case 2:
                  for (; O < 16; ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  if (u.flags = z, (255 & u.flags) != 8) {
                    _.msg = "unknown compression method", u.mode = 30;
                    break;
                  }
                  if (57344 & u.flags) {
                    _.msg = "unknown header flags set", u.mode = 30;
                    break;
                  }
                  u.head && (u.head.text = z >> 8 & 1), 512 & u.flags && (N[0] = 255 & z, N[1] = z >>> 8 & 255, u.check = e(u.check, N, 2, 0)), O = z = 0, u.mode = 3;
                case 3:
                  for (; O < 32; ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  u.head && (u.head.time = z), 512 & u.flags && (N[0] = 255 & z, N[1] = z >>> 8 & 255, N[2] = z >>> 16 & 255, N[3] = z >>> 24 & 255, u.check = e(u.check, N, 4, 0)), O = z = 0, u.mode = 4;
                case 4:
                  for (; O < 16; ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  u.head && (u.head.xflags = 255 & z, u.head.os = z >> 8), 512 & u.flags && (N[0] = 255 & z, N[1] = z >>> 8 & 255, u.check = e(u.check, N, 2, 0)), O = z = 0, u.mode = 5;
                case 5:
                  if (1024 & u.flags) {
                    for (; O < 16; ) {
                      if (W === 0)
                        break e;
                      W--, z += R[L++] << O, O += 8;
                    }
                    u.length = z, u.head && (u.head.extra_len = z), 512 & u.flags && (N[0] = 255 & z, N[1] = z >>> 8 & 255, u.check = e(u.check, N, 2, 0)), O = z = 0;
                  } else
                    u.head && (u.head.extra = null);
                  u.mode = 6;
                case 6:
                  if (1024 & u.flags && (W < (Z = u.length) && (Z = W), Z && (u.head && (c = u.head.extra_len - u.length, u.head.extra || (u.head.extra = new Array(u.head.extra_len)), x.arraySet(u.head.extra, R, L, Z, c)), 512 & u.flags && (u.check = e(u.check, R, Z, L)), W -= Z, L += Z, u.length -= Z), u.length))
                    break e;
                  u.length = 0, u.mode = 7;
                case 7:
                  if (2048 & u.flags) {
                    if (W === 0)
                      break e;
                    for (Z = 0; c = R[L + Z++], u.head && c && u.length < 65536 && (u.head.name += String.fromCharCode(c)), c && Z < W; )
                      ;
                    if (512 & u.flags && (u.check = e(u.check, R, Z, L)), W -= Z, L += Z, c)
                      break e;
                  } else
                    u.head && (u.head.name = null);
                  u.length = 0, u.mode = 8;
                case 8:
                  if (4096 & u.flags) {
                    if (W === 0)
                      break e;
                    for (Z = 0; c = R[L + Z++], u.head && c && u.length < 65536 && (u.head.comment += String.fromCharCode(c)), c && Z < W; )
                      ;
                    if (512 & u.flags && (u.check = e(u.check, R, Z, L)), W -= Z, L += Z, c)
                      break e;
                  } else
                    u.head && (u.head.comment = null);
                  u.mode = 9;
                case 9:
                  if (512 & u.flags) {
                    for (; O < 16; ) {
                      if (W === 0)
                        break e;
                      W--, z += R[L++] << O, O += 8;
                    }
                    if (z !== (65535 & u.check)) {
                      _.msg = "header crc mismatch", u.mode = 30;
                      break;
                    }
                    O = z = 0;
                  }
                  u.head && (u.head.hcrc = u.flags >> 9 & 1, u.head.done = !0), _.adler = u.check = 0, u.mode = 12;
                  break;
                case 10:
                  for (; O < 32; ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  _.adler = u.check = f(z), O = z = 0, u.mode = 11;
                case 11:
                  if (u.havedict === 0)
                    return _.next_out = q, _.avail_out = J, _.next_in = L, _.avail_in = W, u.hold = z, u.bits = O, 2;
                  _.adler = u.check = 1, u.mode = 12;
                case 12:
                  if (P === 5 || P === 6)
                    break e;
                case 13:
                  if (u.last) {
                    z >>>= 7 & O, O -= 7 & O, u.mode = 27;
                    break;
                  }
                  for (; O < 3; ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  switch (u.last = 1 & z, O -= 1, 3 & (z >>>= 1)) {
                    case 0:
                      u.mode = 14;
                      break;
                    case 1:
                      if (k(u), u.mode = 20, P !== 6)
                        break;
                      z >>>= 2, O -= 2;
                      break e;
                    case 2:
                      u.mode = 17;
                      break;
                    case 3:
                      _.msg = "invalid block type", u.mode = 30;
                  }
                  z >>>= 2, O -= 2;
                  break;
                case 14:
                  for (z >>>= 7 & O, O -= 7 & O; O < 32; ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  if ((65535 & z) != (z >>> 16 ^ 65535)) {
                    _.msg = "invalid stored block lengths", u.mode = 30;
                    break;
                  }
                  if (u.length = 65535 & z, O = z = 0, u.mode = 15, P === 6)
                    break e;
                case 15:
                  u.mode = 16;
                case 16:
                  if (Z = u.length) {
                    if (W < Z && (Z = W), J < Z && (Z = J), Z === 0)
                      break e;
                    x.arraySet(G, R, L, Z, q), W -= Z, L += Z, J -= Z, q += Z, u.length -= Z;
                    break;
                  }
                  u.mode = 12;
                  break;
                case 17:
                  for (; O < 14; ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  if (u.nlen = 257 + (31 & z), z >>>= 5, O -= 5, u.ndist = 1 + (31 & z), z >>>= 5, O -= 5, u.ncode = 4 + (15 & z), z >>>= 4, O -= 4, 286 < u.nlen || 30 < u.ndist) {
                    _.msg = "too many length or distance symbols", u.mode = 30;
                    break;
                  }
                  u.have = 0, u.mode = 18;
                case 18:
                  for (; u.have < u.ncode; ) {
                    for (; O < 3; ) {
                      if (W === 0)
                        break e;
                      W--, z += R[L++] << O, O += 8;
                    }
                    u.lens[j[u.have++]] = 7 & z, z >>>= 3, O -= 3;
                  }
                  for (; u.have < 19; )
                    u.lens[j[u.have++]] = 0;
                  if (u.lencode = u.lendyn, u.lenbits = 7, I = { bits: u.lenbits }, F = a(0, u.lens, 0, 19, u.lencode, 0, u.work, I), u.lenbits = I.bits, F) {
                    _.msg = "invalid code lengths set", u.mode = 30;
                    break;
                  }
                  u.have = 0, u.mode = 19;
                case 19:
                  for (; u.have < u.nlen + u.ndist; ) {
                    for (; ne = (w = u.lencode[z & (1 << u.lenbits) - 1]) >>> 16 & 255, le = 65535 & w, !((ee = w >>> 24) <= O); ) {
                      if (W === 0)
                        break e;
                      W--, z += R[L++] << O, O += 8;
                    }
                    if (le < 16)
                      z >>>= ee, O -= ee, u.lens[u.have++] = le;
                    else {
                      if (le === 16) {
                        for (A = ee + 2; O < A; ) {
                          if (W === 0)
                            break e;
                          W--, z += R[L++] << O, O += 8;
                        }
                        if (z >>>= ee, O -= ee, u.have === 0) {
                          _.msg = "invalid bit length repeat", u.mode = 30;
                          break;
                        }
                        c = u.lens[u.have - 1], Z = 3 + (3 & z), z >>>= 2, O -= 2;
                      } else if (le === 17) {
                        for (A = ee + 3; O < A; ) {
                          if (W === 0)
                            break e;
                          W--, z += R[L++] << O, O += 8;
                        }
                        O -= ee, c = 0, Z = 3 + (7 & (z >>>= ee)), z >>>= 3, O -= 3;
                      } else {
                        for (A = ee + 7; O < A; ) {
                          if (W === 0)
                            break e;
                          W--, z += R[L++] << O, O += 8;
                        }
                        O -= ee, c = 0, Z = 11 + (127 & (z >>>= ee)), z >>>= 7, O -= 7;
                      }
                      if (u.have + Z > u.nlen + u.ndist) {
                        _.msg = "invalid bit length repeat", u.mode = 30;
                        break;
                      }
                      for (; Z--; )
                        u.lens[u.have++] = c;
                    }
                  }
                  if (u.mode === 30)
                    break;
                  if (u.lens[256] === 0) {
                    _.msg = "invalid code -- missing end-of-block", u.mode = 30;
                    break;
                  }
                  if (u.lenbits = 9, I = { bits: u.lenbits }, F = a(m, u.lens, 0, u.nlen, u.lencode, 0, u.work, I), u.lenbits = I.bits, F) {
                    _.msg = "invalid literal/lengths set", u.mode = 30;
                    break;
                  }
                  if (u.distbits = 6, u.distcode = u.distdyn, I = { bits: u.distbits }, F = a(p, u.lens, u.nlen, u.ndist, u.distcode, 0, u.work, I), u.distbits = I.bits, F) {
                    _.msg = "invalid distances set", u.mode = 30;
                    break;
                  }
                  if (u.mode = 20, P === 6)
                    break e;
                case 20:
                  u.mode = 21;
                case 21:
                  if (6 <= W && 258 <= J) {
                    _.next_out = q, _.avail_out = J, _.next_in = L, _.avail_in = W, u.hold = z, u.bits = O, r(_, V), q = _.next_out, G = _.output, J = _.avail_out, L = _.next_in, R = _.input, W = _.avail_in, z = u.hold, O = u.bits, u.mode === 12 && (u.back = -1);
                    break;
                  }
                  for (u.back = 0; ne = (w = u.lencode[z & (1 << u.lenbits) - 1]) >>> 16 & 255, le = 65535 & w, !((ee = w >>> 24) <= O); ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  if (ne && !(240 & ne)) {
                    for (ie = ee, de = ne, he = le; ne = (w = u.lencode[he + ((z & (1 << ie + de) - 1) >> ie)]) >>> 16 & 255, le = 65535 & w, !(ie + (ee = w >>> 24) <= O); ) {
                      if (W === 0)
                        break e;
                      W--, z += R[L++] << O, O += 8;
                    }
                    z >>>= ie, O -= ie, u.back += ie;
                  }
                  if (z >>>= ee, O -= ee, u.back += ee, u.length = le, ne === 0) {
                    u.mode = 26;
                    break;
                  }
                  if (32 & ne) {
                    u.back = -1, u.mode = 12;
                    break;
                  }
                  if (64 & ne) {
                    _.msg = "invalid literal/length code", u.mode = 30;
                    break;
                  }
                  u.extra = 15 & ne, u.mode = 22;
                case 22:
                  if (u.extra) {
                    for (A = u.extra; O < A; ) {
                      if (W === 0)
                        break e;
                      W--, z += R[L++] << O, O += 8;
                    }
                    u.length += z & (1 << u.extra) - 1, z >>>= u.extra, O -= u.extra, u.back += u.extra;
                  }
                  u.was = u.length, u.mode = 23;
                case 23:
                  for (; ne = (w = u.distcode[z & (1 << u.distbits) - 1]) >>> 16 & 255, le = 65535 & w, !((ee = w >>> 24) <= O); ) {
                    if (W === 0)
                      break e;
                    W--, z += R[L++] << O, O += 8;
                  }
                  if (!(240 & ne)) {
                    for (ie = ee, de = ne, he = le; ne = (w = u.distcode[he + ((z & (1 << ie + de) - 1) >> ie)]) >>> 16 & 255, le = 65535 & w, !(ie + (ee = w >>> 24) <= O); ) {
                      if (W === 0)
                        break e;
                      W--, z += R[L++] << O, O += 8;
                    }
                    z >>>= ie, O -= ie, u.back += ie;
                  }
                  if (z >>>= ee, O -= ee, u.back += ee, 64 & ne) {
                    _.msg = "invalid distance code", u.mode = 30;
                    break;
                  }
                  u.offset = le, u.extra = 15 & ne, u.mode = 24;
                case 24:
                  if (u.extra) {
                    for (A = u.extra; O < A; ) {
                      if (W === 0)
                        break e;
                      W--, z += R[L++] << O, O += 8;
                    }
                    u.offset += z & (1 << u.extra) - 1, z >>>= u.extra, O -= u.extra, u.back += u.extra;
                  }
                  if (u.offset > u.dmax) {
                    _.msg = "invalid distance too far back", u.mode = 30;
                    break;
                  }
                  u.mode = 25;
                case 25:
                  if (J === 0)
                    break e;
                  if (Z = V - J, u.offset > Z) {
                    if ((Z = u.offset - Z) > u.whave && u.sane) {
                      _.msg = "invalid distance too far back", u.mode = 30;
                      break;
                    }
                    se = Z > u.wnext ? (Z -= u.wnext, u.wsize - Z) : u.wnext - Z, Z > u.length && (Z = u.length), ce = u.window;
                  } else
                    ce = G, se = q - u.offset, Z = u.length;
                  for (J < Z && (Z = J), J -= Z, u.length -= Z; G[q++] = ce[se++], --Z; )
                    ;
                  u.length === 0 && (u.mode = 21);
                  break;
                case 26:
                  if (J === 0)
                    break e;
                  G[q++] = u.length, J--, u.mode = 21;
                  break;
                case 27:
                  if (u.wrap) {
                    for (; O < 32; ) {
                      if (W === 0)
                        break e;
                      W--, z |= R[L++] << O, O += 8;
                    }
                    if (V -= J, _.total_out += V, u.total += V, V && (_.adler = u.check = u.flags ? e(u.check, G, V, q - V) : v(u.check, G, V, q - V)), V = J, (u.flags ? z : f(z)) !== u.check) {
                      _.msg = "incorrect data check", u.mode = 30;
                      break;
                    }
                    O = z = 0;
                  }
                  u.mode = 28;
                case 28:
                  if (u.wrap && u.flags) {
                    for (; O < 32; ) {
                      if (W === 0)
                        break e;
                      W--, z += R[L++] << O, O += 8;
                    }
                    if (z !== (4294967295 & u.total)) {
                      _.msg = "incorrect length check", u.mode = 30;
                      break;
                    }
                    O = z = 0;
                  }
                  u.mode = 29;
                case 29:
                  F = 1;
                  break e;
                case 30:
                  F = -3;
                  break e;
                case 31:
                  return -4;
                case 32:
                default:
                  return i;
              }
          return _.next_out = q, _.avail_out = J, _.next_in = L, _.avail_in = W, u.hold = z, u.bits = O, (u.wsize || V !== _.avail_out && u.mode < 30 && (u.mode < 27 || P !== 4)) && D(_, _.output, _.next_out, V - _.avail_out) ? (u.mode = 31, -4) : (Q -= _.avail_in, V -= _.avail_out, _.total_in += Q, _.total_out += V, u.total += V, u.wrap && V && (_.adler = u.check = u.flags ? e(u.check, G, V, _.next_out - V) : v(u.check, G, V, _.next_out - V)), _.data_type = u.bits + (u.last ? 64 : 0) + (u.mode === 12 ? 128 : 0) + (u.mode === 20 || u.mode === 15 ? 256 : 0), (Q == 0 && V === 0 || P === 4) && F === n && (F = -5), F);
        }, E.inflateEnd = function(_) {
          if (!_ || !_.state)
            return i;
          var P = _.state;
          return P.window && (P.window = null), _.state = null, n;
        }, E.inflateGetHeader = function(_, P) {
          var u;
          return _ && _.state && 2 & (u = _.state).wrap ? ((u.head = P).done = !1, n) : i;
        }, E.inflateSetDictionary = function(_, P) {
          var u, R = P.length;
          return _ && _.state ? (u = _.state).wrap !== 0 && u.mode !== 11 ? i : u.mode === 11 && v(1, P, R, 0) !== u.check ? -3 : D(_, P, R, R) ? (u.mode = 31, -4) : (u.havedict = 1, n) : i;
        }, E.inflateInfo = "pako inflate (from Nodeca project)";
      }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./inffast": 48, "./inftrees": 50 }], 50: [function(C, M, E) {
        var x = C("../utils/common"), v = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], e = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], r = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], a = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
        M.exports = function(m, p, n, i, b, h, d, f) {
          var g, S, T, s, o, t, l, y, k, D = f.bits, _ = 0, P = 0, u = 0, R = 0, G = 0, L = 0, q = 0, W = 0, J = 0, z = 0, O = null, Q = 0, V = new x.Buf16(16), Z = new x.Buf16(16), se = null, ce = 0;
          for (_ = 0; _ <= 15; _++)
            V[_] = 0;
          for (P = 0; P < i; P++)
            V[p[n + P]]++;
          for (G = D, R = 15; 1 <= R && V[R] === 0; R--)
            ;
          if (R < G && (G = R), R === 0)
            return b[h++] = 20971520, b[h++] = 20971520, f.bits = 1, 0;
          for (u = 1; u < R && V[u] === 0; u++)
            ;
          for (G < u && (G = u), _ = W = 1; _ <= 15; _++)
            if (W <<= 1, (W -= V[_]) < 0)
              return -1;
          if (0 < W && (m === 0 || R !== 1))
            return -1;
          for (Z[1] = 0, _ = 1; _ < 15; _++)
            Z[_ + 1] = Z[_] + V[_];
          for (P = 0; P < i; P++)
            p[n + P] !== 0 && (d[Z[p[n + P]]++] = P);
          if (t = m === 0 ? (O = se = d, 19) : m === 1 ? (O = v, Q -= 257, se = e, ce -= 257, 256) : (O = r, se = a, -1), _ = u, o = h, q = P = z = 0, T = -1, s = (J = 1 << (L = G)) - 1, m === 1 && 852 < J || m === 2 && 592 < J)
            return 1;
          for (; ; ) {
            for (l = _ - q, k = d[P] < t ? (y = 0, d[P]) : d[P] > t ? (y = se[ce + d[P]], O[Q + d[P]]) : (y = 96, 0), g = 1 << _ - q, u = S = 1 << L; b[o + (z >> q) + (S -= g)] = l << 24 | y << 16 | k | 0, S !== 0; )
              ;
            for (g = 1 << _ - 1; z & g; )
              g >>= 1;
            if (g !== 0 ? (z &= g - 1, z += g) : z = 0, P++, --V[_] == 0) {
              if (_ === R)
                break;
              _ = p[n + d[P]];
            }
            if (G < _ && (z & s) !== T) {
              for (q === 0 && (q = G), o += u, W = 1 << (L = _ - q); L + q < R && !((W -= V[L + q]) <= 0); )
                L++, W <<= 1;
              if (J += 1 << L, m === 1 && 852 < J || m === 2 && 592 < J)
                return 1;
              b[T = z & s] = G << 24 | L << 16 | o - h | 0;
            }
          }
          return z !== 0 && (b[o + z] = _ - q << 24 | 64 << 16 | 0), f.bits = G, 0;
        };
      }, { "../utils/common": 41 }], 51: [function(C, M, E) {
        M.exports = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
      }, {}], 52: [function(C, M, E) {
        var x = C("../utils/common"), v = 0, e = 1;
        function r(w) {
          for (var N = w.length; 0 <= --N; )
            w[N] = 0;
        }
        var a = 0, m = 29, p = 256, n = p + 1 + m, i = 30, b = 19, h = 2 * n + 1, d = 15, f = 16, g = 7, S = 256, T = 16, s = 17, o = 18, t = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], l = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], y = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], k = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], D = new Array(2 * (n + 2));
        r(D);
        var _ = new Array(2 * i);
        r(_);
        var P = new Array(512);
        r(P);
        var u = new Array(256);
        r(u);
        var R = new Array(m);
        r(R);
        var G, L, q, W = new Array(i);
        function J(w, N, j, U, B) {
          this.static_tree = w, this.extra_bits = N, this.extra_base = j, this.elems = U, this.max_length = B, this.has_stree = w && w.length;
        }
        function z(w, N) {
          this.dyn_tree = w, this.max_code = 0, this.stat_desc = N;
        }
        function O(w) {
          return w < 256 ? P[w] : P[256 + (w >>> 7)];
        }
        function Q(w, N) {
          w.pending_buf[w.pending++] = 255 & N, w.pending_buf[w.pending++] = N >>> 8 & 255;
        }
        function V(w, N, j) {
          w.bi_valid > f - j ? (w.bi_buf |= N << w.bi_valid & 65535, Q(w, w.bi_buf), w.bi_buf = N >> f - w.bi_valid, w.bi_valid += j - f) : (w.bi_buf |= N << w.bi_valid & 65535, w.bi_valid += j);
        }
        function Z(w, N, j) {
          V(w, j[2 * N], j[2 * N + 1]);
        }
        function se(w, N) {
          for (var j = 0; j |= 1 & w, w >>>= 1, j <<= 1, 0 < --N; )
            ;
          return j >>> 1;
        }
        function ce(w, N, j) {
          var U, B, H = new Array(d + 1), X = 0;
          for (U = 1; U <= d; U++)
            H[U] = X = X + j[U - 1] << 1;
          for (B = 0; B <= N; B++) {
            var $ = w[2 * B + 1];
            $ !== 0 && (w[2 * B] = se(H[$]++, $));
          }
        }
        function ee(w) {
          var N;
          for (N = 0; N < n; N++)
            w.dyn_ltree[2 * N] = 0;
          for (N = 0; N < i; N++)
            w.dyn_dtree[2 * N] = 0;
          for (N = 0; N < b; N++)
            w.bl_tree[2 * N] = 0;
          w.dyn_ltree[2 * S] = 1, w.opt_len = w.static_len = 0, w.last_lit = w.matches = 0;
        }
        function ne(w) {
          8 < w.bi_valid ? Q(w, w.bi_buf) : 0 < w.bi_valid && (w.pending_buf[w.pending++] = w.bi_buf), w.bi_buf = 0, w.bi_valid = 0;
        }
        function le(w, N, j, U) {
          var B = 2 * N, H = 2 * j;
          return w[B] < w[H] || w[B] === w[H] && U[N] <= U[j];
        }
        function ie(w, N, j) {
          for (var U = w.heap[j], B = j << 1; B <= w.heap_len && (B < w.heap_len && le(N, w.heap[B + 1], w.heap[B], w.depth) && B++, !le(N, U, w.heap[B], w.depth)); )
            w.heap[j] = w.heap[B], j = B, B <<= 1;
          w.heap[j] = U;
        }
        function de(w, N, j) {
          var U, B, H, X, $ = 0;
          if (w.last_lit !== 0)
            for (; U = w.pending_buf[w.d_buf + 2 * $] << 8 | w.pending_buf[w.d_buf + 2 * $ + 1], B = w.pending_buf[w.l_buf + $], $++, U === 0 ? Z(w, B, N) : (Z(w, (H = u[B]) + p + 1, N), (X = t[H]) !== 0 && V(w, B -= R[H], X), Z(w, H = O(--U), j), (X = l[H]) !== 0 && V(w, U -= W[H], X)), $ < w.last_lit; )
              ;
          Z(w, S, N);
        }
        function he(w, N) {
          var j, U, B, H = N.dyn_tree, X = N.stat_desc.static_tree, $ = N.stat_desc.has_stree, Y = N.stat_desc.elems, ae = -1;
          for (w.heap_len = 0, w.heap_max = h, j = 0; j < Y; j++)
            H[2 * j] !== 0 ? (w.heap[++w.heap_len] = ae = j, w.depth[j] = 0) : H[2 * j + 1] = 0;
          for (; w.heap_len < 2; )
            H[2 * (B = w.heap[++w.heap_len] = ae < 2 ? ++ae : 0)] = 1, w.depth[B] = 0, w.opt_len--, $ && (w.static_len -= X[2 * B + 1]);
          for (N.max_code = ae, j = w.heap_len >> 1; 1 <= j; j--)
            ie(w, H, j);
          for (B = Y; j = w.heap[1], w.heap[1] = w.heap[w.heap_len--], ie(w, H, 1), U = w.heap[1], w.heap[--w.heap_max] = j, w.heap[--w.heap_max] = U, H[2 * B] = H[2 * j] + H[2 * U], w.depth[B] = (w.depth[j] >= w.depth[U] ? w.depth[j] : w.depth[U]) + 1, H[2 * j + 1] = H[2 * U + 1] = B, w.heap[1] = B++, ie(w, H, 1), 2 <= w.heap_len; )
            ;
          w.heap[--w.heap_max] = w.heap[1], function(te, ue) {
            var me, fe, ge, oe, ve, Se, pe = ue.dyn_tree, Te = ue.max_code, Re = ue.stat_desc.static_tree, ze = ue.stat_desc.has_stree, Ie = ue.stat_desc.extra_bits, Ee = ue.stat_desc.extra_base, be = ue.stat_desc.max_length, _e = 0;
            for (oe = 0; oe <= d; oe++)
              te.bl_count[oe] = 0;
            for (pe[2 * te.heap[te.heap_max] + 1] = 0, me = te.heap_max + 1; me < h; me++)
              be < (oe = pe[2 * pe[2 * (fe = te.heap[me]) + 1] + 1] + 1) && (oe = be, _e++), pe[2 * fe + 1] = oe, Te < fe || (te.bl_count[oe]++, ve = 0, Ee <= fe && (ve = Ie[fe - Ee]), Se = pe[2 * fe], te.opt_len += Se * (oe + ve), ze && (te.static_len += Se * (Re[2 * fe + 1] + ve)));
            if (_e !== 0) {
              do {
                for (oe = be - 1; te.bl_count[oe] === 0; )
                  oe--;
                te.bl_count[oe]--, te.bl_count[oe + 1] += 2, te.bl_count[be]--, _e -= 2;
              } while (0 < _e);
              for (oe = be; oe !== 0; oe--)
                for (fe = te.bl_count[oe]; fe !== 0; )
                  Te < (ge = te.heap[--me]) || (pe[2 * ge + 1] !== oe && (te.opt_len += (oe - pe[2 * ge + 1]) * pe[2 * ge], pe[2 * ge + 1] = oe), fe--);
            }
          }(w, N), ce(H, ae, w.bl_count);
        }
        function c(w, N, j) {
          var U, B, H = -1, X = N[1], $ = 0, Y = 7, ae = 4;
          for (X === 0 && (Y = 138, ae = 3), N[2 * (j + 1) + 1] = 65535, U = 0; U <= j; U++)
            B = X, X = N[2 * (U + 1) + 1], ++$ < Y && B === X || ($ < ae ? w.bl_tree[2 * B] += $ : B !== 0 ? (B !== H && w.bl_tree[2 * B]++, w.bl_tree[2 * T]++) : $ <= 10 ? w.bl_tree[2 * s]++ : w.bl_tree[2 * o]++, H = B, ae = ($ = 0) === X ? (Y = 138, 3) : B === X ? (Y = 6, 3) : (Y = 7, 4));
        }
        function F(w, N, j) {
          var U, B, H = -1, X = N[1], $ = 0, Y = 7, ae = 4;
          for (X === 0 && (Y = 138, ae = 3), U = 0; U <= j; U++)
            if (B = X, X = N[2 * (U + 1) + 1], !(++$ < Y && B === X)) {
              if ($ < ae)
                for (; Z(w, B, w.bl_tree), --$ != 0; )
                  ;
              else
                B !== 0 ? (B !== H && (Z(w, B, w.bl_tree), $--), Z(w, T, w.bl_tree), V(w, $ - 3, 2)) : $ <= 10 ? (Z(w, s, w.bl_tree), V(w, $ - 3, 3)) : (Z(w, o, w.bl_tree), V(w, $ - 11, 7));
              H = B, ae = ($ = 0) === X ? (Y = 138, 3) : B === X ? (Y = 6, 3) : (Y = 7, 4);
            }
        }
        r(W);
        var I = !1;
        function A(w, N, j, U) {
          V(w, (a << 1) + (U ? 1 : 0), 3), function(B, H, X, $) {
            ne(B), $ && (Q(B, X), Q(B, ~X)), x.arraySet(B.pending_buf, B.window, H, X, B.pending), B.pending += X;
          }(w, N, j, !0);
        }
        E._tr_init = function(w) {
          I || (function() {
            var N, j, U, B, H, X = new Array(d + 1);
            for (B = U = 0; B < m - 1; B++)
              for (R[B] = U, N = 0; N < 1 << t[B]; N++)
                u[U++] = B;
            for (u[U - 1] = B, B = H = 0; B < 16; B++)
              for (W[B] = H, N = 0; N < 1 << l[B]; N++)
                P[H++] = B;
            for (H >>= 7; B < i; B++)
              for (W[B] = H << 7, N = 0; N < 1 << l[B] - 7; N++)
                P[256 + H++] = B;
            for (j = 0; j <= d; j++)
              X[j] = 0;
            for (N = 0; N <= 143; )
              D[2 * N + 1] = 8, N++, X[8]++;
            for (; N <= 255; )
              D[2 * N + 1] = 9, N++, X[9]++;
            for (; N <= 279; )
              D[2 * N + 1] = 7, N++, X[7]++;
            for (; N <= 287; )
              D[2 * N + 1] = 8, N++, X[8]++;
            for (ce(D, n + 1, X), N = 0; N < i; N++)
              _[2 * N + 1] = 5, _[2 * N] = se(N, 5);
            G = new J(D, t, p + 1, n, d), L = new J(_, l, 0, i, d), q = new J(new Array(0), y, 0, b, g);
          }(), I = !0), w.l_desc = new z(w.dyn_ltree, G), w.d_desc = new z(w.dyn_dtree, L), w.bl_desc = new z(w.bl_tree, q), w.bi_buf = 0, w.bi_valid = 0, ee(w);
        }, E._tr_stored_block = A, E._tr_flush_block = function(w, N, j, U) {
          var B, H, X = 0;
          0 < w.level ? (w.strm.data_type === 2 && (w.strm.data_type = function($) {
            var Y, ae = 4093624447;
            for (Y = 0; Y <= 31; Y++, ae >>>= 1)
              if (1 & ae && $.dyn_ltree[2 * Y] !== 0)
                return v;
            if ($.dyn_ltree[18] !== 0 || $.dyn_ltree[20] !== 0 || $.dyn_ltree[26] !== 0)
              return e;
            for (Y = 32; Y < p; Y++)
              if ($.dyn_ltree[2 * Y] !== 0)
                return e;
            return v;
          }(w)), he(w, w.l_desc), he(w, w.d_desc), X = function($) {
            var Y;
            for (c($, $.dyn_ltree, $.l_desc.max_code), c($, $.dyn_dtree, $.d_desc.max_code), he($, $.bl_desc), Y = b - 1; 3 <= Y && $.bl_tree[2 * k[Y] + 1] === 0; Y--)
              ;
            return $.opt_len += 3 * (Y + 1) + 5 + 5 + 4, Y;
          }(w), B = w.opt_len + 3 + 7 >>> 3, (H = w.static_len + 3 + 7 >>> 3) <= B && (B = H)) : B = H = j + 5, j + 4 <= B && N !== -1 ? A(w, N, j, U) : w.strategy === 4 || H === B ? (V(w, 2 + (U ? 1 : 0), 3), de(w, D, _)) : (V(w, 4 + (U ? 1 : 0), 3), function($, Y, ae, te) {
            var ue;
            for (V($, Y - 257, 5), V($, ae - 1, 5), V($, te - 4, 4), ue = 0; ue < te; ue++)
              V($, $.bl_tree[2 * k[ue] + 1], 3);
            F($, $.dyn_ltree, Y - 1), F($, $.dyn_dtree, ae - 1);
          }(w, w.l_desc.max_code + 1, w.d_desc.max_code + 1, X + 1), de(w, w.dyn_ltree, w.dyn_dtree)), ee(w), U && ne(w);
        }, E._tr_tally = function(w, N, j) {
          return w.pending_buf[w.d_buf + 2 * w.last_lit] = N >>> 8 & 255, w.pending_buf[w.d_buf + 2 * w.last_lit + 1] = 255 & N, w.pending_buf[w.l_buf + w.last_lit] = 255 & j, w.last_lit++, N === 0 ? w.dyn_ltree[2 * j]++ : (w.matches++, N--, w.dyn_ltree[2 * (u[j] + p + 1)]++, w.dyn_dtree[2 * O(N)]++), w.last_lit === w.lit_bufsize - 1;
        }, E._tr_align = function(w) {
          V(w, 2, 3), Z(w, S, D), function(N) {
            N.bi_valid === 16 ? (Q(N, N.bi_buf), N.bi_buf = 0, N.bi_valid = 0) : 8 <= N.bi_valid && (N.pending_buf[N.pending++] = 255 & N.bi_buf, N.bi_buf >>= 8, N.bi_valid -= 8);
          }(w);
        };
      }, { "../utils/common": 41 }], 53: [function(C, M, E) {
        M.exports = function() {
          this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
        };
      }, {}], 54: [function(C, M, E) {
        (function(x) {
          (function(v, e) {
            if (!v.setImmediate) {
              var r, a, m, p, n = 1, i = {}, b = !1, h = v.document, d = Object.getPrototypeOf && Object.getPrototypeOf(v);
              d = d && d.setTimeout ? d : v, r = {}.toString.call(v.process) === "[object process]" ? function(T) {
                process.nextTick(function() {
                  g(T);
                });
              } : function() {
                if (v.postMessage && !v.importScripts) {
                  var T = !0, s = v.onmessage;
                  return v.onmessage = function() {
                    T = !1;
                  }, v.postMessage("", "*"), v.onmessage = s, T;
                }
              }() ? (p = "setImmediate$" + Math.random() + "$", v.addEventListener ? v.addEventListener("message", S, !1) : v.attachEvent("onmessage", S), function(T) {
                v.postMessage(p + T, "*");
              }) : v.MessageChannel ? ((m = new MessageChannel()).port1.onmessage = function(T) {
                g(T.data);
              }, function(T) {
                m.port2.postMessage(T);
              }) : h && "onreadystatechange" in h.createElement("script") ? (a = h.documentElement, function(T) {
                var s = h.createElement("script");
                s.onreadystatechange = function() {
                  g(T), s.onreadystatechange = null, a.removeChild(s), s = null;
                }, a.appendChild(s);
              }) : function(T) {
                setTimeout(g, 0, T);
              }, d.setImmediate = function(T) {
                typeof T != "function" && (T = new Function("" + T));
                for (var s = new Array(arguments.length - 1), o = 0; o < s.length; o++)
                  s[o] = arguments[o + 1];
                var t = { callback: T, args: s };
                return i[n] = t, r(n), n++;
              }, d.clearImmediate = f;
            }
            function f(T) {
              delete i[T];
            }
            function g(T) {
              if (b)
                setTimeout(g, 0, T);
              else {
                var s = i[T];
                if (s) {
                  b = !0;
                  try {
                    (function(o) {
                      var t = o.callback, l = o.args;
                      switch (l.length) {
                        case 0:
                          t();
                          break;
                        case 1:
                          t(l[0]);
                          break;
                        case 2:
                          t(l[0], l[1]);
                          break;
                        case 3:
                          t(l[0], l[1], l[2]);
                          break;
                        default:
                          t.apply(e, l);
                      }
                    })(s);
                  } finally {
                    f(T), b = !1;
                  }
                }
              }
            }
            function S(T) {
              T.source === v && typeof T.data == "string" && T.data.indexOf(p) === 0 && g(+T.data.slice(p.length));
            }
          })(typeof self == "undefined" ? x === void 0 ? this : x : self);
        }).call(this, typeof ke != "undefined" ? ke : typeof self != "undefined" ? self : typeof window != "undefined" ? window : {});
      }, {}] }, {}, [10])(10);
    });
  }(Ze)), xe;
}
(function(K, re) {
  (function(C, M) {
    K.exports = M(Ve());
  })(globalThis, (C) => (() => {
    var M = { 438: (v, e, r) => {
      r.r(e), r.d(e, { default: () => g });
      var a = r(537), m = r.n(a), p = r(645), n = r.n(p), i = r(806), b = r.n(i), h = new URL(r(583), r.b), d = n()(m()), f = b()(h);
      d.push([v.id, '@namespace "http://www.w3.org/1998/Math/MathML";math{display:inline-block;line-height:initial}mfrac{display:inline-block;vertical-align:-50%;text-align:center}mfrac>:first-child{border-bottom:solid thin currentColor}mfrac>*{display:block}msub>:nth-child(2){font-size:smaller;vertical-align:sub}msup>:nth-child(2){font-size:smaller;vertical-align:super}munder,mover,munderover{display:inline-flex;flex-flow:column nowrap;vertical-align:middle;text-align:center}munder>:not(:first-child),mover>:not(:first-child),munderover>:not(:first-child){font-size:smaller}munderover>:last-child{order:-1}mroot,msqrt{position:relative;display:inline-block;border-top:solid thin currentColor;margin-top:.5px;vertical-align:middle;margin-left:1ch}mroot:before,msqrt:before{content:"";display:inline-block;position:absolute;width:1ch;left:-1ch;top:-1px;bottom:0;background-image:url(' + f + ")}", "", { version: 3, sources: ["webpack://./src/mathml.scss"], names: [], mappings: "AAAA,+CAAA,CAEA,KACI,oBAAA,CACA,mBAAA,CAGJ,MACI,oBAAA,CACA,mBAAA,CACA,iBAAA,CAEA,mBACI,qCAAA,CAGJ,QACI,aAAA,CAKJ,mBACI,iBAAA,CACA,kBAAA,CAKJ,mBACI,iBAAA,CACA,oBAAA,CAIR,wBACI,mBAAA,CACA,uBAAA,CACA,qBAAA,CACA,iBAAA,CAEA,iFACI,iBAAA,CAKJ,uBAAA,QAAA,CAGJ,YACI,iBAAA,CACA,oBAAA,CACA,kCAAA,CACA,eAAA,CACA,qBAAA,CACA,eAAA,CAEA,0BACI,UAAA,CACA,oBAAA,CACA,iBAAA,CACA,SAAA,CACA,SAAA,CACA,QAAA,CACA,QAAA,CACA,wDAAA", sourcesContent: [`@namespace "http://www.w3.org/1998/Math/MathML";\r
\r
math {\r
    display: inline-block;\r
    line-height: initial;\r
}\r
\r
mfrac {\r
    display: inline-block;\r
    vertical-align: -50%;\r
    text-align: center;\r
\r
    &>:first-child {\r
        border-bottom: solid thin currentColor;\r
    }\r
\r
    &>* {\r
        display: block;\r
    }\r
}\r
\r
msub {\r
    &>:nth-child(2) {\r
        font-size: smaller;\r
        vertical-align: sub;\r
    }\r
}\r
\r
msup {\r
    &>:nth-child(2) {\r
        font-size: smaller;\r
        vertical-align: super;\r
    }\r
}\r
\r
munder, mover, munderover {\r
    display: inline-flex;\r
    flex-flow: column nowrap;\r
    vertical-align: middle;\r
    text-align: center;\r
\r
    &>:not(:first-child) {\r
        font-size: smaller;\r
    }\r
}\r
\r
munderover {\r
    &>:last-child { order: -1; }\r
}\r
\r
mroot, msqrt {\r
    position: relative;\r
    display: inline-block;\r
    border-top: solid thin currentColor;  \r
    margin-top: 0.5px;\r
    vertical-align: middle;  \r
    margin-left: 1ch; \r
\r
    &:before {\r
        content: "";\r
        display: inline-block;\r
        position: absolute;\r
        width: 1ch;\r
        left: -1ch;\r
        top: -1px;\r
        bottom: 0;\r
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 100' preserveAspectRatio='none'%3E%3Cpath d='m0,75 l5,0 l5,25 l10,-100' stroke='black' fill='none' vector-effect='non-scaling-stroke'/%3E%3C/svg%3E");\r
    }\r
}`], sourceRoot: "" }]);
      const g = d.toString();
    }, 645: (v) => {
      v.exports = function(e) {
        var r = [];
        return r.toString = function() {
          return this.map(function(a) {
            var m = "", p = a[5] !== void 0;
            return a[4] && (m += "@supports (".concat(a[4], ") {")), a[2] && (m += "@media ".concat(a[2], " {")), p && (m += "@layer".concat(a[5].length > 0 ? " ".concat(a[5]) : "", " {")), m += e(a), p && (m += "}"), a[2] && (m += "}"), a[4] && (m += "}"), m;
          }).join("");
        }, r.i = function(a, m, p, n, i) {
          typeof a == "string" && (a = [[null, a, void 0]]);
          var b = {};
          if (p)
            for (var h = 0; h < this.length; h++) {
              var d = this[h][0];
              d != null && (b[d] = !0);
            }
          for (var f = 0; f < a.length; f++) {
            var g = [].concat(a[f]);
            p && b[g[0]] || (i !== void 0 && (g[5] === void 0 || (g[1] = "@layer".concat(g[5].length > 0 ? " ".concat(g[5]) : "", " {").concat(g[1], "}")), g[5] = i), m && (g[2] && (g[1] = "@media ".concat(g[2], " {").concat(g[1], "}")), g[2] = m), n && (g[4] ? (g[1] = "@supports (".concat(g[4], ") {").concat(g[1], "}"), g[4] = n) : g[4] = "".concat(n)), r.push(g));
          }
        }, r;
      };
    }, 806: (v) => {
      v.exports = function(e, r) {
        return r || (r = {}), e && (e = String(e.__esModule ? e.default : e), /^['"].*['"]$/.test(e) && (e = e.slice(1, -1)), r.hash && (e += r.hash), /["'() \t\n]|(%20)/.test(e) || r.needQuotes ? '"'.concat(e.replace(/"/g, '\\"').replace(/\n/g, "\\n"), '"') : e);
      };
    }, 537: (v) => {
      v.exports = function(e) {
        var r = e[1], a = e[3];
        if (!a)
          return r;
        if (typeof btoa == "function") {
          var m = btoa(unescape(encodeURIComponent(JSON.stringify(a)))), p = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(m), n = "/*# ".concat(p, " */"), i = a.sources.map(function(b) {
            return "/*# sourceURL=".concat(a.sourceRoot || "").concat(b, " */");
          });
          return [r].concat(i).concat([n]).join(`
`);
        }
        return [r].join(`
`);
      };
    }, 522: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.OpenXmlPackage = void 0;
      const a = r(626), m = r(472), p = r(593), n = r(461);
      class i {
        constructor(h, d) {
          this._zip = h, this.options = d, this.xmlParser = new m.XmlParser();
        }
        get(h) {
          return this._zip.files[function(d) {
            return d.startsWith("/") ? d.substr(1) : d;
          }(h)];
        }
        update(h, d) {
          this._zip.file(h, d);
        }
        static load(h, d) {
          return a.loadAsync(h).then((f) => new i(f, d));
        }
        save(h = "blob") {
          return this._zip.generateAsync({ type: h });
        }
        load(h, d = "string") {
          var f, g;
          return (g = (f = this.get(h)) === null || f === void 0 ? void 0 : f.async(d)) !== null && g !== void 0 ? g : Promise.resolve(null);
        }
        loadRelationships(h = null) {
          let d = "_rels/.rels";
          if (h != null) {
            const [f, g] = (0, p.splitPath)(h);
            d = `${f}_rels/${g}.rels`;
          }
          return this.load(d).then((f) => f ? (0, n.parseRelationships)(this.parseXmlDocument(f).firstElementChild, this.xmlParser) : null);
        }
        parseXmlDocument(h) {
          return (0, m.parseXmlString)(h, this.options.trimXmlDeclaration);
        }
      }
      e.OpenXmlPackage = i;
    }, 530: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.Part = void 0;
      const a = r(472);
      e.Part = class {
        constructor(m, p) {
          this._package = m, this.path = p;
        }
        load() {
          return Promise.all([this._package.loadRelationships(this.path).then((m) => {
            this.rels = m;
          }), this._package.load(this.path).then((m) => {
            const p = this._package.parseXmlDocument(m);
            this._package.options.keepOrigin && (this._xmlDocument = p), this.parseXml(p.firstElementChild);
          })]);
        }
        save() {
          this._package.update(this.path, (0, a.serializeXmlString)(this._xmlDocument));
        }
        parseXml(m) {
        }
      };
    }, 461: (v, e) => {
      var r;
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseRelationships = e.RelationshipTypes = void 0, (r = e.RelationshipTypes || (e.RelationshipTypes = {})).OfficeDocument = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument", r.FontTable = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable", r.Image = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image", r.Numbering = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering", r.Styles = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles", r.StylesWithEffects = "http://schemas.microsoft.com/office/2007/relationships/stylesWithEffects", r.Theme = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme", r.Settings = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings", r.WebSettings = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings", r.Hyperlink = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink", r.Footnotes = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes", r.Endnotes = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes", r.Footer = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer", r.Header = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/header", r.ExtendedProperties = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties", r.CoreProperties = "http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties", r.CustomProperties = "http://schemas.openxmlformats.org/package/2006/relationships/metadata/custom-properties", e.parseRelationships = function(a, m) {
        return m.elements(a).map((p) => ({ id: m.attr(p, "Id"), type: m.attr(p, "Type"), target: m.attr(p, "Target"), targetMode: m.attr(p, "TargetMode") }));
      };
    }, 168: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.DocumentParser = e.autos = void 0;
      const a = r(120), m = r(109), p = r(59), n = r(472), i = r(488), b = r(172), h = r(149), d = r(320);
      e.autos = { shd: "inherit", color: "black", borderColor: "black", highlight: "transparent" };
      const f = [], g = { oMath: a.DomType.MmlMath, oMathPara: a.DomType.MmlMathParagraph, f: a.DomType.MmlFraction, num: a.DomType.MmlNumerator, den: a.DomType.MmlDenominator, rad: a.DomType.MmlRadical, deg: a.DomType.MmlDegree, e: a.DomType.MmlBase, sSup: a.DomType.MmlSuperscript, sSub: a.DomType.MmlSubscript, sup: a.DomType.MmlSuperArgument, sub: a.DomType.MmlSubArgument, d: a.DomType.MmlDelimiter, nary: a.DomType.MmlNary };
      e.DocumentParser = class {
        constructor(o) {
          this.options = Object.assign({ ignoreWidth: !1, debug: !1 }, o);
        }
        parseNotes(o, t, l) {
          var y = [];
          for (let k of n.default.elements(o, t)) {
            const D = new l();
            D.id = n.default.attr(k, "id"), D.noteType = n.default.attr(k, "type"), D.children = this.parseBodyElements(k), y.push(D);
          }
          return y;
        }
        parseDocumentFile(o) {
          var t = n.default.element(o, "body"), l = n.default.element(o, "background"), y = n.default.element(t, "sectPr");
          return { type: a.DomType.Document, children: this.parseBodyElements(t), props: y ? (0, p.parseSectionProperties)(y, n.default) : {}, cssStyle: l ? this.parseBackground(l) : {} };
        }
        parseBackground(o) {
          var t = {}, l = T.colorAttr(o, "color");
          return l && (t["background-color"] = l), t;
        }
        parseBodyElements(o) {
          var t = [];
          for (let l of n.default.elements(o))
            switch (l.localName) {
              case "p":
                t.push(this.parseParagraph(l));
                break;
              case "tbl":
                t.push(this.parseTable(l));
                break;
              case "sdt":
                t.push(...this.parseSdt(l, (y) => this.parseBodyElements(y)));
            }
          return t;
        }
        parseStylesFile(o) {
          var t = [];
          return T.foreach(o, (l) => {
            switch (l.localName) {
              case "style":
                t.push(this.parseStyle(l));
                break;
              case "docDefaults":
                t.push(this.parseDefaultStyles(l));
            }
          }), t;
        }
        parseDefaultStyles(o) {
          var t = { id: null, name: null, target: null, basedOn: null, styles: [] };
          return T.foreach(o, (l) => {
            switch (l.localName) {
              case "rPrDefault":
                var y = n.default.element(l, "rPr");
                y && t.styles.push({ target: "span", values: this.parseDefaultProperties(y, {}) });
                break;
              case "pPrDefault":
                var k = n.default.element(l, "pPr");
                k && t.styles.push({ target: "p", values: this.parseDefaultProperties(k, {}) });
            }
          }), t;
        }
        parseStyle(o) {
          var t = { id: n.default.attr(o, "styleId"), isDefault: n.default.boolAttr(o, "default"), name: null, target: null, basedOn: null, styles: [], linked: null };
          switch (n.default.attr(o, "type")) {
            case "paragraph":
              t.target = "p";
              break;
            case "table":
              t.target = "table";
              break;
            case "character":
              t.target = "span";
          }
          return T.foreach(o, (l) => {
            switch (l.localName) {
              case "basedOn":
                t.basedOn = n.default.attr(l, "val");
                break;
              case "name":
                t.name = n.default.attr(l, "val");
                break;
              case "link":
                t.linked = n.default.attr(l, "val");
                break;
              case "next":
                t.next = n.default.attr(l, "val");
                break;
              case "aliases":
                t.aliases = n.default.attr(l, "val").split(",");
                break;
              case "pPr":
                t.styles.push({ target: "p", values: this.parseDefaultProperties(l, {}) }), t.paragraphProps = (0, m.parseParagraphProperties)(l, n.default);
                break;
              case "rPr":
                t.styles.push({ target: "span", values: this.parseDefaultProperties(l, {}) }), t.runProps = (0, i.parseRunProperties)(l, n.default);
                break;
              case "tblPr":
              case "tcPr":
                t.styles.push({ target: "td", values: this.parseDefaultProperties(l, {}) });
                break;
              case "tblStylePr":
                for (let y of this.parseTableStyle(l))
                  t.styles.push(y);
                break;
              case "rsid":
              case "qFormat":
              case "hidden":
              case "semiHidden":
              case "unhideWhenUsed":
              case "autoRedefine":
              case "uiPriority":
                break;
              default:
                this.options.debug && console.warn(`DOCX: Unknown style element: ${l.localName}`);
            }
          }), t;
        }
        parseTableStyle(o) {
          var t = [], l = n.default.attr(o, "type"), y = "", k = "";
          switch (l) {
            case "firstRow":
              k = ".first-row", y = "tr.first-row td";
              break;
            case "lastRow":
              k = ".last-row", y = "tr.last-row td";
              break;
            case "firstCol":
              k = ".first-col", y = "td.first-col";
              break;
            case "lastCol":
              k = ".last-col", y = "td.last-col";
              break;
            case "band1Vert":
              k = ":not(.no-vband)", y = "td.odd-col";
              break;
            case "band2Vert":
              k = ":not(.no-vband)", y = "td.even-col";
              break;
            case "band1Horz":
              k = ":not(.no-hband)", y = "tr.odd-row";
              break;
            case "band2Horz":
              k = ":not(.no-hband)", y = "tr.even-row";
              break;
            default:
              return [];
          }
          return T.foreach(o, (D) => {
            switch (D.localName) {
              case "pPr":
                t.push({ target: `${y} p`, mod: k, values: this.parseDefaultProperties(D, {}) });
                break;
              case "rPr":
                t.push({ target: `${y} span`, mod: k, values: this.parseDefaultProperties(D, {}) });
                break;
              case "tblPr":
              case "tcPr":
                t.push({ target: y, mod: k, values: this.parseDefaultProperties(D, {}) });
            }
          }), t;
        }
        parseNumberingFile(o) {
          var t = [], l = {}, y = [];
          return T.foreach(o, (k) => {
            switch (k.localName) {
              case "abstractNum":
                this.parseAbstractNumbering(k, y).forEach((P) => t.push(P));
                break;
              case "numPicBullet":
                y.push(this.parseNumberingPicBullet(k));
                break;
              case "num":
                var D = n.default.attr(k, "numId"), _ = n.default.elementAttr(k, "abstractNumId", "val");
                l[_] = D;
            }
          }), t.forEach((k) => k.id = l[k.id]), t;
        }
        parseNumberingPicBullet(o) {
          var t = n.default.element(o, "pict"), l = t && n.default.element(t, "shape"), y = l && n.default.element(l, "imagedata");
          return y ? { id: n.default.intAttr(o, "numPicBulletId"), src: n.default.attr(y, "id"), style: n.default.attr(l, "style") } : null;
        }
        parseAbstractNumbering(o, t) {
          var l = [], y = n.default.attr(o, "abstractNumId");
          return T.foreach(o, (k) => {
            k.localName === "lvl" && l.push(this.parseNumberingLevel(y, k, t));
          }), l;
        }
        parseNumberingLevel(o, t, l) {
          var y = { id: o, level: n.default.intAttr(t, "ilvl"), pStyleName: void 0, pStyle: {}, rStyle: {}, suff: "tab" };
          return T.foreach(t, (k) => {
            switch (k.localName) {
              case "pPr":
                this.parseDefaultProperties(k, y.pStyle);
                break;
              case "rPr":
                this.parseDefaultProperties(k, y.rStyle);
                break;
              case "lvlPicBulletId":
                var D = n.default.intAttr(k, "val");
                y.bullet = l.find((_) => _.id == D);
                break;
              case "lvlText":
                y.levelText = n.default.attr(k, "val");
                break;
              case "pStyle":
                y.pStyleName = n.default.attr(k, "val");
                break;
              case "numFmt":
                y.format = n.default.attr(k, "val");
                break;
              case "suff":
                y.suff = n.default.attr(k, "val");
            }
          }), y;
        }
        parseSdt(o, t) {
          const l = n.default.element(o, "sdtContent");
          return l ? t(l) : [];
        }
        parseInserted(o, t) {
          var l, y;
          return { type: a.DomType.Inserted, children: (y = (l = t(o)) === null || l === void 0 ? void 0 : l.children) !== null && y !== void 0 ? y : [] };
        }
        parseDeleted(o, t) {
          var l, y;
          return { type: a.DomType.Deleted, children: (y = (l = t(o)) === null || l === void 0 ? void 0 : l.children) !== null && y !== void 0 ? y : [] };
        }
        parseParagraph(o) {
          var t = { type: a.DomType.Paragraph, children: [] };
          for (let l of n.default.elements(o))
            switch (l.localName) {
              case "pPr":
                this.parseParagraphProperties(l, t);
                break;
              case "r":
                t.children.push(this.parseRun(l, t));
                break;
              case "hyperlink":
                t.children.push(this.parseHyperlink(l, t));
                break;
              case "bookmarkStart":
                t.children.push((0, b.parseBookmarkStart)(l, n.default));
                break;
              case "bookmarkEnd":
                t.children.push((0, b.parseBookmarkEnd)(l, n.default));
                break;
              case "oMath":
              case "oMathPara":
                t.children.push(this.parseMathElement(l));
                break;
              case "sdt":
                t.children.push(...this.parseSdt(l, (y) => this.parseParagraph(y).children));
                break;
              case "ins":
                t.children.push(this.parseInserted(l, (y) => this.parseParagraph(y)));
                break;
              case "del":
                t.children.push(this.parseDeleted(l, (y) => this.parseParagraph(y)));
            }
          return t;
        }
        parseParagraphProperties(o, t) {
          this.parseDefaultProperties(o, t.cssStyle = {}, null, (l) => {
            if ((0, m.parseParagraphProperty)(l, t, n.default))
              return !0;
            switch (l.localName) {
              case "pStyle":
                t.styleName = n.default.attr(l, "val");
                break;
              case "cnfStyle":
                t.className = s.classNameOfCnfStyle(l);
                break;
              case "framePr":
                this.parseFrame(l, t);
                break;
              case "rPr":
                break;
              default:
                return !1;
            }
            return !0;
          });
        }
        parseFrame(o, t) {
          n.default.attr(o, "dropCap") == "drop" && (t.cssStyle.float = "left");
        }
        parseHyperlink(o, t) {
          var l = { type: a.DomType.Hyperlink, parent: t, children: [] }, y = n.default.attr(o, "anchor"), k = n.default.attr(o, "id");
          return y && (l.href = "#" + y), k && (l.id = k), T.foreach(o, (D) => {
            D.localName === "r" && l.children.push(this.parseRun(D, l));
          }), l;
        }
        parseRun(o, t) {
          var l = { type: a.DomType.Run, parent: t, children: [] };
          return T.foreach(o, (y) => {
            switch ((y = this.checkAlternateContent(y)).localName) {
              case "t":
                l.children.push({ type: a.DomType.Text, text: y.textContent });
                break;
              case "delText":
                l.children.push({ type: a.DomType.DeletedText, text: y.textContent });
                break;
              case "fldSimple":
                l.children.push({ type: a.DomType.SimpleField, instruction: n.default.attr(y, "instr"), lock: n.default.boolAttr(y, "lock", !1), dirty: n.default.boolAttr(y, "dirty", !1) });
                break;
              case "instrText":
                l.fieldRun = !0, l.children.push({ type: a.DomType.Instruction, text: y.textContent });
                break;
              case "fldChar":
                l.fieldRun = !0, l.children.push({ type: a.DomType.ComplexField, charType: n.default.attr(y, "fldCharType"), lock: n.default.boolAttr(y, "lock", !1), dirty: n.default.boolAttr(y, "dirty", !1) });
                break;
              case "noBreakHyphen":
                l.children.push({ type: a.DomType.NoBreakHyphen });
                break;
              case "br":
                l.children.push({ type: a.DomType.Break, break: n.default.attr(y, "type") || "textWrapping" });
                break;
              case "lastRenderedPageBreak":
                l.children.push({ type: a.DomType.Break, break: "lastRenderedPageBreak" });
                break;
              case "sym":
                l.children.push({ type: a.DomType.Symbol, font: n.default.attr(y, "font"), char: n.default.attr(y, "char") });
                break;
              case "tab":
                l.children.push({ type: a.DomType.Tab });
                break;
              case "footnoteReference":
                l.children.push({ type: a.DomType.FootnoteReference, id: n.default.attr(y, "id") });
                break;
              case "endnoteReference":
                l.children.push({ type: a.DomType.EndnoteReference, id: n.default.attr(y, "id") });
                break;
              case "drawing":
                let k = this.parseDrawing(y);
                k && (l.children = [k]);
                break;
              case "pict":
                l.children.push(this.parseVmlPicture(y));
                break;
              case "rPr":
                this.parseRunProperties(y, l);
            }
          }), l;
        }
        parseMathElement(o) {
          const t = `${o.localName}Pr`, l = { type: g[o.localName], children: [] };
          for (const k of n.default.elements(o))
            if (g[k.localName])
              l.children.push(this.parseMathElement(k));
            else if (k.localName == "r") {
              var y = this.parseRun(k);
              y.type = a.DomType.MmlRun, l.children.push(y);
            } else
              k.localName == t && (l.props = this.parseMathProperies(k));
          return l;
        }
        parseMathProperies(o) {
          const t = {};
          for (const l of n.default.elements(o))
            switch (l.localName) {
              case "chr":
                t.char = n.default.attr(l, "val");
                break;
              case "degHide":
                t.hideDegree = n.default.boolAttr(l, "val");
                break;
              case "begChr":
                t.beginChar = n.default.attr(l, "val");
                break;
              case "endChr":
                t.endChar = n.default.attr(l, "val");
            }
          return t;
        }
        parseRunProperties(o, t) {
          this.parseDefaultProperties(o, t.cssStyle = {}, null, (l) => {
            switch (l.localName) {
              case "rStyle":
                t.styleName = n.default.attr(l, "val");
                break;
              case "vertAlign":
                t.verticalAlign = s.valueOfVertAlign(l, !0);
                break;
              default:
                return !1;
            }
            return !0;
          });
        }
        parseVmlPicture(o) {
          const t = { type: a.DomType.VmlPicture, children: [] };
          for (const l of n.default.elements(o)) {
            const y = (0, d.parseVmlElement)(l);
            y && t.children.push(y);
          }
          return t;
        }
        checkAlternateContent(o) {
          var t;
          if (o.localName != "AlternateContent")
            return o;
          var l = n.default.element(o, "Choice");
          if (l) {
            var y = n.default.attr(l, "Requires"), k = o.lookupNamespaceURI(y);
            if (f.includes(k))
              return l.firstElementChild;
          }
          return (t = n.default.element(o, "Fallback")) === null || t === void 0 ? void 0 : t.firstElementChild;
        }
        parseDrawing(o) {
          for (var t of n.default.elements(o))
            switch (t.localName) {
              case "inline":
              case "anchor":
                return this.parseDrawingWrapper(t);
            }
        }
        parseDrawingWrapper(o) {
          var t, l = { type: a.DomType.Drawing, children: [], cssStyle: {} }, y = o.localName == "anchor";
          let k = null, D = n.default.boolAttr(o, "simplePos"), _ = { relative: "page", align: "left", offset: "0" }, P = { relative: "page", align: "top", offset: "0" };
          for (var u of n.default.elements(o))
            switch (u.localName) {
              case "simplePos":
                D && (_.offset = n.default.lengthAttr(u, "x", h.LengthUsage.Emu), P.offset = n.default.lengthAttr(u, "y", h.LengthUsage.Emu));
                break;
              case "extent":
                l.cssStyle.width = n.default.lengthAttr(u, "cx", h.LengthUsage.Emu), l.cssStyle.height = n.default.lengthAttr(u, "cy", h.LengthUsage.Emu);
                break;
              case "positionH":
              case "positionV":
                if (!D) {
                  let q = u.localName == "positionH" ? _ : P;
                  var R = n.default.element(u, "align"), G = n.default.element(u, "posOffset");
                  q.relative = (t = n.default.attr(u, "relativeFrom")) !== null && t !== void 0 ? t : q.relative, R && (q.align = R.textContent), G && (q.offset = T.sizeValue(G, h.LengthUsage.Emu));
                }
                break;
              case "wrapTopAndBottom":
                k = "wrapTopAndBottom";
                break;
              case "wrapNone":
                k = "wrapNone";
                break;
              case "graphic":
                var L = this.parseGraphic(u);
                L && l.children.push(L);
            }
          return k == "wrapTopAndBottom" ? (l.cssStyle.display = "block", _.align && (l.cssStyle["text-align"] = _.align, l.cssStyle.width = "100%")) : k == "wrapNone" ? (l.cssStyle.display = "block", l.cssStyle.position = "relative", l.cssStyle.width = "0px", l.cssStyle.height = "0px", _.offset && (l.cssStyle.left = _.offset), P.offset && (l.cssStyle.top = P.offset)) : !y || _.align != "left" && _.align != "right" || (l.cssStyle.float = _.align), l;
        }
        parseGraphic(o) {
          var t = n.default.element(o, "graphicData");
          for (let l of n.default.elements(t))
            if (l.localName === "pic")
              return this.parsePicture(l);
          return null;
        }
        parsePicture(o) {
          var t = { type: a.DomType.Image, src: "", cssStyle: {} }, l = n.default.element(o, "blipFill"), y = n.default.element(l, "blip");
          t.src = n.default.attr(y, "embed");
          var k = n.default.element(o, "spPr"), D = n.default.element(k, "xfrm");
          for (var _ of (t.cssStyle.position = "relative", n.default.elements(D)))
            switch (_.localName) {
              case "ext":
                t.cssStyle.width = n.default.lengthAttr(_, "cx", h.LengthUsage.Emu), t.cssStyle.height = n.default.lengthAttr(_, "cy", h.LengthUsage.Emu);
                break;
              case "off":
                t.cssStyle.left = n.default.lengthAttr(_, "x", h.LengthUsage.Emu), t.cssStyle.top = n.default.lengthAttr(_, "y", h.LengthUsage.Emu);
            }
          return t;
        }
        parseTable(o) {
          var t = { type: a.DomType.Table, children: [] };
          return T.foreach(o, (l) => {
            switch (l.localName) {
              case "tr":
                t.children.push(this.parseTableRow(l));
                break;
              case "tblGrid":
                t.columns = this.parseTableColumns(l);
                break;
              case "tblPr":
                this.parseTableProperties(l, t);
            }
          }), t;
        }
        parseTableColumns(o) {
          var t = [];
          return T.foreach(o, (l) => {
            l.localName === "gridCol" && t.push({ width: n.default.lengthAttr(l, "w") });
          }), t;
        }
        parseTableProperties(o, t) {
          switch (t.cssStyle = {}, t.cellStyle = {}, this.parseDefaultProperties(o, t.cssStyle, t.cellStyle, (l) => {
            switch (l.localName) {
              case "tblStyle":
                t.styleName = n.default.attr(l, "val");
                break;
              case "tblLook":
                t.className = s.classNameOftblLook(l);
                break;
              case "tblpPr":
                this.parseTablePosition(l, t);
                break;
              case "tblStyleColBandSize":
                t.colBandSize = n.default.intAttr(l, "val");
                break;
              case "tblStyleRowBandSize":
                t.rowBandSize = n.default.intAttr(l, "val");
                break;
              default:
                return !1;
            }
            return !0;
          }), t.cssStyle["text-align"]) {
            case "center":
              delete t.cssStyle["text-align"], t.cssStyle["margin-left"] = "auto", t.cssStyle["margin-right"] = "auto";
              break;
            case "right":
              delete t.cssStyle["text-align"], t.cssStyle["margin-left"] = "auto";
          }
        }
        parseTablePosition(o, t) {
          var l = n.default.lengthAttr(o, "topFromText"), y = n.default.lengthAttr(o, "bottomFromText"), k = n.default.lengthAttr(o, "rightFromText"), D = n.default.lengthAttr(o, "leftFromText");
          t.cssStyle.float = "left", t.cssStyle["margin-bottom"] = s.addSize(t.cssStyle["margin-bottom"], y), t.cssStyle["margin-left"] = s.addSize(t.cssStyle["margin-left"], D), t.cssStyle["margin-right"] = s.addSize(t.cssStyle["margin-right"], k), t.cssStyle["margin-top"] = s.addSize(t.cssStyle["margin-top"], l);
        }
        parseTableRow(o) {
          var t = { type: a.DomType.Row, children: [] };
          return T.foreach(o, (l) => {
            switch (l.localName) {
              case "tc":
                t.children.push(this.parseTableCell(l));
                break;
              case "trPr":
                this.parseTableRowProperties(l, t);
            }
          }), t;
        }
        parseTableRowProperties(o, t) {
          t.cssStyle = this.parseDefaultProperties(o, {}, null, (l) => {
            switch (l.localName) {
              case "cnfStyle":
                t.className = s.classNameOfCnfStyle(l);
                break;
              case "tblHeader":
                t.isHeader = n.default.boolAttr(l, "val");
                break;
              default:
                return !1;
            }
            return !0;
          });
        }
        parseTableCell(o) {
          var t = { type: a.DomType.Cell, children: [] };
          return T.foreach(o, (l) => {
            switch (l.localName) {
              case "tbl":
                t.children.push(this.parseTable(l));
                break;
              case "p":
                t.children.push(this.parseParagraph(l));
                break;
              case "tcPr":
                this.parseTableCellProperties(l, t);
            }
          }), t;
        }
        parseTableCellProperties(o, t) {
          t.cssStyle = this.parseDefaultProperties(o, {}, null, (l) => {
            var y;
            switch (l.localName) {
              case "gridSpan":
                t.span = n.default.intAttr(l, "val", null);
                break;
              case "vMerge":
                t.verticalMerge = (y = n.default.attr(l, "val")) !== null && y !== void 0 ? y : "continue";
                break;
              case "cnfStyle":
                t.className = s.classNameOfCnfStyle(l);
                break;
              default:
                return !1;
            }
            return !0;
          });
        }
        parseDefaultProperties(o, t = null, l = null, y = null) {
          return t = t || {}, T.foreach(o, (k) => {
            if (!(y != null && y(k)))
              switch (k.localName) {
                case "jc":
                  t["text-align"] = s.valueOfJc(k);
                  break;
                case "textAlignment":
                  t["vertical-align"] = s.valueOfTextAlignment(k);
                  break;
                case "color":
                  t.color = T.colorAttr(k, "val", null, e.autos.color);
                  break;
                case "sz":
                  t["font-size"] = t["min-height"] = n.default.lengthAttr(k, "val", h.LengthUsage.FontSize);
                  break;
                case "shd":
                  t["background-color"] = T.colorAttr(k, "fill", null, e.autos.shd);
                  break;
                case "highlight":
                  t["background-color"] = T.colorAttr(k, "val", null, e.autos.highlight);
                  break;
                case "vertAlign":
                  break;
                case "position":
                  t.verticalAlign = n.default.lengthAttr(k, "val", h.LengthUsage.FontSize);
                  break;
                case "tcW":
                  if (this.options.ignoreWidth)
                    break;
                case "tblW":
                  t.width = s.valueOfSize(k, "w");
                  break;
                case "trHeight":
                  this.parseTrHeight(k, t);
                  break;
                case "strike":
                  t["text-decoration"] = n.default.boolAttr(k, "val", !0) ? "line-through" : "none";
                  break;
                case "b":
                  t["font-weight"] = n.default.boolAttr(k, "val", !0) ? "bold" : "normal";
                  break;
                case "i":
                  t["font-style"] = n.default.boolAttr(k, "val", !0) ? "italic" : "normal";
                  break;
                case "caps":
                  t["text-transform"] = n.default.boolAttr(k, "val", !0) ? "uppercase" : "none";
                  break;
                case "smallCaps":
                  t["text-transform"] = n.default.boolAttr(k, "val", !0) ? "lowercase" : "none";
                  break;
                case "u":
                  this.parseUnderline(k, t);
                  break;
                case "ind":
                case "tblInd":
                  this.parseIndentation(k, t);
                  break;
                case "rFonts":
                  this.parseFont(k, t);
                  break;
                case "tblBorders":
                  this.parseBorderProperties(k, l || t);
                  break;
                case "tblCellSpacing":
                  t["border-spacing"] = s.valueOfMargin(k), t["border-collapse"] = "separate";
                  break;
                case "pBdr":
                  this.parseBorderProperties(k, t);
                  break;
                case "bdr":
                  t.border = s.valueOfBorder(k);
                  break;
                case "tcBorders":
                  this.parseBorderProperties(k, t);
                  break;
                case "vanish":
                  n.default.boolAttr(k, "val", !0) && (t.display = "none");
                  break;
                case "kern":
                case "noWrap":
                  break;
                case "tblCellMar":
                case "tcMar":
                  this.parseMarginProperties(k, l || t);
                  break;
                case "tblLayout":
                  t["table-layout"] = s.valueOfTblLayout(k);
                  break;
                case "vAlign":
                  t["vertical-align"] = s.valueOfTextAlignment(k);
                  break;
                case "spacing":
                  o.localName == "pPr" && this.parseSpacing(k, t);
                  break;
                case "wordWrap":
                  n.default.boolAttr(k, "val") && (t["overflow-wrap"] = "break-word");
                  break;
                case "bCs":
                case "iCs":
                case "szCs":
                case "tabs":
                case "outlineLvl":
                case "contextualSpacing":
                case "tblStyleColBandSize":
                case "tblStyleRowBandSize":
                case "webHidden":
                case "pageBreakBefore":
                case "suppressLineNumbers":
                case "keepLines":
                case "keepNext":
                case "lang":
                case "widowControl":
                case "bidi":
                case "rtl":
                case "noProof":
                  break;
                default:
                  this.options.debug && console.warn(`DOCX: Unknown document element: ${o.localName}.${k.localName}`);
              }
          }), t;
        }
        parseUnderline(o, t) {
          var l = n.default.attr(o, "val");
          if (l != null) {
            switch (l) {
              case "dash":
              case "dashDotDotHeavy":
              case "dashDotHeavy":
              case "dashedHeavy":
              case "dashLong":
              case "dashLongHeavy":
              case "dotDash":
              case "dotDotDash":
                t["text-decoration-style"] = "dashed";
                break;
              case "dotted":
              case "dottedHeavy":
                t["text-decoration-style"] = "dotted";
                break;
              case "double":
                t["text-decoration-style"] = "double";
                break;
              case "single":
              case "thick":
              case "words":
                t["text-decoration"] = "underline";
                break;
              case "wave":
              case "wavyDouble":
              case "wavyHeavy":
                t["text-decoration-style"] = "wavy";
                break;
              case "none":
                t["text-decoration"] = "none";
            }
            var y = T.colorAttr(o, "color");
            y && (t["text-decoration-color"] = y);
          }
        }
        parseFont(o, t) {
          var l = [n.default.attr(o, "ascii"), s.themeValue(o, "asciiTheme")].filter((y) => y).join(", ");
          l.length > 0 && (t["font-family"] = l);
        }
        parseIndentation(o, t) {
          var l = n.default.lengthAttr(o, "firstLine"), y = n.default.lengthAttr(o, "hanging"), k = n.default.lengthAttr(o, "left"), D = n.default.lengthAttr(o, "start"), _ = n.default.lengthAttr(o, "right"), P = n.default.lengthAttr(o, "end");
          l && (t["text-indent"] = l), y && (t["text-indent"] = `-${y}`), (k || D) && (t["margin-left"] = k || D), (_ || P) && (t["margin-right"] = _ || P);
        }
        parseSpacing(o, t) {
          var l = n.default.lengthAttr(o, "before"), y = n.default.lengthAttr(o, "after"), k = n.default.intAttr(o, "line", null), D = n.default.attr(o, "lineRule");
          if (l && (t["margin-top"] = l), y && (t["margin-bottom"] = y), k !== null)
            switch (D) {
              case "auto":
                t["line-height"] = `${(k / 240).toFixed(2)}`;
                break;
              case "atLeast":
                t["line-height"] = `calc(100% + ${k / 20}pt)`;
                break;
              default:
                t["line-height"] = t["min-height"] = k / 20 + "pt";
            }
        }
        parseMarginProperties(o, t) {
          T.foreach(o, (l) => {
            switch (l.localName) {
              case "left":
                t["padding-left"] = s.valueOfMargin(l);
                break;
              case "right":
                t["padding-right"] = s.valueOfMargin(l);
                break;
              case "top":
                t["padding-top"] = s.valueOfMargin(l);
                break;
              case "bottom":
                t["padding-bottom"] = s.valueOfMargin(l);
            }
          });
        }
        parseTrHeight(o, t) {
          n.default.attr(o, "hRule"), t.height = n.default.lengthAttr(o, "val");
        }
        parseBorderProperties(o, t) {
          T.foreach(o, (l) => {
            switch (l.localName) {
              case "start":
              case "left":
                t["border-left"] = s.valueOfBorder(l);
                break;
              case "end":
              case "right":
                t["border-right"] = s.valueOfBorder(l);
                break;
              case "top":
                t["border-top"] = s.valueOfBorder(l);
                break;
              case "bottom":
                t["border-bottom"] = s.valueOfBorder(l);
            }
          });
        }
      };
      const S = ["black", "blue", "cyan", "darkBlue", "darkCyan", "darkGray", "darkGreen", "darkMagenta", "darkRed", "darkYellow", "green", "lightGray", "magenta", "none", "red", "white", "yellow"];
      class T {
        static foreach(t, l) {
          for (var y = 0; y < t.childNodes.length; y++) {
            let k = t.childNodes[y];
            k.nodeType == Node.ELEMENT_NODE && l(k);
          }
        }
        static colorAttr(t, l, y = null, k = "black") {
          var D = n.default.attr(t, l);
          if (D)
            return D == "auto" ? k : S.includes(D) ? D : `#${D}`;
          var _ = n.default.attr(t, "themeColor");
          return _ ? `var(--docx-${_}-color)` : y;
        }
        static sizeValue(t, l = h.LengthUsage.Dxa) {
          return (0, h.convertLength)(t.textContent, l);
        }
      }
      class s {
        static themeValue(t, l) {
          var y = n.default.attr(t, l);
          return y ? `var(--docx-${y}-font)` : null;
        }
        static valueOfSize(t, l) {
          var y = h.LengthUsage.Dxa;
          switch (n.default.attr(t, "type")) {
            case "dxa":
              break;
            case "pct":
              y = h.LengthUsage.Percent;
              break;
            case "auto":
              return "auto";
          }
          return n.default.lengthAttr(t, l, y);
        }
        static valueOfMargin(t) {
          return n.default.lengthAttr(t, "w");
        }
        static valueOfBorder(t) {
          if (n.default.attr(t, "val") == "nil")
            return "none";
          var l = T.colorAttr(t, "color");
          return `${n.default.lengthAttr(t, "sz", h.LengthUsage.Border)} solid ${l == "auto" ? e.autos.borderColor : l}`;
        }
        static valueOfTblLayout(t) {
          return n.default.attr(t, "val") == "fixed" ? "fixed" : "auto";
        }
        static classNameOfCnfStyle(t) {
          const l = n.default.attr(t, "val");
          return ["first-row", "last-row", "first-col", "last-col", "odd-col", "even-col", "odd-row", "even-row", "ne-cell", "nw-cell", "se-cell", "sw-cell"].filter((y, k) => l[k] == "1").join(" ");
        }
        static valueOfJc(t) {
          var l = n.default.attr(t, "val");
          switch (l) {
            case "start":
            case "left":
              return "left";
            case "center":
              return "center";
            case "end":
            case "right":
              return "right";
            case "both":
              return "justify";
          }
          return l;
        }
        static valueOfVertAlign(t, l = !1) {
          var y = n.default.attr(t, "val");
          switch (y) {
            case "subscript":
              return "sub";
            case "superscript":
              return l ? "sup" : "super";
          }
          return l ? null : y;
        }
        static valueOfTextAlignment(t) {
          var l = n.default.attr(t, "val");
          switch (l) {
            case "auto":
            case "baseline":
              return "baseline";
            case "top":
              return "top";
            case "center":
              return "middle";
            case "bottom":
              return "bottom";
          }
          return l;
        }
        static addSize(t, l) {
          return t == null ? l : l == null ? t : `calc(${t} + ${l})`;
        }
        static classNameOftblLook(t) {
          const l = n.default.hexAttr(t, "val", 0);
          let y = "";
          return (n.default.boolAttr(t, "firstRow") || 32 & l) && (y += " first-row"), (n.default.boolAttr(t, "lastRow") || 64 & l) && (y += " last-row"), (n.default.boolAttr(t, "firstColumn") || 128 & l) && (y += " first-col"), (n.default.boolAttr(t, "lastColumn") || 256 & l) && (y += " last-col"), (n.default.boolAttr(t, "noHBand") || 512 & l) && (y += " no-hband"), (n.default.boolAttr(t, "noVBand") || 1024 & l) && (y += " no-vband"), y.trim();
        }
      }
    }, 162: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.CorePropsPart = void 0;
      const a = r(530), m = r(614);
      class p extends a.Part {
        parseXml(i) {
          this.props = (0, m.parseCoreProps)(i, this._package.xmlParser);
        }
      }
      e.CorePropsPart = p;
    }, 614: (v, e) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseCoreProps = void 0, e.parseCoreProps = function(r, a) {
        const m = {};
        for (let p of a.elements(r))
          switch (p.localName) {
            case "title":
              m.title = p.textContent;
              break;
            case "description":
              m.description = p.textContent;
              break;
            case "subject":
              m.subject = p.textContent;
              break;
            case "creator":
              m.creator = p.textContent;
              break;
            case "keywords":
              m.keywords = p.textContent;
              break;
            case "language":
              m.language = p.textContent;
              break;
            case "lastModifiedBy":
              m.lastModifiedBy = p.textContent;
              break;
            case "revision":
              p.textContent && (m.revision = parseInt(p.textContent));
          }
        return m;
      };
    }, 177: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.CustomPropsPart = void 0;
      const a = r(530), m = r(821);
      class p extends a.Part {
        parseXml(i) {
          this.props = (0, m.parseCustomProps)(i, this._package.xmlParser);
        }
      }
      e.CustomPropsPart = p;
    }, 821: (v, e) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseCustomProps = void 0, e.parseCustomProps = function(r, a) {
        return a.elements(r, "property").map((m) => {
          const p = m.firstChild;
          return { formatId: a.attr(m, "fmtid"), name: a.attr(m, "name"), type: p.nodeName, value: p.textContent };
        });
      };
    }, 665: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.ExtendedPropsPart = void 0;
      const a = r(530), m = r(668);
      class p extends a.Part {
        parseXml(i) {
          this.props = (0, m.parseExtendedProps)(i, this._package.xmlParser);
        }
      }
      e.ExtendedPropsPart = p;
    }, 668: (v, e) => {
      function r(a) {
        if (a !== void 0)
          return parseInt(a);
      }
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseExtendedProps = void 0, e.parseExtendedProps = function(a, m) {
        const p = {};
        for (let n of m.elements(a))
          switch (n.localName) {
            case "Template":
              p.template = n.textContent;
              break;
            case "Pages":
              p.pages = r(n.textContent);
              break;
            case "Words":
              p.words = r(n.textContent);
              break;
            case "Characters":
              p.characters = r(n.textContent);
              break;
            case "Application":
              p.application = n.textContent;
              break;
            case "Lines":
              p.lines = r(n.textContent);
              break;
            case "Paragraphs":
              p.paragraphs = r(n.textContent);
              break;
            case "Company":
              p.company = n.textContent;
              break;
            case "AppVersion":
              p.appVersion = n.textContent;
          }
        return p;
      };
    }, 172: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseBookmarkEnd = e.parseBookmarkStart = void 0;
      const a = r(120);
      e.parseBookmarkStart = function(m, p) {
        return { type: a.DomType.BookmarkStart, id: p.attr(m, "id"), name: p.attr(m, "name"), colFirst: p.intAttr(m, "colFirst"), colLast: p.intAttr(m, "colLast") };
      }, e.parseBookmarkEnd = function(m, p) {
        return { type: a.DomType.BookmarkEnd, id: p.attr(m, "id") };
      };
    }, 191: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseBorders = e.parseBorder = void 0;
      const a = r(149);
      function m(p, n) {
        return { type: n.attr(p, "val"), color: n.attr(p, "color"), size: n.lengthAttr(p, "sz", a.LengthUsage.Border), offset: n.lengthAttr(p, "space", a.LengthUsage.Point), frame: n.boolAttr(p, "frame"), shadow: n.boolAttr(p, "shadow") };
      }
      e.parseBorder = m, e.parseBorders = function(p, n) {
        var i = {};
        for (let b of n.elements(p))
          switch (b.localName) {
            case "left":
              i.left = m(b, n);
              break;
            case "top":
              i.top = m(b, n);
              break;
            case "right":
              i.right = m(b, n);
              break;
            case "bottom":
              i.bottom = m(b, n);
          }
        return i;
      };
    }, 149: (v, e) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseCommonProperty = e.convertPercentage = e.convertBoolean = e.convertLength = e.LengthUsage = e.ns = void 0, e.ns = { wordml: "http://schemas.openxmlformats.org/wordprocessingml/2006/main", drawingml: "http://schemas.openxmlformats.org/drawingml/2006/main", picture: "http://schemas.openxmlformats.org/drawingml/2006/picture", compatibility: "http://schemas.openxmlformats.org/markup-compatibility/2006", math: "http://schemas.openxmlformats.org/officeDocument/2006/math" }, e.LengthUsage = { Dxa: { mul: 0.05, unit: "pt" }, Emu: { mul: 7874015748031496e-20, unit: "pt" }, FontSize: { mul: 0.5, unit: "pt" }, Border: { mul: 0.125, unit: "pt" }, Point: { mul: 1, unit: "pt" }, Percent: { mul: 0.02, unit: "%" }, LineHeight: { mul: 0.004166666666666667, unit: "" }, VmlEmu: { mul: 7874015748031496e-20, unit: "" } }, e.convertLength = function(r, a = e.LengthUsage.Dxa) {
        return r == null || /.+(p[xt]|[%])$/.test(r) ? r : `${(parseInt(r) * a.mul).toFixed(2)}${a.unit}`;
      }, e.convertBoolean = function(r, a = !1) {
        switch (r) {
          case "1":
          case "on":
          case "true":
            return !0;
          case "0":
          case "off":
          case "false":
            return !1;
          default:
            return a;
        }
      }, e.convertPercentage = function(r) {
        return r ? parseInt(r) / 100 : null;
      }, e.parseCommonProperty = function(r, a, m) {
        if (r.namespaceURI != e.ns.wordml)
          return !1;
        switch (r.localName) {
          case "color":
            a.color = m.attr(r, "val");
            break;
          case "sz":
            a.fontSize = m.lengthAttr(r, "val", e.LengthUsage.FontSize);
            break;
          default:
            return !1;
        }
        return !0;
      };
    }, 448: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.DocumentPart = void 0;
      const a = r(530);
      class m extends a.Part {
        constructor(n, i, b) {
          super(n, i), this._documentParser = b;
        }
        parseXml(n) {
          this.body = this._documentParser.parseDocumentFile(n);
        }
      }
      e.DocumentPart = m;
    }, 120: (v, e) => {
      var r;
      Object.defineProperty(e, "__esModule", { value: !0 }), e.DomType = void 0, (r = e.DomType || (e.DomType = {})).Document = "document", r.Paragraph = "paragraph", r.Run = "run", r.Break = "break", r.NoBreakHyphen = "noBreakHyphen", r.Table = "table", r.Row = "row", r.Cell = "cell", r.Hyperlink = "hyperlink", r.Drawing = "drawing", r.Image = "image", r.Text = "text", r.Tab = "tab", r.Symbol = "symbol", r.BookmarkStart = "bookmarkStart", r.BookmarkEnd = "bookmarkEnd", r.Footer = "footer", r.Header = "header", r.FootnoteReference = "footnoteReference", r.EndnoteReference = "endnoteReference", r.Footnote = "footnote", r.Endnote = "endnote", r.SimpleField = "simpleField", r.ComplexField = "complexField", r.Instruction = "instruction", r.VmlPicture = "vmlPicture", r.MmlMath = "mmlMath", r.MmlMathParagraph = "mmlMathParagraph", r.MmlFraction = "mmlFraction", r.MmlNumerator = "mmlNumerator", r.MmlDenominator = "mmlDenominator", r.MmlRadical = "mmlRadical", r.MmlBase = "mmlBase", r.MmlDegree = "mmlDegree", r.MmlSuperscript = "mmlSuperscript", r.MmlSubscript = "mmlSubscript", r.MmlSubArgument = "mmlSubArgument", r.MmlSuperArgument = "mmlSuperArgument", r.MmlNary = "mmlNary", r.MmlDelimiter = "mmlDelimiter", r.MmlRun = "mmlRun", r.VmlElement = "vmlElement", r.Inserted = "inserted", r.Deleted = "deleted", r.DeletedText = "deletedText";
    }, 931: (v, e) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseLineSpacing = void 0, e.parseLineSpacing = function(r, a) {
        return { before: a.lengthAttr(r, "before"), after: a.lengthAttr(r, "after"), line: a.intAttr(r, "line"), lineRule: a.attr(r, "lineRule") };
      };
    }, 109: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseNumbering = e.parseTabs = e.parseParagraphProperty = e.parseParagraphProperties = void 0;
      const a = r(149), m = r(59), p = r(931), n = r(488);
      function i(d, f, g) {
        if (d.namespaceURI != a.ns.wordml)
          return !1;
        if ((0, a.parseCommonProperty)(d, f, g))
          return !0;
        switch (d.localName) {
          case "tabs":
            f.tabs = b(d, g);
            break;
          case "sectPr":
            f.sectionProps = (0, m.parseSectionProperties)(d, g);
            break;
          case "numPr":
            f.numbering = h(d, g);
            break;
          case "spacing":
            return f.lineSpacing = (0, p.parseLineSpacing)(d, g), !1;
          case "textAlignment":
            return f.textAlignment = g.attr(d, "val"), !1;
          case "keepNext":
            f.keepLines = g.boolAttr(d, "val", !0);
            break;
          case "keepNext":
            f.keepNext = g.boolAttr(d, "val", !0);
            break;
          case "pageBreakBefore":
            f.pageBreakBefore = g.boolAttr(d, "val", !0);
            break;
          case "outlineLvl":
            f.outlineLevel = g.intAttr(d, "val");
            break;
          case "pStyle":
            f.styleName = g.attr(d, "val");
            break;
          case "rPr":
            f.runProps = (0, n.parseRunProperties)(d, g);
            break;
          default:
            return !1;
        }
        return !0;
      }
      function b(d, f) {
        return f.elements(d, "tab").map((g) => ({ position: f.lengthAttr(g, "pos"), leader: f.attr(g, "leader"), style: f.attr(g, "val") }));
      }
      function h(d, f) {
        var g = {};
        for (let S of f.elements(d))
          switch (S.localName) {
            case "numId":
              g.id = f.attr(S, "val");
              break;
            case "ilvl":
              g.level = f.intAttr(S, "val");
          }
        return g;
      }
      e.parseParagraphProperties = function(d, f) {
        let g = {};
        for (let S of f.elements(d))
          i(S, g, f);
        return g;
      }, e.parseParagraphProperty = i, e.parseTabs = b, e.parseNumbering = h;
    }, 488: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseRunProperty = e.parseRunProperties = void 0;
      const a = r(149);
      function m(p, n, i) {
        return !!(0, a.parseCommonProperty)(p, n, i);
      }
      e.parseRunProperties = function(p, n) {
        let i = {};
        for (let b of n.elements(p))
          m(b, i, n);
        return i;
      }, e.parseRunProperty = m;
    }, 59: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseSectionProperties = e.SectionType = void 0;
      const a = r(472), m = r(191);
      function p(h, d) {
        return { numberOfColumns: d.intAttr(h, "num"), space: d.lengthAttr(h, "space"), separator: d.boolAttr(h, "sep"), equalWidth: d.boolAttr(h, "equalWidth", !0), columns: d.elements(h, "col").map((f) => ({ width: d.lengthAttr(f, "w"), space: d.lengthAttr(f, "space") })) };
      }
      function n(h, d) {
        return { chapSep: d.attr(h, "chapSep"), chapStyle: d.attr(h, "chapStyle"), format: d.attr(h, "fmt"), start: d.intAttr(h, "start") };
      }
      function i(h, d) {
        return { id: d.attr(h, "id"), type: d.attr(h, "type") };
      }
      var b;
      (b = e.SectionType || (e.SectionType = {})).Continuous = "continuous", b.NextPage = "nextPage", b.NextColumn = "nextColumn", b.EvenPage = "evenPage", b.OddPage = "oddPage", e.parseSectionProperties = function(h, d = a.default) {
        var f, g, S = {};
        for (let T of d.elements(h))
          switch (T.localName) {
            case "pgSz":
              S.pageSize = { width: d.lengthAttr(T, "w"), height: d.lengthAttr(T, "h"), orientation: d.attr(T, "orient") };
              break;
            case "type":
              S.type = d.attr(T, "val");
              break;
            case "pgMar":
              S.pageMargins = { left: d.lengthAttr(T, "left"), right: d.lengthAttr(T, "right"), top: d.lengthAttr(T, "top"), bottom: d.lengthAttr(T, "bottom"), header: d.lengthAttr(T, "header"), footer: d.lengthAttr(T, "footer"), gutter: d.lengthAttr(T, "gutter") };
              break;
            case "cols":
              S.columns = p(T, d);
              break;
            case "headerReference":
              ((f = S.headerRefs) !== null && f !== void 0 ? f : S.headerRefs = []).push(i(T, d));
              break;
            case "footerReference":
              ((g = S.footerRefs) !== null && g !== void 0 ? g : S.footerRefs = []).push(i(T, d));
              break;
            case "titlePg":
              S.titlePage = d.boolAttr(T, "val", !0);
              break;
            case "pgBorders":
              S.pageBorders = (0, m.parseBorders)(T, d);
              break;
            case "pgNumType":
              S.pageNumber = n(T, d);
          }
        return S;
      };
    }, 667: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.renderAsync = e.praseAsync = e.defaultOptions = void 0;
      const a = r(213), m = r(168), p = r(932);
      e.defaultOptions = { ignoreHeight: !1, ignoreWidth: !1, ignoreFonts: !1, breakPages: !0, debug: !1, experimental: !1, className: "docx", inWrapper: !0, trimXmlDeclaration: !0, ignoreLastRenderedPageBreak: !0, renderHeaders: !0, renderFooters: !0, renderFootnotes: !0, renderEndnotes: !0, useBase64URL: !1, useMathMLPolyfill: !1, renderChanges: !1 }, e.praseAsync = function(n, i = null) {
        const b = Object.assign(Object.assign({}, e.defaultOptions), i);
        return a.WordDocument.load(n, new m.DocumentParser(b), b);
      }, e.renderAsync = function(n, i, b = null, h = null) {
        const d = Object.assign(Object.assign({}, e.defaultOptions), h), f = new p.HtmlRenderer(window.document);
        return a.WordDocument.load(n, new m.DocumentParser(d), d).then((g) => (f.render(g, i, b, d), g));
      };
    }, 380: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.FontTablePart = void 0;
      const a = r(530), m = r(512);
      class p extends a.Part {
        parseXml(i) {
          this.fonts = (0, m.parseFonts)(i, this._package.xmlParser);
        }
      }
      e.FontTablePart = p;
    }, 512: (v, e) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseEmbedFontRef = e.parseFont = e.parseFonts = void 0;
      const r = { embedRegular: "regular", embedBold: "bold", embedItalic: "italic", embedBoldItalic: "boldItalic" };
      function a(p, n) {
        let i = { name: n.attr(p, "name"), embedFontRefs: [] };
        for (let b of n.elements(p))
          switch (b.localName) {
            case "family":
              i.family = n.attr(b, "val");
              break;
            case "altName":
              i.altName = n.attr(b, "val");
              break;
            case "embedRegular":
            case "embedBold":
            case "embedItalic":
            case "embedBoldItalic":
              i.embedFontRefs.push(m(b, n));
          }
        return i;
      }
      function m(p, n) {
        return { id: n.attr(p, "id"), key: n.attr(p, "fontKey"), type: r[p.localName] };
      }
      e.parseFonts = function(p, n) {
        return n.elements(p).map((i) => a(i, n));
      }, e.parseFont = a, e.parseEmbedFontRef = m;
    }, 984: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.WmlFooter = e.WmlHeader = void 0;
      const a = r(120);
      e.WmlHeader = class {
        constructor() {
          this.type = a.DomType.Header, this.children = [], this.cssStyle = {};
        }
      }, e.WmlFooter = class {
        constructor() {
          this.type = a.DomType.Footer, this.children = [], this.cssStyle = {};
        }
      };
    }, 985: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.FooterPart = e.HeaderPart = e.BaseHeaderFooterPart = void 0;
      const a = r(530), m = r(984);
      class p extends a.Part {
        constructor(i, b, h) {
          super(i, b), this._documentParser = h;
        }
        parseXml(i) {
          this.rootElement = this.createRootElement(), this.rootElement.children = this._documentParser.parseBodyElements(i);
        }
      }
      e.BaseHeaderFooterPart = p, e.HeaderPart = class extends p {
        createRootElement() {
          return new m.WmlHeader();
        }
      }, e.FooterPart = class extends p {
        createRootElement() {
          return new m.WmlFooter();
        }
      };
    }, 932: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.HtmlRenderer = void 0;
      const a = r(120), m = r(593), p = r(630), n = r(438), i = "http://www.w3.org/1998/Math/MathML";
      function b(s, o, t) {
        return d(void 0, s, o, t);
      }
      function h(s, o, t) {
        return d("http://www.w3.org/2000/svg", s, o, t);
      }
      function d(s, o, t, l) {
        var y = s ? document.createElementNS(s, o) : document.createElement(o);
        return Object.assign(y, t), l && g(y, l), y;
      }
      function f(s) {
        s.innerHTML = "";
      }
      function g(s, o) {
        o.forEach((t) => s.appendChild((0, m.isString)(t) ? document.createTextNode(t) : t));
      }
      function S(s) {
        return b("style", { innerHTML: s });
      }
      function T(s, o) {
        s.appendChild(document.createComment(o));
      }
      e.HtmlRenderer = class {
        constructor(s) {
          this.htmlDocument = s, this.className = "docx", this.styleMap = {}, this.currentPart = null, this.tableVerticalMerges = [], this.currentVerticalMerge = null, this.tableCellPositions = [], this.currentCellPosition = null, this.footnoteMap = {}, this.endnoteMap = {}, this.currentEndnoteIds = [], this.usedHederFooterParts = [], this.currentTabs = [], this.tabsTimeout = 0, this.createElement = b;
        }
        render(s, o, t = null, l) {
          var y;
          this.document = s, this.options = l, this.className = l.className, this.rootSelector = l.inWrapper ? `.${this.className}-wrapper` : ":root", this.styleMap = null, f(t = t || o), f(o), T(t, "docxjs library predefined styles"), t.appendChild(this.renderDefaultStyle()), !window.MathMLElement && l.useMathMLPolyfill && (T(t, "docxjs mathml polyfill styles"), t.appendChild(S(n.default))), s.themePart && (T(t, "docxjs document theme values"), this.renderTheme(s.themePart, t)), s.stylesPart != null && (this.styleMap = this.processStyles(s.stylesPart.styles), T(t, "docxjs document styles"), t.appendChild(this.renderStyles(s.stylesPart.styles))), s.numberingPart && (this.prodessNumberings(s.numberingPart.domNumberings), T(t, "docxjs document numbering styles"), t.appendChild(this.renderNumbering(s.numberingPart.domNumberings, t))), s.footnotesPart && (this.footnoteMap = (0, m.keyBy)(s.footnotesPart.notes, (D) => D.id)), s.endnotesPart && (this.endnoteMap = (0, m.keyBy)(s.endnotesPart.notes, (D) => D.id)), s.settingsPart && (this.defaultTabSize = (y = s.settingsPart.settings) === null || y === void 0 ? void 0 : y.defaultTabStop), !l.ignoreFonts && s.fontTablePart && this.renderFontTable(s.fontTablePart, t);
          var k = this.renderSections(s.documentPart.body);
          this.options.inWrapper ? o.appendChild(this.renderWrapper(k)) : g(o, k), this.refreshTabStops();
        }
        renderTheme(s, o) {
          var t, l;
          const y = {}, k = (t = s.theme) === null || t === void 0 ? void 0 : t.fontScheme;
          k && (k.majorFont && (y["--docx-majorHAnsi-font"] = k.majorFont.latinTypeface), k.minorFont && (y["--docx-minorHAnsi-font"] = k.minorFont.latinTypeface));
          const D = (l = s.theme) === null || l === void 0 ? void 0 : l.colorScheme;
          if (D)
            for (let [P, u] of Object.entries(D.colors))
              y[`--docx-${P}-color`] = `#${u}`;
          const _ = this.styleToString(`.${this.className}`, y);
          o.appendChild(S(_));
        }
        renderFontTable(s, o) {
          for (let t of s.fonts)
            for (let l of t.embedFontRefs)
              this.document.loadFont(l.id, l.key).then((y) => {
                const k = { "font-family": t.name, src: `url(${y})` };
                l.type != "bold" && l.type != "boldItalic" || (k["font-weight"] = "bold"), l.type != "italic" && l.type != "boldItalic" || (k["font-style"] = "italic"), T(o, `docxjs ${t.name} font`);
                const D = this.styleToString("@font-face", k);
                o.appendChild(S(D)), this.refreshTabStops();
              });
        }
        processStyleName(s) {
          return s ? `${this.className}_${(0, m.escapeClassName)(s)}` : this.className;
        }
        processStyles(s) {
          const o = (0, m.keyBy)(s.filter((l) => l.id != null), (l) => l.id);
          for (const l of s.filter((y) => y.basedOn)) {
            var t = o[l.basedOn];
            if (t) {
              l.paragraphProps = (0, m.mergeDeep)(l.paragraphProps, t.paragraphProps), l.runProps = (0, m.mergeDeep)(l.runProps, t.runProps);
              for (const y of t.styles) {
                const k = l.styles.find((D) => D.target == y.target);
                k ? this.copyStyleProperties(y.values, k.values) : l.styles.push(Object.assign(Object.assign({}, y), { values: Object.assign({}, y.values) }));
              }
            } else
              this.options.debug && console.warn(`Can't find base style ${l.basedOn}`);
          }
          for (let l of s)
            l.cssName = this.processStyleName(l.id);
          return o;
        }
        prodessNumberings(s) {
          var o;
          for (let t of s.filter((l) => l.pStyleName)) {
            const l = this.findStyle(t.pStyleName);
            !((o = l == null ? void 0 : l.paragraphProps) === null || o === void 0) && o.numbering && (l.paragraphProps.numbering.level = t.level);
          }
        }
        processElement(s) {
          if (s.children)
            for (var o of s.children)
              o.parent = s, o.type == a.DomType.Table ? this.processTable(o) : this.processElement(o);
        }
        processTable(s) {
          for (var o of s.children)
            for (var t of o.children)
              t.cssStyle = this.copyStyleProperties(s.cellStyle, t.cssStyle, ["border-left", "border-right", "border-top", "border-bottom", "padding-left", "padding-right", "padding-top", "padding-bottom"]), this.processElement(t);
        }
        copyStyleProperties(s, o, t = null) {
          if (!s)
            return o;
          for (var l of (o == null && (o = {}), t == null && (t = Object.getOwnPropertyNames(s)), t))
            s.hasOwnProperty(l) && !o.hasOwnProperty(l) && (o[l] = s[l]);
          return o;
        }
        createSection(s, o) {
          var t = this.createElement("section", { className: s });
          return o && (o.pageMargins && (t.style.paddingLeft = o.pageMargins.left, t.style.paddingRight = o.pageMargins.right, t.style.paddingTop = o.pageMargins.top, t.style.paddingBottom = o.pageMargins.bottom), o.pageSize && (this.options.ignoreWidth || (t.style.width = o.pageSize.width), this.options.ignoreHeight || (t.style.minHeight = o.pageSize.height)), o.columns && o.columns.numberOfColumns && (t.style.columnCount = `${o.columns.numberOfColumns}`, t.style.columnGap = o.columns.space, o.columns.separator && (t.style.columnRule = "1px solid black"))), t;
        }
        renderSections(s) {
          const o = [];
          this.processElement(s);
          const t = this.splitBySection(s.children);
          let l = null;
          for (let k = 0, D = t.length; k < D; k++) {
            this.currentFootnoteIds = [];
            const _ = t[k], P = _.sectProps || s.props, u = this.createSection(this.className, P);
            this.renderStyleValues(s.cssStyle, u), this.options.renderHeaders && this.renderHeaderFooter(P.headerRefs, P, o.length, l != P, u);
            var y = this.createElement("article");
            this.renderElements(_.elements, y), u.appendChild(y), this.options.renderFootnotes && this.renderNotes(this.currentFootnoteIds, this.footnoteMap, u), this.options.renderEndnotes && k == D - 1 && this.renderNotes(this.currentEndnoteIds, this.endnoteMap, u), this.options.renderFooters && this.renderHeaderFooter(P.footerRefs, P, o.length, l != P, u), o.push(u), l = P;
          }
          return o;
        }
        renderHeaderFooter(s, o, t, l, y) {
          var k, D;
          if (s) {
            var _ = (D = (k = o.titlePage && l ? s.find((u) => u.type == "first") : null) !== null && k !== void 0 ? k : t % 2 == 1 ? s.find((u) => u.type == "even") : null) !== null && D !== void 0 ? D : s.find((u) => u.type == "default"), P = _ && this.document.findPartByRelId(_.id, this.document.documentPart);
            P && (this.currentPart = P, this.usedHederFooterParts.includes(P.path) || (this.processElement(P.rootElement), this.usedHederFooterParts.push(P.path)), this.renderElements([P.rootElement], y), this.currentPart = null);
          }
        }
        isPageBreakElement(s) {
          return s.type == a.DomType.Break && (s.break == "lastRenderedPageBreak" ? !this.options.ignoreLastRenderedPageBreak : s.break == "page");
        }
        splitBySection(s) {
          var o, t = { sectProps: null, elements: [] }, l = [t];
          for (let R of s) {
            if (R.type == a.DomType.Paragraph) {
              const G = this.findStyle(R.styleName);
              !((o = G == null ? void 0 : G.paragraphProps) === null || o === void 0) && o.pageBreakBefore && (t.sectProps = y, t = { sectProps: null, elements: [] }, l.push(t));
            }
            if (t.elements.push(R), R.type == a.DomType.Paragraph) {
              const G = R;
              var y = G.sectionProps, k = -1, D = -1;
              if (this.options.breakPages && G.children && (k = G.children.findIndex((L) => {
                var q, W;
                return (D = (W = (q = L.children) === null || q === void 0 ? void 0 : q.findIndex(this.isPageBreakElement.bind(this))) !== null && W !== void 0 ? W : -1) != -1;
              })), (y || k != -1) && (t.sectProps = y, t = { sectProps: null, elements: [] }, l.push(t)), k != -1) {
                let L = G.children[k], q = D < L.children.length - 1;
                if (k < G.children.length - 1 || q) {
                  var _ = R.children, P = Object.assign(Object.assign({}, R), { children: _.slice(k) });
                  if (R.children = _.slice(0, k), t.elements.push(P), q) {
                    let W = L.children, J = Object.assign(Object.assign({}, L), { children: W.slice(0, D) });
                    R.children.push(J), L.children = W.slice(D);
                  }
                }
              }
            }
          }
          let u = null;
          for (let R = l.length - 1; R >= 0; R--)
            l[R].sectProps == null ? l[R].sectProps = u : u = l[R].sectProps;
          return l;
        }
        renderWrapper(s) {
          return this.createElement("div", { className: `${this.className}-wrapper` }, s);
        }
        renderDefaultStyle() {
          var s = this.className;
          return S(`
.${s}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } 
.${s}-wrapper>section.${s} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }
.${s} { color: black; }
section.${s} { box-sizing: border-box; display: flex; flex-flow: column nowrap; position: relative; overflow: hidden; }
section.${s}>article { margin-bottom: auto; }
.${s} table { border-collapse: collapse; }
.${s} table td, .${s} table th { vertical-align: top; }
.${s} p { margin: 0pt; min-height: 1em; }
.${s} span { white-space: pre-wrap; overflow-wrap: break-word; }
.${s} a { color: inherit; text-decoration: inherit; }
`);
        }
        renderNumbering(s, o) {
          var t = "", l = [];
          for (var y of s) {
            var k = `p.${this.numberingClass(y.id, y.level)}`, D = "none";
            if (y.bullet) {
              let _ = `--${this.className}-${y.bullet.src}`.toLowerCase();
              t += this.styleToString(`${k}:before`, { content: "' '", display: "inline-block", background: `var(${_})` }, y.bullet.style), this.document.loadNumberingImage(y.bullet.src).then((P) => {
                var u = `${this.rootSelector} { ${_}: url(${P}) }`;
                o.appendChild(S(u));
              });
            } else if (y.levelText) {
              let _ = this.numberingCounter(y.id, y.level);
              y.level > 0 ? t += this.styleToString(`p.${this.numberingClass(y.id, y.level - 1)}`, { "counter-reset": _ }) : l.push(_), t += this.styleToString(`${k}:before`, Object.assign({ content: this.levelTextToContent(y.levelText, y.suff, y.id, this.numFormatToCssValue(y.format)), "counter-increment": _ }, y.rStyle));
            } else
              D = this.numFormatToCssValue(y.format);
            t += this.styleToString(k, Object.assign({ display: "list-item", "list-style-position": "inside", "list-style-type": D }, y.pStyle));
          }
          return l.length > 0 && (t += this.styleToString(this.rootSelector, { "counter-reset": l.join(" ") })), S(t);
        }
        renderStyles(s) {
          var o, t = "";
          const l = this.styleMap, y = (0, m.keyBy)(s.filter((P) => P.isDefault), (P) => P.target);
          for (const P of s) {
            var k = P.styles;
            if (P.linked) {
              var D = P.linked && l[P.linked];
              D ? k = k.concat(D.styles) : this.options.debug && console.warn(`Can't find linked style ${P.linked}`);
            }
            for (const u of k) {
              var _ = `${(o = P.target) !== null && o !== void 0 ? o : ""}.${P.cssName}`;
              P.target != u.target && (_ += ` ${u.target}`), y[P.target] == P && (_ = `.${this.className} ${P.target}, ` + _), t += this.styleToString(_, u.values);
            }
          }
          return S(t);
        }
        renderNotes(s, o, t) {
          var l = s.map((k) => o[k]).filter((k) => k);
          if (l.length > 0) {
            var y = this.createElement("ol", null, this.renderElements(l));
            t.appendChild(y);
          }
        }
        renderElement(s) {
          switch (s.type) {
            case a.DomType.Paragraph:
              return this.renderParagraph(s);
            case a.DomType.BookmarkStart:
              return this.renderBookmarkStart(s);
            case a.DomType.BookmarkEnd:
              return null;
            case a.DomType.Run:
              return this.renderRun(s);
            case a.DomType.Table:
              return this.renderTable(s);
            case a.DomType.Row:
              return this.renderTableRow(s);
            case a.DomType.Cell:
              return this.renderTableCell(s);
            case a.DomType.Hyperlink:
              return this.renderHyperlink(s);
            case a.DomType.Drawing:
              return this.renderDrawing(s);
            case a.DomType.Image:
              return this.renderImage(s);
            case a.DomType.Text:
            case a.DomType.Text:
              return this.renderText(s);
            case a.DomType.DeletedText:
              return this.renderDeletedText(s);
            case a.DomType.Tab:
              return this.renderTab(s);
            case a.DomType.Symbol:
              return this.renderSymbol(s);
            case a.DomType.Break:
              return this.renderBreak(s);
            case a.DomType.Footer:
              return this.renderContainer(s, "footer");
            case a.DomType.Header:
              return this.renderContainer(s, "header");
            case a.DomType.Footnote:
            case a.DomType.Endnote:
              return this.renderContainer(s, "li");
            case a.DomType.FootnoteReference:
              return this.renderFootnoteReference(s);
            case a.DomType.EndnoteReference:
              return this.renderEndnoteReference(s);
            case a.DomType.NoBreakHyphen:
              return this.createElement("wbr");
            case a.DomType.VmlPicture:
              return this.renderVmlPicture(s);
            case a.DomType.VmlElement:
              return this.renderVmlElement(s);
            case a.DomType.MmlMath:
              return this.renderContainerNS(s, i, "math", { xmlns: i });
            case a.DomType.MmlMathParagraph:
              return this.renderContainer(s, "span");
            case a.DomType.MmlFraction:
              return this.renderContainerNS(s, i, "mfrac");
            case a.DomType.MmlNumerator:
            case a.DomType.MmlDenominator:
              return this.renderContainerNS(s, i, "mrow");
            case a.DomType.MmlRadical:
              return this.renderMmlRadical(s);
            case a.DomType.MmlDegree:
              return this.renderContainerNS(s, i, "mn");
            case a.DomType.MmlSuperscript:
              return this.renderContainerNS(s, i, "msup");
            case a.DomType.MmlSubscript:
              return this.renderContainerNS(s, i, "msub");
            case a.DomType.MmlBase:
              return this.renderContainerNS(s, i, "mrow");
            case a.DomType.MmlSuperArgument:
            case a.DomType.MmlSubArgument:
              return this.renderContainerNS(s, i, "mn");
            case a.DomType.MmlDelimiter:
              return this.renderMmlDelimiter(s);
            case a.DomType.MmlRun:
              return this.renderMmlRun(s);
            case a.DomType.MmlNary:
              return this.renderMmlNary(s);
            case a.DomType.Inserted:
              return this.renderInserted(s);
            case a.DomType.Deleted:
              return this.renderDeleted(s);
          }
          return null;
        }
        renderChildren(s, o) {
          return this.renderElements(s.children, o);
        }
        renderElements(s, o) {
          if (s == null)
            return null;
          var t = s.flatMap((l) => this.renderElement(l)).filter((l) => l != null);
          return o && g(o, t), t;
        }
        renderContainer(s, o, t) {
          return this.createElement(o, t, this.renderChildren(s));
        }
        renderContainerNS(s, o, t, l) {
          return d(o, t, l, this.renderChildren(s));
        }
        renderParagraph(s) {
          var o, t, l, y, k = this.createElement("p");
          const D = this.findStyle(s.styleName);
          (o = s.tabs) !== null && o !== void 0 || (s.tabs = (t = D == null ? void 0 : D.paragraphProps) === null || t === void 0 ? void 0 : t.tabs), this.renderClass(s, k), this.renderChildren(s, k), this.renderStyleValues(s.cssStyle, k), this.renderCommonProperties(k.style, s);
          const _ = (l = s.numbering) !== null && l !== void 0 ? l : (y = D == null ? void 0 : D.paragraphProps) === null || y === void 0 ? void 0 : y.numbering;
          return _ && k.classList.add(this.numberingClass(_.id, _.level)), k;
        }
        renderRunProperties(s, o) {
          this.renderCommonProperties(s, o);
        }
        renderCommonProperties(s, o) {
          o != null && (o.color && (s.color = o.color), o.fontSize && (s["font-size"] = o.fontSize));
        }
        renderHyperlink(s) {
          var o = this.createElement("a");
          if (this.renderChildren(s, o), this.renderStyleValues(s.cssStyle, o), s.href)
            o.href = s.href;
          else if (s.id) {
            const t = this.document.documentPart.rels.find((l) => l.id == s.id && l.targetMode === "External");
            o.href = t == null ? void 0 : t.target;
          }
          return o;
        }
        renderDrawing(s) {
          var o = this.createElement("div");
          return o.style.display = "inline-block", o.style.position = "relative", o.style.textIndent = "0px", this.renderChildren(s, o), this.renderStyleValues(s.cssStyle, o), o;
        }
        renderImage(s) {
          let o = this.createElement("img");
          return this.renderStyleValues(s.cssStyle, o), this.document && this.document.loadDocumentImage(s.src, this.currentPart).then((t) => {
            o.src = t;
          }), o;
        }
        renderText(s) {
          return this.htmlDocument.createTextNode(s.text);
        }
        renderDeletedText(s) {
          return this.options.renderEndnotes ? this.htmlDocument.createTextNode(s.text) : null;
        }
        renderBreak(s) {
          return s.break == "textWrapping" ? this.createElement("br") : null;
        }
        renderInserted(s) {
          return this.options.renderChanges ? this.renderContainer(s, "ins") : this.renderChildren(s);
        }
        renderDeleted(s) {
          return this.options.renderChanges ? this.renderContainer(s, "del") : null;
        }
        renderSymbol(s) {
          var o = this.createElement("span");
          return o.style.fontFamily = s.font, o.innerHTML = `&#x${s.char};`, o;
        }
        renderFootnoteReference(s) {
          var o = this.createElement("sup");
          return this.currentFootnoteIds.push(s.id), o.textContent = `${this.currentFootnoteIds.length}`, o;
        }
        renderEndnoteReference(s) {
          var o = this.createElement("sup");
          return this.currentEndnoteIds.push(s.id), o.textContent = `${this.currentEndnoteIds.length}`, o;
        }
        renderTab(s) {
          var o, t = this.createElement("span");
          if (t.innerHTML = "&emsp;", this.options.experimental) {
            t.className = this.tabStopClass();
            var l = (o = function(y, k) {
              for (var D = y.parent; D != null && D.type != k; )
                D = D.parent;
              return D;
            }(s, a.DomType.Paragraph)) === null || o === void 0 ? void 0 : o.tabs;
            this.currentTabs.push({ stops: l, span: t });
          }
          return t;
        }
        renderBookmarkStart(s) {
          var o = this.createElement("span");
          return o.id = s.name, o;
        }
        renderRun(s) {
          if (s.fieldRun)
            return null;
          const o = this.createElement("span");
          if (s.id && (o.id = s.id), this.renderClass(s, o), this.renderStyleValues(s.cssStyle, o), s.verticalAlign) {
            const t = this.createElement(s.verticalAlign);
            this.renderChildren(s, t), o.appendChild(t);
          } else
            this.renderChildren(s, o);
          return o;
        }
        renderTable(s) {
          let o = this.createElement("table");
          return this.tableCellPositions.push(this.currentCellPosition), this.tableVerticalMerges.push(this.currentVerticalMerge), this.currentVerticalMerge = {}, this.currentCellPosition = { col: 0, row: 0 }, s.columns && o.appendChild(this.renderTableColumns(s.columns)), this.renderClass(s, o), this.renderChildren(s, o), this.renderStyleValues(s.cssStyle, o), this.currentVerticalMerge = this.tableVerticalMerges.pop(), this.currentCellPosition = this.tableCellPositions.pop(), o;
        }
        renderTableColumns(s) {
          let o = this.createElement("colgroup");
          for (let t of s) {
            let l = this.createElement("col");
            t.width && (l.style.width = t.width), o.appendChild(l);
          }
          return o;
        }
        renderTableRow(s) {
          let o = this.createElement("tr");
          return this.currentCellPosition.col = 0, this.renderClass(s, o), this.renderChildren(s, o), this.renderStyleValues(s.cssStyle, o), this.currentCellPosition.row++, o;
        }
        renderTableCell(s) {
          let o = this.createElement("td");
          const t = this.currentCellPosition.col;
          return s.verticalMerge ? s.verticalMerge == "restart" ? (this.currentVerticalMerge[t] = o, o.rowSpan = 1) : this.currentVerticalMerge[t] && (this.currentVerticalMerge[t].rowSpan += 1, o.style.display = "none") : this.currentVerticalMerge[t] = null, this.renderClass(s, o), this.renderChildren(s, o), this.renderStyleValues(s.cssStyle, o), s.span && (o.colSpan = s.span), this.currentCellPosition.col += o.colSpan, o;
        }
        renderVmlPicture(s) {
          var o = b("div");
          return this.renderChildren(s, o), o;
        }
        renderVmlElement(s) {
          var o, t, l = h("svg");
          l.setAttribute("style", s.cssStyleText);
          const y = h(s.tagName);
          return Object.entries(s.attrs).forEach(([k, D]) => y.setAttribute(k, D)), !((o = s.imageHref) === null || o === void 0) && o.id && ((t = this.document) === null || t === void 0 || t.loadDocumentImage(s.imageHref.id, this.currentPart).then((k) => y.setAttribute("href", k))), l.appendChild(y), setTimeout(() => {
            const k = l.firstElementChild.getBBox();
            l.setAttribute("width", `${Math.ceil(k.x + k.width)}`), l.setAttribute("height", `${Math.ceil(k.y + k.height)}`);
          }, 0), l;
        }
        renderMmlRadical(s) {
          var o;
          const t = s.children.find((y) => y.type == a.DomType.MmlBase);
          if (!((o = s.props) === null || o === void 0) && o.hideDegree)
            return d(i, "msqrt", null, this.renderElements([t]));
          const l = s.children.find((y) => y.type == a.DomType.MmlDegree);
          return d(i, "mroot", null, this.renderElements([t, l]));
        }
        renderMmlDelimiter(s) {
          var o, t;
          const l = [];
          return l.push(d(i, "mo", null, [(o = s.props.beginChar) !== null && o !== void 0 ? o : "("])), l.push(...this.renderElements(s.children)), l.push(d(i, "mo", null, [(t = s.props.endChar) !== null && t !== void 0 ? t : ")"])), d(i, "mrow", null, l);
        }
        renderMmlNary(s) {
          var o;
          const t = [], l = (0, m.keyBy)(s.children, (P) => P.type), y = l[a.DomType.MmlSuperArgument], k = l[a.DomType.MmlSubArgument], D = y ? d(i, "mo", null, (0, m.asArray)(this.renderElement(y))) : null, _ = k ? d(i, "mo", null, (0, m.asArray)(this.renderElement(k))) : null;
          if (!((o = s.props) === null || o === void 0) && o.char) {
            const P = d(i, "mo", null, [s.props.char]);
            D || _ ? t.push(d(i, "munderover", null, [P, _, D])) : D ? t.push(d(i, "mover", null, [P, D])) : _ ? t.push(d(i, "munder", null, [P, _])) : t.push(P);
          }
          return t.push(...this.renderElements(l[a.DomType.MmlBase].children)), d(i, "mrow", null, t);
        }
        renderMmlRun(s) {
          const o = d(i, "ms");
          return this.renderClass(s, o), this.renderStyleValues(s.cssStyle, o), this.renderChildren(s, o), o;
        }
        renderStyleValues(s, o) {
          Object.assign(o.style, s);
        }
        renderClass(s, o) {
          s.className && (o.className = s.className), s.styleName && o.classList.add(this.processStyleName(s.styleName));
        }
        findStyle(s) {
          var o;
          return s && ((o = this.styleMap) === null || o === void 0 ? void 0 : o[s]);
        }
        numberingClass(s, o) {
          return `${this.className}-num-${s}-${o}`;
        }
        tabStopClass() {
          return `${this.className}-tab-stop`;
        }
        styleToString(s, o, t = null) {
          let l = `${s} {\r
`;
          for (const y in o)
            l += `  ${y}: ${o[y]};\r
`;
          return t && (l += t), l + `}\r
`;
        }
        numberingCounter(s, o) {
          return `${this.className}-num-${s}-${o}`;
        }
        levelTextToContent(s, o, t, l) {
          var y;
          return `"${s.replace(/%\d*/g, (k) => {
            let D = parseInt(k.substring(1), 10) - 1;
            return `"counter(${this.numberingCounter(t, D)}, ${l})"`;
          })}${(y = { tab: "\\9", space: "\\a0" }[o]) !== null && y !== void 0 ? y : ""}"`;
        }
        numFormatToCssValue(s) {
          return { none: "none", bullet: "disc", decimal: "decimal", lowerLetter: "lower-alpha", upperLetter: "upper-alpha", lowerRoman: "lower-roman", upperRoman: "upper-roman" }[s] || s;
        }
        refreshTabStops() {
          this.options.experimental && (clearTimeout(this.tabsTimeout), this.tabsTimeout = setTimeout(() => {
            const s = (0, p.computePixelToPoint)();
            for (let o of this.currentTabs)
              (0, p.updateTabStop)(o.span, o.stops, this.defaultTabSize, s);
          }, 500));
        }
      };
    }, 630: (v, e) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.updateTabStop = e.computePixelToPoint = void 0;
      const r = { pos: 0, leader: "none", style: "left" };
      function a(m) {
        return parseFloat(m);
      }
      e.computePixelToPoint = function(m = document.body) {
        const p = document.createElement("div");
        p.style.width = "100pt", m.appendChild(p);
        const n = 100 / p.offsetWidth;
        return m.removeChild(p), n;
      }, e.updateTabStop = function(m, p, n, i = 0.75) {
        const b = m.closest("p"), h = m.getBoundingClientRect(), d = b.getBoundingClientRect(), f = getComputedStyle(b), g = (p == null ? void 0 : p.length) > 0 ? p.map((_) => ({ pos: a(_.position), leader: _.leader, style: _.style })).sort((_, P) => _.pos - P.pos) : [r], S = g[g.length - 1], T = d.width * i, s = a(n);
        let o = S.pos + s;
        if (o < T)
          for (; o < T && g.length < 50; o += s)
            g.push(Object.assign(Object.assign({}, r), { pos: o }));
        const t = parseFloat(f.marginLeft), l = d.left + t, y = (h.left - l) * i, k = g.find((_) => _.style != "clear" && _.pos > y);
        if (k == null)
          return;
        let D = 1;
        if (k.style == "right" || k.style == "center") {
          const _ = Array.from(b.querySelectorAll(`.${m.className}`)), P = _.indexOf(m) + 1, u = document.createRange();
          u.setStart(m, 1), P < _.length ? u.setEndBefore(_[P]) : u.setEndAfter(b);
          const R = k.style == "center" ? 0.5 : 1, G = u.getBoundingClientRect(), L = G.left + R * G.width - (d.left - t);
          D = k.pos - L * i;
        } else
          D = k.pos - y;
        switch (m.innerHTML = "&nbsp;", m.style.textDecoration = "inherit", m.style.wordSpacing = `${D.toFixed(0)}pt`, k.leader) {
          case "dot":
          case "middleDot":
            m.style.textDecoration = "underline", m.style.textDecorationStyle = "dotted";
            break;
          case "hyphen":
          case "heavy":
          case "underscore":
            m.style.textDecoration = "underline";
        }
      };
    }, 881: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.WmlEndnote = e.WmlFootnote = e.WmlBaseNote = void 0;
      const a = r(120);
      class m {
        constructor() {
          this.children = [], this.cssStyle = {};
        }
      }
      e.WmlBaseNote = m, e.WmlFootnote = class extends m {
        constructor() {
          super(...arguments), this.type = a.DomType.Footnote;
        }
      }, e.WmlEndnote = class extends m {
        constructor() {
          super(...arguments), this.type = a.DomType.Endnote;
        }
      };
    }, 735: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.EndnotesPart = e.FootnotesPart = e.BaseNotePart = void 0;
      const a = r(530), m = r(881);
      class p extends a.Part {
        constructor(i, b, h) {
          super(i, b), this._documentParser = h;
        }
      }
      e.BaseNotePart = p, e.FootnotesPart = class extends p {
        constructor(n, i, b) {
          super(n, i, b);
        }
        parseXml(n) {
          this.notes = this._documentParser.parseNotes(n, "footnote", m.WmlFootnote);
        }
      }, e.EndnotesPart = class extends p {
        constructor(n, i, b) {
          super(n, i, b);
        }
        parseXml(n) {
          this.notes = this._documentParser.parseNotes(n, "endnote", m.WmlEndnote);
        }
      };
    }, 527: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.NumberingPart = void 0;
      const a = r(530), m = r(682);
      class p extends a.Part {
        constructor(i, b, h) {
          super(i, b), this._documentParser = h;
        }
        parseXml(i) {
          Object.assign(this, (0, m.parseNumberingPart)(i, this._package.xmlParser)), this.domNumberings = this._documentParser.parseNumberingFile(i);
        }
      }
      e.NumberingPart = p;
    }, 682: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseNumberingBulletPicture = e.parseNumberingLevelOverrride = e.parseNumberingLevel = e.parseAbstractNumbering = e.parseNumbering = e.parseNumberingPart = void 0;
      const a = r(109), m = r(488);
      function p(d, f) {
        let g = { id: f.attr(d, "numId"), overrides: [] };
        for (let S of f.elements(d))
          switch (S.localName) {
            case "abstractNumId":
              g.abstractId = f.attr(S, "val");
              break;
            case "lvlOverride":
              g.overrides.push(b(S, f));
          }
        return g;
      }
      function n(d, f) {
        let g = { id: f.attr(d, "abstractNumId"), levels: [] };
        for (let S of f.elements(d))
          switch (S.localName) {
            case "name":
              g.name = f.attr(S, "val");
              break;
            case "multiLevelType":
              g.multiLevelType = f.attr(S, "val");
              break;
            case "numStyleLink":
              g.numberingStyleLink = f.attr(S, "val");
              break;
            case "styleLink":
              g.styleLink = f.attr(S, "val");
              break;
            case "lvl":
              g.levels.push(i(S, f));
          }
        return g;
      }
      function i(d, f) {
        let g = { level: f.intAttr(d, "ilvl") };
        for (let S of f.elements(d))
          switch (S.localName) {
            case "start":
              g.start = f.attr(S, "val");
              break;
            case "lvlRestart":
              g.restart = f.intAttr(S, "val");
              break;
            case "numFmt":
              g.format = f.attr(S, "val");
              break;
            case "lvlText":
              g.text = f.attr(S, "val");
              break;
            case "lvlJc":
              g.justification = f.attr(S, "val");
              break;
            case "lvlPicBulletId":
              g.bulletPictureId = f.attr(S, "val");
              break;
            case "pStyle":
              g.paragraphStyle = f.attr(S, "val");
              break;
            case "pPr":
              g.paragraphProps = (0, a.parseParagraphProperties)(S, f);
              break;
            case "rPr":
              g.runProps = (0, m.parseRunProperties)(S, f);
          }
        return g;
      }
      function b(d, f) {
        let g = { level: f.intAttr(d, "ilvl") };
        for (let S of f.elements(d))
          switch (S.localName) {
            case "startOverride":
              g.start = f.intAttr(S, "val");
              break;
            case "lvl":
              g.numberingLevel = i(S, f);
          }
        return g;
      }
      function h(d, f) {
        var g = f.element(d, "pict"), S = g && f.element(g, "shape"), T = S && f.element(S, "imagedata");
        return T ? { id: f.attr(d, "numPicBulletId"), referenceId: f.attr(T, "id"), style: f.attr(S, "style") } : null;
      }
      e.parseNumberingPart = function(d, f) {
        let g = { numberings: [], abstractNumberings: [], bulletPictures: [] };
        for (let S of f.elements(d))
          switch (S.localName) {
            case "num":
              g.numberings.push(p(S, f));
              break;
            case "abstractNum":
              g.abstractNumberings.push(n(S, f));
              break;
            case "numPicBullet":
              g.bulletPictures.push(h(S, f));
          }
        return g;
      }, e.parseNumbering = p, e.parseAbstractNumbering = n, e.parseNumberingLevel = i, e.parseNumberingLevelOverrride = b, e.parseNumberingBulletPicture = h;
    }, 472: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.XmlParser = e.serializeXmlString = e.parseXmlString = void 0;
      const a = r(149);
      e.parseXmlString = function(n, i = !1) {
        i && (n = n.replace(/<[?].*[?]>/, ""));
        const b = new DOMParser().parseFromString(n, "application/xml"), h = (d = b.getElementsByTagName("parsererror")[0]) === null || d === void 0 ? void 0 : d.textContent;
        var d;
        if (h)
          throw new Error(h);
        return b;
      }, e.serializeXmlString = function(n) {
        return new XMLSerializer().serializeToString(n);
      };
      class m {
        elements(i, b = null) {
          const h = [];
          for (let d = 0, f = i.childNodes.length; d < f; d++) {
            let g = i.childNodes.item(d);
            g.nodeType != 1 || b != null && g.localName != b || h.push(g);
          }
          return h;
        }
        element(i, b) {
          for (let h = 0, d = i.childNodes.length; h < d; h++) {
            let f = i.childNodes.item(h);
            if (f.nodeType == 1 && f.localName == b)
              return f;
          }
          return null;
        }
        elementAttr(i, b, h) {
          var d = this.element(i, b);
          return d ? this.attr(d, h) : void 0;
        }
        attrs(i) {
          return Array.from(i.attributes);
        }
        attr(i, b) {
          for (let h = 0, d = i.attributes.length; h < d; h++) {
            let f = i.attributes.item(h);
            if (f.localName == b)
              return f.value;
          }
          return null;
        }
        intAttr(i, b, h = null) {
          var d = this.attr(i, b);
          return d ? parseInt(d) : h;
        }
        hexAttr(i, b, h = null) {
          var d = this.attr(i, b);
          return d ? parseInt(d, 16) : h;
        }
        floatAttr(i, b, h = null) {
          var d = this.attr(i, b);
          return d ? parseFloat(d) : h;
        }
        boolAttr(i, b, h = null) {
          return (0, a.convertBoolean)(this.attr(i, b), h);
        }
        lengthAttr(i, b, h = a.LengthUsage.Dxa) {
          return (0, a.convertLength)(this.attr(i, b), h);
        }
      }
      e.XmlParser = m;
      const p = new m();
      e.default = p;
    }, 287: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.SettingsPart = void 0;
      const a = r(530), m = r(846);
      class p extends a.Part {
        constructor(i, b) {
          super(i, b);
        }
        parseXml(i) {
          this.settings = (0, m.parseSettings)(i, this._package.xmlParser);
        }
      }
      e.SettingsPart = p;
    }, 846: (v, e) => {
      function r(a, m) {
        var p = { defaultNoteIds: [] };
        for (let n of m.elements(a))
          switch (n.localName) {
            case "numFmt":
              p.nummeringFormat = m.attr(n, "val");
              break;
            case "footnote":
            case "endnote":
              p.defaultNoteIds.push(m.attr(n, "id"));
          }
        return p;
      }
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseNoteProperties = e.parseSettings = void 0, e.parseSettings = function(a, m) {
        var p = {};
        for (let n of m.elements(a))
          switch (n.localName) {
            case "defaultTabStop":
              p.defaultTabStop = m.lengthAttr(n, "val");
              break;
            case "footnotePr":
              p.footnoteProps = r(n, m);
              break;
            case "endnotePr":
              p.endnoteProps = r(n, m);
              break;
            case "autoHyphenation":
              p.autoHyphenation = m.boolAttr(n, "val");
          }
        return p;
      }, e.parseNoteProperties = r;
    }, 240: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.StylesPart = void 0;
      const a = r(530);
      class m extends a.Part {
        constructor(n, i, b) {
          super(n, i), this._documentParser = b;
        }
        parseXml(n) {
          this.styles = this._documentParser.parseStylesFile(n);
        }
      }
      e.StylesPart = m;
    }, 893: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.ThemePart = void 0;
      const a = r(530), m = r(55);
      class p extends a.Part {
        constructor(i, b) {
          super(i, b);
        }
        parseXml(i) {
          this.theme = (0, m.parseTheme)(i, this._package.xmlParser);
        }
      }
      e.ThemePart = p;
    }, 55: (v, e) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseFontInfo = e.parseFontScheme = e.parseColorScheme = e.parseTheme = e.DmlTheme = void 0;
      class r {
      }
      function a(n, i) {
        var b = { name: i.attr(n, "name"), colors: {} };
        for (let f of i.elements(n)) {
          var h = i.element(f, "srgbClr"), d = i.element(f, "sysClr");
          h ? b.colors[f.localName] = i.attr(h, "val") : d && (b.colors[f.localName] = i.attr(d, "lastClr"));
        }
        return b;
      }
      function m(n, i) {
        var b = { name: i.attr(n, "name") };
        for (let h of i.elements(n))
          switch (h.localName) {
            case "majorFont":
              b.majorFont = p(h, i);
              break;
            case "minorFont":
              b.minorFont = p(h, i);
          }
        return b;
      }
      function p(n, i) {
        return { latinTypeface: i.elementAttr(n, "latin", "typeface"), eaTypeface: i.elementAttr(n, "ea", "typeface"), csTypeface: i.elementAttr(n, "cs", "typeface") };
      }
      e.DmlTheme = r, e.parseTheme = function(n, i) {
        var b = new r(), h = i.element(n, "themeElements");
        for (let d of i.elements(h))
          switch (d.localName) {
            case "clrScheme":
              b.colorScheme = a(d, i);
              break;
            case "fontScheme":
              b.fontScheme = m(d, i);
          }
        return b;
      }, e.parseColorScheme = a, e.parseFontScheme = m, e.parseFontInfo = p;
    }, 593: (v, e) => {
      function r(a) {
        return a && typeof a == "object" && !Array.isArray(a);
      }
      Object.defineProperty(e, "__esModule", { value: !0 }), e.asArray = e.formatCssRules = e.parseCssRules = e.mergeDeep = e.isString = e.isObject = e.blobToBase64 = e.keyBy = e.resolvePath = e.splitPath = e.escapeClassName = void 0, e.escapeClassName = function(a) {
        return a == null ? void 0 : a.replace(/[ .]+/g, "-").replace(/[&]+/g, "and").toLowerCase();
      }, e.splitPath = function(a) {
        let m = a.lastIndexOf("/") + 1;
        return [m == 0 ? "" : a.substring(0, m), m == 0 ? a : a.substring(m)];
      }, e.resolvePath = function(a, m) {
        try {
          const p = "http://docx/";
          return new URL(a, p + m).toString().substring(p.length);
        } catch (p) {
          return `${m}${a}`;
        }
      }, e.keyBy = function(a, m) {
        return a.reduce((p, n) => (p[m(n)] = n, p), {});
      }, e.blobToBase64 = function(a) {
        return new Promise((m, p) => {
          const n = new FileReader();
          n.onloadend = () => m(n.result), n.readAsDataURL(a);
        });
      }, e.isObject = r, e.isString = function(a) {
        return a && typeof a == "string" || a instanceof String;
      }, e.mergeDeep = function a(m, ...p) {
        var n;
        if (!p.length)
          return m;
        const i = p.shift();
        if (r(m) && r(i))
          for (const b in i)
            r(i[b]) ? a((n = m[b]) !== null && n !== void 0 ? n : m[b] = {}, i[b]) : m[b] = i[b];
        return a(m, ...p);
      }, e.parseCssRules = function(a) {
        const m = {};
        for (const p of a.split(";")) {
          const [n, i] = p.split(":");
          m[n] = i;
        }
        return m;
      }, e.formatCssRules = function(a) {
        return Object.entries(a).map((m, p) => `${m}: ${p}`).join(";");
      }, e.asArray = function(a) {
        return Array.isArray(a) ? a : [a];
      };
    }, 320: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.parseVmlElement = e.VmlElement = void 0;
      const a = r(149), m = r(120), p = r(472);
      class n {
        constructor() {
          this.type = m.DomType.VmlElement, this.attrs = {}, this.chidren = [];
        }
      }
      function i(h) {
        var d;
        return { stroke: p.default.attr(h, "color"), "stroke-width": (d = p.default.lengthAttr(h, "weight", a.LengthUsage.Emu)) !== null && d !== void 0 ? d : "1px" };
      }
      function b(h) {
        return h.split(",");
      }
      e.VmlElement = n, e.parseVmlElement = function h(d) {
        var f = new n();
        switch (d.localName) {
          case "rect":
            f.tagName = "rect", Object.assign(f.attrs, { width: "100%", height: "100%" });
            break;
          case "oval":
            f.tagName = "ellipse", Object.assign(f.attrs, { cx: "50%", cy: "50%", rx: "50%", ry: "50%" });
            break;
          case "line":
            f.tagName = "line";
            break;
          case "shape":
            f.tagName = "g";
            break;
          default:
            return null;
        }
        for (const g of p.default.attrs(d))
          switch (g.localName) {
            case "style":
              f.cssStyleText = g.value;
              break;
            case "fillcolor":
              f.attrs.fill = g.value;
              break;
            case "from":
              const [S, T] = b(g.value);
              Object.assign(f.attrs, { x1: S, y1: T });
              break;
            case "to":
              const [s, o] = b(g.value);
              Object.assign(f.attrs, { x2: s, y2: o });
          }
        for (const g of p.default.elements(d))
          switch (g.localName) {
            case "stroke":
              Object.assign(f.attrs, i(g));
              break;
            case "fill":
              Object.assign(f.attrs, {});
              break;
            case "imagedata":
              f.tagName = "image", Object.assign(f.attrs, { width: "100%", height: "100%" }), f.imageHref = { id: p.default.attr(g, "id"), title: p.default.attr(g, "title") };
              break;
            default:
              const S = h(g);
              S && f.chidren.push(S);
          }
        return f;
      };
    }, 213: (v, e, r) => {
      Object.defineProperty(e, "__esModule", { value: !0 }), e.deobfuscate = e.WordDocument = void 0;
      const a = r(461), m = r(380), p = r(522), n = r(448), i = r(593), b = r(527), h = r(240), d = r(985), f = r(665), g = r(162), S = r(893), T = r(735), s = r(287), o = r(177), t = [{ type: a.RelationshipTypes.OfficeDocument, target: "word/document.xml" }, { type: a.RelationshipTypes.ExtendedProperties, target: "docProps/app.xml" }, { type: a.RelationshipTypes.CoreProperties, target: "docProps/core.xml" }, { type: a.RelationshipTypes.CustomProperties, target: "docProps/custom.xml" }];
      class l {
        constructor() {
          this.parts = [], this.partsMap = {};
        }
        static load(D, _, P) {
          var u = new l();
          return u._options = P, u._parser = _, p.OpenXmlPackage.load(D, P).then((R) => (u._package = R, u._package.loadRelationships())).then((R) => {
            u.rels = R;
            const G = t.map((L) => {
              var q;
              const W = (q = R.find((J) => J.type === L.type)) !== null && q !== void 0 ? q : L;
              return u.loadRelationshipPart(W.target, W.type);
            });
            return Promise.all(G);
          }).then(() => u);
        }
        save(D = "blob") {
          return this._package.save(D);
        }
        loadRelationshipPart(D, _) {
          if (this.partsMap[D])
            return Promise.resolve(this.partsMap[D]);
          if (!this._package.get(D))
            return Promise.resolve(null);
          let P = null;
          switch (_) {
            case a.RelationshipTypes.OfficeDocument:
              this.documentPart = P = new n.DocumentPart(this._package, D, this._parser);
              break;
            case a.RelationshipTypes.FontTable:
              this.fontTablePart = P = new m.FontTablePart(this._package, D);
              break;
            case a.RelationshipTypes.Numbering:
              this.numberingPart = P = new b.NumberingPart(this._package, D, this._parser);
              break;
            case a.RelationshipTypes.Styles:
              this.stylesPart = P = new h.StylesPart(this._package, D, this._parser);
              break;
            case a.RelationshipTypes.Theme:
              this.themePart = P = new S.ThemePart(this._package, D);
              break;
            case a.RelationshipTypes.Footnotes:
              this.footnotesPart = P = new T.FootnotesPart(this._package, D, this._parser);
              break;
            case a.RelationshipTypes.Endnotes:
              this.endnotesPart = P = new T.EndnotesPart(this._package, D, this._parser);
              break;
            case a.RelationshipTypes.Footer:
              P = new d.FooterPart(this._package, D, this._parser);
              break;
            case a.RelationshipTypes.Header:
              P = new d.HeaderPart(this._package, D, this._parser);
              break;
            case a.RelationshipTypes.CoreProperties:
              this.corePropsPart = P = new g.CorePropsPart(this._package, D);
              break;
            case a.RelationshipTypes.ExtendedProperties:
              this.extendedPropsPart = P = new f.ExtendedPropsPart(this._package, D);
              break;
            case a.RelationshipTypes.CustomProperties:
              P = new o.CustomPropsPart(this._package, D);
              break;
            case a.RelationshipTypes.Settings:
              this.settingsPart = P = new s.SettingsPart(this._package, D);
          }
          return P == null ? Promise.resolve(null) : (this.partsMap[D] = P, this.parts.push(P), P.load().then(() => {
            if (P.rels == null || P.rels.length == 0)
              return P;
            const [u] = (0, i.splitPath)(P.path), R = P.rels.map((G) => this.loadRelationshipPart((0, i.resolvePath)(G.target, u), G.type));
            return Promise.all(R).then(() => P);
          }));
        }
        loadDocumentImage(D, _) {
          return this.loadResource(_ != null ? _ : this.documentPart, D, "blob").then((P) => this.blobToURL(P));
        }
        loadNumberingImage(D) {
          return this.loadResource(this.numberingPart, D, "blob").then((_) => this.blobToURL(_));
        }
        loadFont(D, _) {
          return this.loadResource(this.fontTablePart, D, "uint8array").then((P) => P && this.blobToURL(new Blob([y(P, _)])));
        }
        blobToURL(D) {
          return D ? this._options.useBase64URL ? (0, i.blobToBase64)(D) : URL.createObjectURL(D) : null;
        }
        findPartByRelId(D, _ = null) {
          var P, u = ((P = _.rels) !== null && P !== void 0 ? P : this.rels).find((G) => G.id == D);
          const R = _ ? (0, i.splitPath)(_.path)[0] : "";
          return u ? this.partsMap[(0, i.resolvePath)(u.target, R)] : null;
        }
        getPathById(D, _) {
          const P = D.rels.find((R) => R.id == _), [u] = (0, i.splitPath)(D.path);
          return P ? (0, i.resolvePath)(P.target, u) : null;
        }
        loadResource(D, _, P) {
          const u = this.getPathById(D, _);
          return u ? this._package.load(u, P) : Promise.resolve(null);
        }
      }
      function y(k, D) {
        const _ = D.replace(/{|}|-/g, ""), P = new Array(16);
        for (let u = 0; u < 16; u++)
          P[16 - u - 1] = parseInt(_.substr(2 * u, 2), 16);
        for (let u = 0; u < 32; u++)
          k[u] = k[u] ^ P[u % 16];
        return k;
      }
      e.WordDocument = l, e.deobfuscate = y;
    }, 583: (v) => {
      v.exports = "data:image/svg+xml,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 100%27 preserveAspectRatio=%27none%27%3E%3Cpath d=%27m0,75 l5,0 l5,25 l10,-100%27 stroke=%27black%27 fill=%27none%27 vector-effect=%27non-scaling-stroke%27/%3E%3C/svg%3E";
    }, 626: (v) => {
      v.exports = C;
    } }, E = {};
    function x(v) {
      var e = E[v];
      if (e !== void 0)
        return e.exports;
      var r = E[v] = { id: v, exports: {} };
      return M[v](r, r.exports, x), r.exports;
    }
    return x.m = M, x.n = (v) => {
      var e = v && v.__esModule ? () => v.default : () => v;
      return x.d(e, { a: e }), e;
    }, x.d = (v, e) => {
      for (var r in e)
        x.o(e, r) && !x.o(v, r) && Object.defineProperty(v, r, { enumerable: !0, get: e[r] });
    }, x.o = (v, e) => Object.prototype.hasOwnProperty.call(v, e), x.r = (v) => {
      typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(v, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(v, "__esModule", { value: !0 });
    }, x.b = document.baseURI || self.location.href, x(667);
  })());
})($e);
const Xe = {
  ignoreLastRenderedPageBreak: !1
};
function Ge(K, re = {}) {
  return typeof K == "string" ? qe(K, re) : Promise.resolve(K);
}
function qe(K, re) {
  return fetch(K, re).then((C) => C.status !== 200 ? Promise.reject(C) : C);
}
function Ke(K, re, C = {}) {
  if (!K)
    return re.innerHTML = "", Promise.resolve();
  let M;
  return K instanceof Blob ? M = K : K instanceof Response ? M = K.blob() : K instanceof ArrayBuffer && (M = new Blob([K])), Ce.renderAsync(M, re, re, Ae(Ae({}, Xe), C));
}
const ye = {
  getData: Ge,
  render: Ke
};
var Ye = function() {
  var K = this, re = K.$createElement, C = K._self._c || re;
  return C("div", {
    staticClass: "vue-office-docx"
  }, [C("div", {
    ref: "rootRef",
    staticClass: "vue-office-docx-main"
  })]);
}, Je = [];
function Qe(K, re, C, M, E, x, v, e) {
  var r = typeof K == "function" ? K.options : K;
  re && (r.render = re, r.staticRenderFns = C, r._compiled = !0), M && (r.functional = !0), x && (r._scopeId = "data-v-" + x);
  var a;
  if (v ? (a = function(n) {
    n = n || // cached call
    this.$vnode && this.$vnode.ssrContext || // stateful
    this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext, !n && typeof __VUE_SSR_CONTEXT__ != "undefined" && (n = __VUE_SSR_CONTEXT__), E && E.call(this, n), n && n._registeredComponents && n._registeredComponents.add(v);
  }, r._ssrRegister = a) : E && (a = e ? function() {
    E.call(
      this,
      (r.functional ? this.parent : this).$root.$options.shadowRoot
    );
  } : E), a)
    if (r.functional) {
      r._injectStyles = a;
      var m = r.render;
      r.render = function(i, b) {
        return a.call(b), m(i, b);
      };
    } else {
      var p = r.beforeCreate;
      r.beforeCreate = p ? [].concat(p, a) : [a];
    }
  return {
    exports: K,
    options: r
  };
}
const et = je({
  name: "VueOfficeDocx",
  props: {
    src: [String, ArrayBuffer, Blob],
    requestOptions: {
      type: Object,
      default: () => ({})
    },
    options: {
      type: Object,
      default: () => ({})
    }
  },
  emits: ["rendered", "error"],
  setup(K, { emit: re }) {
    const C = Ue(null);
    function M() {
      let E = C.value;
      ye.getData(K.src, K.requestOptions).then((x) => {
        ye.render(x, E, K.options).then(() => {
          re("rendered");
        }).catch((v) => {
          ye.render("", E, K.options), re("error", v);
        });
      }).catch((x) => {
        ye.render("", E, K.options), re("error", x);
      });
    }
    return We(() => {
      K.src && M();
    }), He(() => K.src, () => {
      K.src ? M() : ye.render("", C.value, K.options).then(() => {
        re("rendered");
      });
    }), {
      rootRef: C
    };
  }
}), Oe = {};
var tt = /* @__PURE__ */ Qe(
  et,
  Ye,
  Je,
  !1,
  rt,
  null,
  null,
  null
);
function rt(K) {
  for (let re in Oe)
    this[re] = Oe[re];
}
const Pe = /* @__PURE__ */ function() {
  return tt.exports;
}();
Pe.install = function(K) {
  K.component(Pe.name, Pe);
};
export {
  Pe as default
};
